
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00000d0e  00000da2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800134  00800134  00000dd6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000dd6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00000e44  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c18  00000000  00000000  00000fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000db1  00000000  00000000  00002bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dfd  00000000  00000000  000039ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b8  00000000  00000000  000047ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ba  00000000  00000000  00004b64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b40  00000000  00000000  0000531e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00005e5e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 b8 04 	jmp	0x970	; 0x970 <__vector_23>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <malloc+0x88>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	11 e0       	ldi	r17, 0x01	; 1
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	ee e0       	ldi	r30, 0x0E	; 14
 37c:	fd e0       	ldi	r31, 0x0D	; 13
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	a4 33       	cpi	r26, 0x34	; 52
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	a4 e3       	ldi	r26, 0x34	; 52
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	a5 34       	cpi	r26, 0x45	; 69
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 8d 02 	call	0x51a	; 0x51a <main>
 39e:	0c 94 85 06 	jmp	0xd0a	; 0xd0a <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <ADC_read>:
 3a6:	80 68       	ori	r24, 0x80	; 128
 3a8:	e0 e0       	ldi	r30, 0x00	; 0
 3aa:	f4 e1       	ldi	r31, 0x14	; 20
 3ac:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ae:	8b ee       	ldi	r24, 0xEB	; 235
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	01 97       	sbiw	r24, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <ADC_read+0xc>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <ADC_read+0x12>
 3b8:	80 81       	ld	r24, Z
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	08 95       	ret

000003be <joystick_calibrate>:
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 3c6:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <x_middle_position+0x1>
 3ca:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <x_middle_position>
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 3d6:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <y_middle_position+0x1>
 3da:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <y_middle_position>
 3de:	08 95       	ret

000003e0 <MAP>:
 3e0:	0f 93       	push	r16
 3e2:	1f 93       	push	r17
 3e4:	fc 01       	movw	r30, r24
 3e6:	e6 1b       	sub	r30, r22
 3e8:	f7 0b       	sbc	r31, r23
 3ea:	02 1b       	sub	r16, r18
 3ec:	13 0b       	sbc	r17, r19
 3ee:	e0 9f       	mul	r30, r16
 3f0:	c0 01       	movw	r24, r0
 3f2:	e1 9f       	mul	r30, r17
 3f4:	90 0d       	add	r25, r0
 3f6:	f0 9f       	mul	r31, r16
 3f8:	90 0d       	add	r25, r0
 3fa:	11 24       	eor	r1, r1
 3fc:	fa 01       	movw	r30, r20
 3fe:	e6 1b       	sub	r30, r22
 400:	f7 0b       	sbc	r31, r23
 402:	bf 01       	movw	r22, r30
 404:	0e 94 ce 04 	call	0x99c	; 0x99c <__divmodhi4>
 408:	c9 01       	movw	r24, r18
 40a:	86 0f       	add	r24, r22
 40c:	97 1f       	adc	r25, r23
 40e:	1f 91       	pop	r17
 410:	0f 91       	pop	r16
 412:	08 95       	ret

00000414 <joystick_position_read>:
 414:	cf 92       	push	r12
 416:	df 92       	push	r13
 418:	ef 92       	push	r14
 41a:	ff 92       	push	r15
 41c:	0f 93       	push	r16
 41e:	1f 93       	push	r17
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	90 e0       	ldi	r25, 0x00	; 0
 424:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 428:	20 91 37 01 	lds	r18, 0x0137	; 0x800137 <x_middle_position>
 42c:	30 91 38 01 	lds	r19, 0x0138	; 0x800138 <x_middle_position+0x1>
 430:	82 17       	cp	r24, r18
 432:	93 07       	cpc	r25, r19
 434:	74 f4       	brge	.+28     	; 0x452 <joystick_position_read+0x3e>
 436:	40 91 37 01 	lds	r20, 0x0137	; 0x800137 <x_middle_position>
 43a:	50 91 38 01 	lds	r21, 0x0138	; 0x800138 <x_middle_position+0x1>
 43e:	00 e0       	ldi	r16, 0x00	; 0
 440:	10 e0       	ldi	r17, 0x00	; 0
 442:	2c e9       	ldi	r18, 0x9C	; 156
 444:	3f ef       	ldi	r19, 0xFF	; 255
 446:	61 e0       	ldi	r22, 0x01	; 1
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <MAP>
 44e:	6c 01       	movw	r12, r24
 450:	0d c0       	rjmp	.+26     	; 0x46c <joystick_position_read+0x58>
 452:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <x_middle_position>
 456:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <x_middle_position+0x1>
 45a:	04 e6       	ldi	r16, 0x64	; 100
 45c:	10 e0       	ldi	r17, 0x00	; 0
 45e:	20 e0       	ldi	r18, 0x00	; 0
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	4f ef       	ldi	r20, 0xFF	; 255
 464:	50 e0       	ldi	r21, 0x00	; 0
 466:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <MAP>
 46a:	6c 01       	movw	r12, r24
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 474:	20 91 39 01 	lds	r18, 0x0139	; 0x800139 <y_middle_position>
 478:	30 91 3a 01 	lds	r19, 0x013A	; 0x80013a <y_middle_position+0x1>
 47c:	82 17       	cp	r24, r18
 47e:	93 07       	cpc	r25, r19
 480:	74 f4       	brge	.+28     	; 0x49e <joystick_position_read+0x8a>
 482:	40 91 39 01 	lds	r20, 0x0139	; 0x800139 <y_middle_position>
 486:	50 91 3a 01 	lds	r21, 0x013A	; 0x80013a <y_middle_position+0x1>
 48a:	00 e0       	ldi	r16, 0x00	; 0
 48c:	10 e0       	ldi	r17, 0x00	; 0
 48e:	2c e9       	ldi	r18, 0x9C	; 156
 490:	3f ef       	ldi	r19, 0xFF	; 255
 492:	61 e0       	ldi	r22, 0x01	; 1
 494:	70 e0       	ldi	r23, 0x00	; 0
 496:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <MAP>
 49a:	7c 01       	movw	r14, r24
 49c:	0d c0       	rjmp	.+26     	; 0x4b8 <joystick_position_read+0xa4>
 49e:	60 91 39 01 	lds	r22, 0x0139	; 0x800139 <y_middle_position>
 4a2:	70 91 3a 01 	lds	r23, 0x013A	; 0x80013a <y_middle_position+0x1>
 4a6:	04 e6       	ldi	r16, 0x64	; 100
 4a8:	10 e0       	ldi	r17, 0x00	; 0
 4aa:	20 e0       	ldi	r18, 0x00	; 0
 4ac:	30 e0       	ldi	r19, 0x00	; 0
 4ae:	4f ef       	ldi	r20, 0xFF	; 255
 4b0:	50 e0       	ldi	r21, 0x00	; 0
 4b2:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <MAP>
 4b6:	7c 01       	movw	r14, r24
 4b8:	c7 01       	movw	r24, r14
 4ba:	b6 01       	movw	r22, r12
 4bc:	1f 91       	pop	r17
 4be:	0f 91       	pop	r16
 4c0:	ff 90       	pop	r15
 4c2:	ef 90       	pop	r14
 4c4:	df 90       	pop	r13
 4c6:	cf 90       	pop	r12
 4c8:	08 95       	ret

000004ca <joystick_direction_read>:
 4ca:	cf 93       	push	r28
 4cc:	df 93       	push	r29
 4ce:	d0 e0       	ldi	r29, 0x00	; 0
 4d0:	c0 e0       	ldi	r28, 0x00	; 0
 4d2:	0e 94 0a 02 	call	0x414	; 0x414 <joystick_position_read>
 4d6:	9b 01       	movw	r18, r22
 4d8:	2c 59       	subi	r18, 0x9C	; 156
 4da:	3f 4f       	sbci	r19, 0xFF	; 255
 4dc:	2a 35       	cpi	r18, 0x5A	; 90
 4de:	31 05       	cpc	r19, r1
 4e0:	10 f4       	brcc	.+4      	; 0x4e6 <joystick_direction_read+0x1c>
 4e2:	d1 e0       	ldi	r29, 0x01	; 1
 4e4:	07 c0       	rjmp	.+14     	; 0x4f4 <joystick_direction_read+0x2a>
 4e6:	9b 01       	movw	r18, r22
 4e8:	2b 50       	subi	r18, 0x0B	; 11
 4ea:	31 09       	sbc	r19, r1
 4ec:	2a 35       	cpi	r18, 0x5A	; 90
 4ee:	31 05       	cpc	r19, r1
 4f0:	08 f4       	brcc	.+2      	; 0x4f4 <joystick_direction_read+0x2a>
 4f2:	d2 e0       	ldi	r29, 0x02	; 2
 4f4:	9c 01       	movw	r18, r24
 4f6:	2b 50       	subi	r18, 0x0B	; 11
 4f8:	31 09       	sbc	r19, r1
 4fa:	2a 35       	cpi	r18, 0x5A	; 90
 4fc:	31 05       	cpc	r19, r1
 4fe:	10 f4       	brcc	.+4      	; 0x504 <__stack+0x5>
 500:	c1 e0       	ldi	r28, 0x01	; 1
 502:	06 c0       	rjmp	.+12     	; 0x510 <__stack+0x11>
 504:	8c 59       	subi	r24, 0x9C	; 156
 506:	9f 4f       	sbci	r25, 0xFF	; 255
 508:	8a 35       	cpi	r24, 0x5A	; 90
 50a:	91 05       	cpc	r25, r1
 50c:	08 f4       	brcc	.+2      	; 0x510 <__stack+0x11>
 50e:	c2 e0       	ldi	r28, 0x02	; 2
 510:	8d 2f       	mov	r24, r29
 512:	9c 2f       	mov	r25, r28
 514:	df 91       	pop	r29
 516:	cf 91       	pop	r28
 518:	08 95       	ret

0000051a <main>:
// left slider: PWM PB4 -> AIN2 / channel 2
// right slider: PWM PD1 -> AIN3 / channel 3

int main(void)
{
	sei();  //Enable global interrupts	
 51a:	78 94       	sei
	
	UART_init();
 51c:	0e 94 a8 04 	call	0x950	; 0x950 <UART_init>
	XMEM_init();
 520:	0e 94 c7 04 	call	0x98e	; 0x98e <XMEM_init>
	joystick_calibrate();
 524:	0e 94 df 01 	call	0x3be	; 0x3be <joystick_calibrate>
	
	//OLED setup
	oled_init();
 528:	0e 94 94 03 	call	0x728	; 0x728 <oled_init>
	oled_reset();
 52c:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <oled_reset>
	oled_set_brigthness(255);
 530:	8f ef       	ldi	r24, 0xFF	; 255
 532:	0e 94 11 04 	call	0x822	; 0x822 <oled_set_brigthness>
	
	//OLED print test
	//oled_arrow_at_pos(1, 0);
	//oled_print("Hello", 1, font_size);
	//oled_print("Hello 2", 2, 1);
	 DDRB	&= ~(1 << DDB1);
 536:	87 b3       	in	r24, 0x17	; 23
 538:	8d 7f       	andi	r24, 0xFD	; 253
 53a:	87 bb       	out	0x17, r24	; 23
	 PORTB	|= (1 << PB1); 
 53c:	88 b3       	in	r24, 0x18	; 24
 53e:	82 60       	ori	r24, 0x02	; 2
 540:	88 bb       	out	0x18, r24	; 24
	 uint8_t trigger;
	
	
		
	while(1) {	
		menu_print();		
 542:	0e 94 a9 02 	call	0x552	; 0x552 <menu_print>
		move_arrow();
 546:	0e 94 db 02 	call	0x5b6	; 0x5b6 <move_arrow>
		menu_choice();
 54a:	0e 94 44 03 	call	0x688	; 0x688 <menu_choice>
		trigger = (PINB >>PB1) & (1);
 54e:	86 b3       	in	r24, 0x16	; 22
 550:	f8 cf       	rjmp	.-16     	; 0x542 <main+0x28>

00000552 <menu_print>:
volatile int main_menu = 0;
volatile int diff_menu = -1;
volatile uint8_t arrow_pos = 0;

void menu_print(void) {
	if (diff_menu == -1) {
 552:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <diff_menu>
 556:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <diff_menu+0x1>
 55a:	01 96       	adiw	r24, 0x01	; 1
 55c:	99 f4       	brne	.+38     	; 0x584 <menu_print+0x32>
		oled_print("Start", 0, 8);
 55e:	48 e0       	ldi	r20, 0x08	; 8
 560:	60 e0       	ldi	r22, 0x00	; 0
 562:	89 e0       	ldi	r24, 0x09	; 9
 564:	91 e0       	ldi	r25, 0x01	; 1
 566:	0e 94 4f 04 	call	0x89e	; 0x89e <oled_print>
		oled_print("Difficulty", 1, 8);
 56a:	48 e0       	ldi	r20, 0x08	; 8
 56c:	61 e0       	ldi	r22, 0x01	; 1
 56e:	8f e0       	ldi	r24, 0x0F	; 15
 570:	91 e0       	ldi	r25, 0x01	; 1
 572:	0e 94 4f 04 	call	0x89e	; 0x89e <oled_print>
		oled_print("Restart", 2, 8);
 576:	48 e0       	ldi	r20, 0x08	; 8
 578:	62 e0       	ldi	r22, 0x02	; 2
 57a:	8a e1       	ldi	r24, 0x1A	; 26
 57c:	91 e0       	ldi	r25, 0x01	; 1
 57e:	0e 94 4f 04 	call	0x89e	; 0x89e <oled_print>
 582:	08 95       	ret
	} else if (main_menu == -1) {
 584:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <main_menu>
 588:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <main_menu+0x1>
 58c:	01 96       	adiw	r24, 0x01	; 1
 58e:	91 f4       	brne	.+36     	; 0x5b4 <menu_print+0x62>
		oled_print("Easy", 0, 8);
 590:	48 e0       	ldi	r20, 0x08	; 8
 592:	60 e0       	ldi	r22, 0x00	; 0
 594:	82 e2       	ldi	r24, 0x22	; 34
 596:	91 e0       	ldi	r25, 0x01	; 1
 598:	0e 94 4f 04 	call	0x89e	; 0x89e <oled_print>
		oled_print("Medium", 1, 8);
 59c:	48 e0       	ldi	r20, 0x08	; 8
 59e:	61 e0       	ldi	r22, 0x01	; 1
 5a0:	87 e2       	ldi	r24, 0x27	; 39
 5a2:	91 e0       	ldi	r25, 0x01	; 1
 5a4:	0e 94 4f 04 	call	0x89e	; 0x89e <oled_print>
		oled_print("Hard", 2, 8);
 5a8:	48 e0       	ldi	r20, 0x08	; 8
 5aa:	62 e0       	ldi	r22, 0x02	; 2
 5ac:	8e e2       	ldi	r24, 0x2E	; 46
 5ae:	91 e0       	ldi	r25, 0x01	; 1
 5b0:	0e 94 4f 04 	call	0x89e	; 0x89e <oled_print>
 5b4:	08 95       	ret

000005b6 <move_arrow>:
	}
}

void move_arrow(void) {
 5b6:	cf 93       	push	r28
	uint8_t old_arrow_pos = arrow_pos;
 5b8:	c0 91 34 01 	lds	r28, 0x0134	; 0x800134 <__data_end>
	oled_arrow_at_pos(arrow_pos, 0);
 5bc:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 5c0:	60 e0       	ldi	r22, 0x00	; 0
 5c2:	0e 94 77 04 	call	0x8ee	; 0x8ee <oled_arrow_at_pos>
	
	joystick_direction dir = joystick_direction_read();
 5c6:	0e 94 65 02 	call	0x4ca	; 0x4ca <joystick_direction_read>
	if (dir.y_dir == UP && dir.x_dir == X_MID && arrow_pos >= 1) {
 5ca:	91 30       	cpi	r25, 0x01	; 1
 5cc:	a9 f4       	brne	.+42     	; 0x5f8 <move_arrow+0x42>
 5ce:	81 11       	cpse	r24, r1
 5d0:	13 c0       	rjmp	.+38     	; 0x5f8 <move_arrow+0x42>
 5d2:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
 5d6:	22 23       	and	r18, r18
 5d8:	79 f0       	breq	.+30     	; 0x5f8 <move_arrow+0x42>
		arrow_pos -= 1;
 5da:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 5de:	81 50       	subi	r24, 0x01	; 1
 5e0:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5e4:	2f ef       	ldi	r18, 0xFF	; 255
 5e6:	8f e7       	ldi	r24, 0x7F	; 127
 5e8:	94 e0       	ldi	r25, 0x04	; 4
 5ea:	21 50       	subi	r18, 0x01	; 1
 5ec:	80 40       	sbci	r24, 0x00	; 0
 5ee:	90 40       	sbci	r25, 0x00	; 0
 5f0:	e1 f7       	brne	.-8      	; 0x5ea <move_arrow+0x34>
 5f2:	00 c0       	rjmp	.+0      	; 0x5f4 <move_arrow+0x3e>
 5f4:	00 00       	nop
 5f6:	3f c0       	rjmp	.+126    	; 0x676 <move_arrow+0xc0>
		_delay_ms(300);
	} else if (dir.y_dir == UP && dir.x_dir == X_MID && arrow_pos == 0) {
 5f8:	91 30       	cpi	r25, 0x01	; 1
 5fa:	91 f4       	brne	.+36     	; 0x620 <move_arrow+0x6a>
 5fc:	81 11       	cpse	r24, r1
 5fe:	10 c0       	rjmp	.+32     	; 0x620 <move_arrow+0x6a>
 600:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
 604:	21 11       	cpse	r18, r1
 606:	0c c0       	rjmp	.+24     	; 0x620 <move_arrow+0x6a>
		arrow_pos = 0;
 608:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <__data_end>
 60c:	2f ef       	ldi	r18, 0xFF	; 255
 60e:	8f e7       	ldi	r24, 0x7F	; 127
 610:	94 e0       	ldi	r25, 0x04	; 4
 612:	21 50       	subi	r18, 0x01	; 1
 614:	80 40       	sbci	r24, 0x00	; 0
 616:	90 40       	sbci	r25, 0x00	; 0
 618:	e1 f7       	brne	.-8      	; 0x612 <move_arrow+0x5c>
 61a:	00 c0       	rjmp	.+0      	; 0x61c <move_arrow+0x66>
 61c:	00 00       	nop
 61e:	2b c0       	rjmp	.+86     	; 0x676 <move_arrow+0xc0>
		_delay_ms(300);
	} else if (dir.y_dir == DOWN && dir.x_dir == X_MID && arrow_pos <= 2) {
 620:	92 30       	cpi	r25, 0x02	; 2
 622:	a9 f4       	brne	.+42     	; 0x64e <move_arrow+0x98>
 624:	81 11       	cpse	r24, r1
 626:	13 c0       	rjmp	.+38     	; 0x64e <move_arrow+0x98>
 628:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
 62c:	23 30       	cpi	r18, 0x03	; 3
 62e:	78 f4       	brcc	.+30     	; 0x64e <move_arrow+0x98>
		arrow_pos += 1;
 630:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 634:	8f 5f       	subi	r24, 0xFF	; 255
 636:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
 63a:	2f ef       	ldi	r18, 0xFF	; 255
 63c:	8f e7       	ldi	r24, 0x7F	; 127
 63e:	94 e0       	ldi	r25, 0x04	; 4
 640:	21 50       	subi	r18, 0x01	; 1
 642:	80 40       	sbci	r24, 0x00	; 0
 644:	90 40       	sbci	r25, 0x00	; 0
 646:	e1 f7       	brne	.-8      	; 0x640 <move_arrow+0x8a>
 648:	00 c0       	rjmp	.+0      	; 0x64a <move_arrow+0x94>
 64a:	00 00       	nop
 64c:	14 c0       	rjmp	.+40     	; 0x676 <move_arrow+0xc0>
		_delay_ms(300);
	} else if (dir.y_dir == DOWN && dir.x_dir == X_MID && arrow_pos == 2) {
 64e:	92 30       	cpi	r25, 0x02	; 2
 650:	91 f4       	brne	.+36     	; 0x676 <move_arrow+0xc0>
 652:	81 11       	cpse	r24, r1
 654:	10 c0       	rjmp	.+32     	; 0x676 <move_arrow+0xc0>
 656:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 65a:	82 30       	cpi	r24, 0x02	; 2
 65c:	61 f4       	brne	.+24     	; 0x676 <move_arrow+0xc0>
		arrow_pos = 3;
 65e:	83 e0       	ldi	r24, 0x03	; 3
 660:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
 664:	2f ef       	ldi	r18, 0xFF	; 255
 666:	8f e7       	ldi	r24, 0x7F	; 127
 668:	94 e0       	ldi	r25, 0x04	; 4
 66a:	21 50       	subi	r18, 0x01	; 1
 66c:	80 40       	sbci	r24, 0x00	; 0
 66e:	90 40       	sbci	r25, 0x00	; 0
 670:	e1 f7       	brne	.-8      	; 0x66a <move_arrow+0xb4>
 672:	00 c0       	rjmp	.+0      	; 0x674 <move_arrow+0xbe>
 674:	00 00       	nop
		_delay_ms(300);
	} else {}
	
	if (old_arrow_pos != arrow_pos) {
 676:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 67a:	c8 17       	cp	r28, r24
 67c:	19 f0       	breq	.+6      	; 0x684 <move_arrow+0xce>
		oled_del_arrow_at_pos(old_arrow_pos);
 67e:	8c 2f       	mov	r24, r28
 680:	0e 94 86 04 	call	0x90c	; 0x90c <oled_del_arrow_at_pos>
	}
}
 684:	cf 91       	pop	r28
 686:	08 95       	ret

00000688 <menu_choice>:

void menu_choice(void) {
	joystick_direction dir = joystick_direction_read();
 688:	0e 94 65 02 	call	0x4ca	; 0x4ca <joystick_direction_read>
	if (main_menu >= 0 && arrow_pos == 1 && dir.x_dir == RIGHT) {
 68c:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <main_menu>
 690:	30 91 36 01 	lds	r19, 0x0136	; 0x800136 <main_menu+0x1>
 694:	33 23       	and	r19, r19
 696:	f4 f0       	brlt	.+60     	; 0x6d4 <menu_choice+0x4c>
 698:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <__data_end>
 69c:	91 30       	cpi	r25, 0x01	; 1
 69e:	d1 f4       	brne	.+52     	; 0x6d4 <menu_choice+0x4c>
 6a0:	82 30       	cpi	r24, 0x02	; 2
 6a2:	c1 f4       	brne	.+48     	; 0x6d4 <menu_choice+0x4c>
		oled_reset();
 6a4:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <oled_reset>
		main_menu = -1;
 6a8:	8f ef       	ldi	r24, 0xFF	; 255
 6aa:	9f ef       	ldi	r25, 0xFF	; 255
 6ac:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <main_menu+0x1>
 6b0:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <main_menu>
		diff_menu = 0;
 6b4:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <diff_menu+0x1>
 6b8:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <diff_menu>
 6bc:	2f ef       	ldi	r18, 0xFF	; 255
 6be:	8f e7       	ldi	r24, 0x7F	; 127
 6c0:	94 e0       	ldi	r25, 0x04	; 4
 6c2:	21 50       	subi	r18, 0x01	; 1
 6c4:	80 40       	sbci	r24, 0x00	; 0
 6c6:	90 40       	sbci	r25, 0x00	; 0
 6c8:	e1 f7       	brne	.-8      	; 0x6c2 <menu_choice+0x3a>
 6ca:	00 c0       	rjmp	.+0      	; 0x6cc <menu_choice+0x44>
 6cc:	00 00       	nop
		_delay_ms(300);
		menu_print();
 6ce:	0e 94 a9 02 	call	0x552	; 0x552 <menu_print>
 6d2:	08 95       	ret
	} else if (diff_menu >= 0 && arrow_pos == 1 && dir.x_dir == LEFT) {
 6d4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <diff_menu>
 6d8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <diff_menu+0x1>
 6dc:	33 23       	and	r19, r19
 6de:	ec f0       	brlt	.+58     	; 0x71a <menu_choice+0x92>
 6e0:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <__data_end>
 6e4:	91 30       	cpi	r25, 0x01	; 1
 6e6:	c9 f4       	brne	.+50     	; 0x71a <menu_choice+0x92>
 6e8:	81 30       	cpi	r24, 0x01	; 1
 6ea:	b9 f4       	brne	.+46     	; 0x71a <menu_choice+0x92>
		oled_reset();
 6ec:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <oled_reset>
		main_menu = 0;
 6f0:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <main_menu+0x1>
 6f4:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <main_menu>
		diff_menu = -1;
 6f8:	8f ef       	ldi	r24, 0xFF	; 255
 6fa:	9f ef       	ldi	r25, 0xFF	; 255
 6fc:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <diff_menu+0x1>
 700:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <diff_menu>
 704:	2f ef       	ldi	r18, 0xFF	; 255
 706:	8f e7       	ldi	r24, 0x7F	; 127
 708:	94 e0       	ldi	r25, 0x04	; 4
 70a:	21 50       	subi	r18, 0x01	; 1
 70c:	80 40       	sbci	r24, 0x00	; 0
 70e:	90 40       	sbci	r25, 0x00	; 0
 710:	e1 f7       	brne	.-8      	; 0x70a <menu_choice+0x82>
 712:	00 c0       	rjmp	.+0      	; 0x714 <menu_choice+0x8c>
 714:	00 00       	nop
		_delay_ms(300);
		menu_print();
 716:	0e 94 a9 02 	call	0x552	; 0x552 <menu_print>
 71a:	08 95       	ret

0000071c <write_oled_command>:
#include "fonts.h"
#include <string.h>

void write_oled_command(uint8_t command) {
	volatile char *oled_command = (char *) 0x1000;
	oled_command[0] = command;
 71c:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xebb>
 720:	08 95       	ret

00000722 <write_oled_data>:
}

void write_oled_data(uint8_t data) {
	volatile char *oled_data = (char *) 0x1200;
	oled_data[0] = data;
 722:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x10bb>
 726:	08 95       	ret

00000728 <oled_init>:
}

//9.4 Recommended Software Initialization
void oled_init(void) {
	write_oled_command(0xAE); //display off
 728:	8e ea       	ldi	r24, 0xAE	; 174
 72a:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xA1); //segment remap
 72e:	81 ea       	ldi	r24, 0xA1	; 161
 730:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x12);
 734:	82 e1       	ldi	r24, 0x12	; 18
 736:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xC8); //common output direction: com63~com0
 73a:	88 ec       	ldi	r24, 0xC8	; 200
 73c:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xA8); //multiplex ration mode:63
 740:	88 ea       	ldi	r24, 0xA8	; 168
 742:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x3F);
 746:	8f e3       	ldi	r24, 0x3F	; 63
 748:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xD5); //display divide ratio/osc. freq. mode
 74c:	85 ed       	ldi	r24, 0xD5	; 213
 74e:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x080);
 752:	80 e8       	ldi	r24, 0x80	; 128
 754:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x81); //contrast control
 758:	81 e8       	ldi	r24, 0x81	; 129
 75a:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x50);
 75e:	80 e5       	ldi	r24, 0x50	; 80
 760:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xD9); //set pre-charge period
 764:	89 ed       	ldi	r24, 0xD9	; 217
 766:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x21);
 76a:	81 e2       	ldi	r24, 0x21	; 33
 76c:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x20); //set memory adressing mode
 770:	80 e2       	ldi	r24, 0x20	; 32
 772:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x02);
 776:	82 e0       	ldi	r24, 0x02	; 2
 778:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xDB); //VCOM deselect mode
 77c:	8b ed       	ldi	r24, 0xDB	; 219
 77e:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x30); 
 782:	80 e3       	ldi	r24, 0x30	; 48
 784:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xAD); //master configuration
 788:	8d ea       	ldi	r24, 0xAD	; 173
 78a:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x00);
 78e:	80 e0       	ldi	r24, 0x00	; 0
 790:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xA4); //out follows RAM content
 794:	84 ea       	ldi	r24, 0xA4	; 164
 796:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xA6); //set normal display
 79a:	86 ea       	ldi	r24, 0xA6	; 166
 79c:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0xAF); //display on
 7a0:	8f ea       	ldi	r24, 0xAF	; 175
 7a2:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
 7a6:	08 95       	ret

000007a8 <oled_goto_line>:
}

void oled_goto_line(uint8_t line) {
	write_oled_command(0xB0 + line); //Set row 0 - 7
 7a8:	80 55       	subi	r24, 0x50	; 80
 7aa:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
 7ae:	08 95       	ret

000007b0 <oled_goto_column>:
}

void oled_goto_column(uint8_t column) {
 7b0:	cf 93       	push	r28
 7b2:	c8 2f       	mov	r28, r24
	write_oled_command(0x00 + (column % 16)); //lower nibble of column / last 4 bits of column
 7b4:	8f 70       	andi	r24, 0x0F	; 15
 7b6:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(0x10 + (column / 16)); //higher nibble of column / first 4 bits of column
 7ba:	8c 2f       	mov	r24, r28
 7bc:	82 95       	swap	r24
 7be:	8f 70       	andi	r24, 0x0F	; 15
 7c0:	80 5f       	subi	r24, 0xF0	; 240
 7c2:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
}
 7c6:	cf 91       	pop	r28
 7c8:	08 95       	ret

000007ca <oled_clear_line>:

void oled_clear_line(uint8_t line) {
 7ca:	cf 93       	push	r28
 7cc:	df 93       	push	r29
	oled_goto_line(line);
 7ce:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <oled_goto_line>
	for (int j=0; j<127; j++) { //Every row has 128 columns with length of 8 pixels/bits
 7d2:	c0 e0       	ldi	r28, 0x00	; 0
 7d4:	d0 e0       	ldi	r29, 0x00	; 0
 7d6:	07 c0       	rjmp	.+14     	; 0x7e6 <oled_clear_line+0x1c>
		oled_goto_column(j);
 7d8:	8c 2f       	mov	r24, r28
 7da:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <oled_goto_column>
		write_oled_data(0x00);
 7de:	80 e0       	ldi	r24, 0x00	; 0
 7e0:	0e 94 91 03 	call	0x722	; 0x722 <write_oled_data>
	write_oled_command(0x10 + (column / 16)); //higher nibble of column / first 4 bits of column
}

void oled_clear_line(uint8_t line) {
	oled_goto_line(line);
	for (int j=0; j<127; j++) { //Every row has 128 columns with length of 8 pixels/bits
 7e4:	21 96       	adiw	r28, 0x01	; 1
 7e6:	cf 37       	cpi	r28, 0x7F	; 127
 7e8:	d1 05       	cpc	r29, r1
 7ea:	b4 f3       	brlt	.-20     	; 0x7d8 <oled_clear_line+0xe>
		oled_goto_column(j);
		write_oled_data(0x00);
	}
}
 7ec:	df 91       	pop	r29
 7ee:	cf 91       	pop	r28
 7f0:	08 95       	ret

000007f2 <oled_reset>:

void oled_reset() {
 7f2:	cf 93       	push	r28
 7f4:	df 93       	push	r29
	for (int i=0; i<8; i++) {
 7f6:	c0 e0       	ldi	r28, 0x00	; 0
 7f8:	d0 e0       	ldi	r29, 0x00	; 0
 7fa:	04 c0       	rjmp	.+8      	; 0x804 <oled_reset+0x12>
		oled_clear_line(i);
 7fc:	8c 2f       	mov	r24, r28
 7fe:	0e 94 e5 03 	call	0x7ca	; 0x7ca <oled_clear_line>
		write_oled_data(0x00);
	}
}

void oled_reset() {
	for (int i=0; i<8; i++) {
 802:	21 96       	adiw	r28, 0x01	; 1
 804:	c8 30       	cpi	r28, 0x08	; 8
 806:	d1 05       	cpc	r29, r1
 808:	cc f3       	brlt	.-14     	; 0x7fc <oled_reset+0xa>
		oled_clear_line(i);
	}
}
 80a:	df 91       	pop	r29
 80c:	cf 91       	pop	r28
 80e:	08 95       	ret

00000810 <oled_pos>:

	
void oled_pos(uint8_t row, uint8_t column) {
 810:	cf 93       	push	r28
 812:	c6 2f       	mov	r28, r22
	oled_goto_line(row);
 814:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <oled_goto_line>
	oled_goto_column(column);
 818:	8c 2f       	mov	r24, r28
 81a:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <oled_goto_column>

}
 81e:	cf 91       	pop	r28
 820:	08 95       	ret

00000822 <oled_set_brigthness>:

void oled_set_brigthness(uint8_t lvl) {
 822:	cf 93       	push	r28
 824:	c8 2f       	mov	r28, r24
	write_oled_command(0x81);
 826:	81 e8       	ldi	r24, 0x81	; 129
 828:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
	write_oled_command(lvl);
 82c:	8c 2f       	mov	r24, r28
 82e:	0e 94 8e 03 	call	0x71c	; 0x71c <write_oled_command>
}
 832:	cf 91       	pop	r28
 834:	08 95       	ret

00000836 <oled_print_char>:

void oled_print_char(char str, uint8_t row, uint8_t column) {
 836:	df 92       	push	r13
 838:	ef 92       	push	r14
 83a:	ff 92       	push	r15
 83c:	0f 93       	push	r16
 83e:	1f 93       	push	r17
 840:	cf 93       	push	r28
 842:	df 93       	push	r29
 844:	d8 2e       	mov	r13, r24
 846:	d6 2f       	mov	r29, r22
	unsigned char letter;
	int i = column;
 848:	e4 2e       	mov	r14, r20
 84a:	f1 2c       	mov	r15, r1
 84c:	87 01       	movw	r16, r14
	for (i; i < (column + font_size); i++) {
 84e:	1a c0       	rjmp	.+52     	; 0x884 <oled_print_char+0x4e>
		letter = pgm_read_byte(&(font8[str-32][i-column]));
 850:	ed 2d       	mov	r30, r13
 852:	f0 e0       	ldi	r31, 0x00	; 0
 854:	b0 97       	sbiw	r30, 0x20	; 32
 856:	c8 01       	movw	r24, r16
 858:	8e 19       	sub	r24, r14
 85a:	9f 09       	sbc	r25, r15
 85c:	ee 0f       	add	r30, r30
 85e:	ff 1f       	adc	r31, r31
 860:	ee 0f       	add	r30, r30
 862:	ff 1f       	adc	r31, r31
 864:	ee 0f       	add	r30, r30
 866:	ff 1f       	adc	r31, r31
 868:	e8 0f       	add	r30, r24
 86a:	f9 1f       	adc	r31, r25
 86c:	e0 59       	subi	r30, 0x90	; 144
 86e:	ff 4f       	sbci	r31, 0xFF	; 255
 870:	c4 91       	lpm	r28, Z
		oled_pos(row,i);
 872:	60 2f       	mov	r22, r16
 874:	8d 2f       	mov	r24, r29
 876:	0e 94 08 04 	call	0x810	; 0x810 <oled_pos>
		write_oled_data(letter);
 87a:	8c 2f       	mov	r24, r28
 87c:	0e 94 91 03 	call	0x722	; 0x722 <write_oled_data>
}

void oled_print_char(char str, uint8_t row, uint8_t column) {
	unsigned char letter;
	int i = column;
	for (i; i < (column + font_size); i++) {
 880:	0f 5f       	subi	r16, 0xFF	; 255
 882:	1f 4f       	sbci	r17, 0xFF	; 255
 884:	c7 01       	movw	r24, r14
 886:	08 96       	adiw	r24, 0x08	; 8
 888:	08 17       	cp	r16, r24
 88a:	19 07       	cpc	r17, r25
 88c:	0c f3       	brlt	.-62     	; 0x850 <oled_print_char+0x1a>
		letter = pgm_read_byte(&(font8[str-32][i-column]));
		oled_pos(row,i);
		write_oled_data(letter);
	}
}
 88e:	df 91       	pop	r29
 890:	cf 91       	pop	r28
 892:	1f 91       	pop	r17
 894:	0f 91       	pop	r16
 896:	ff 90       	pop	r15
 898:	ef 90       	pop	r14
 89a:	df 90       	pop	r13
 89c:	08 95       	ret

0000089e <oled_print>:

void oled_print(char string[], uint8_t row, uint8_t column) {
 89e:	ef 92       	push	r14
 8a0:	ff 92       	push	r15
 8a2:	0f 93       	push	r16
 8a4:	1f 93       	push	r17
 8a6:	cf 93       	push	r28
 8a8:	df 93       	push	r29
 8aa:	8c 01       	movw	r16, r24
 8ac:	e6 2e       	mov	r14, r22
 8ae:	f4 2e       	mov	r15, r20
	for (int i=0; i<strlen(string); i++) {
 8b0:	c0 e0       	ldi	r28, 0x00	; 0
 8b2:	d0 e0       	ldi	r29, 0x00	; 0
 8b4:	0b c0       	rjmp	.+22     	; 0x8cc <oled_print+0x2e>
		oled_print_char(string[i], row, column);
 8b6:	f8 01       	movw	r30, r16
 8b8:	ec 0f       	add	r30, r28
 8ba:	fd 1f       	adc	r31, r29
 8bc:	4f 2d       	mov	r20, r15
 8be:	6e 2d       	mov	r22, r14
 8c0:	80 81       	ld	r24, Z
 8c2:	0e 94 1b 04 	call	0x836	; 0x836 <oled_print_char>
		column = column + font_size;
 8c6:	88 e0       	ldi	r24, 0x08	; 8
 8c8:	f8 0e       	add	r15, r24
		write_oled_data(letter);
	}
}

void oled_print(char string[], uint8_t row, uint8_t column) {
	for (int i=0; i<strlen(string); i++) {
 8ca:	21 96       	adiw	r28, 0x01	; 1
 8cc:	f8 01       	movw	r30, r16
 8ce:	01 90       	ld	r0, Z+
 8d0:	00 20       	and	r0, r0
 8d2:	e9 f7       	brne	.-6      	; 0x8ce <oled_print+0x30>
 8d4:	31 97       	sbiw	r30, 0x01	; 1
 8d6:	e0 1b       	sub	r30, r16
 8d8:	f1 0b       	sbc	r31, r17
 8da:	ce 17       	cp	r28, r30
 8dc:	df 07       	cpc	r29, r31
 8de:	58 f3       	brcs	.-42     	; 0x8b6 <oled_print+0x18>
		oled_print_char(string[i], row, column);
		column = column + font_size;
	}
	
}
 8e0:	df 91       	pop	r29
 8e2:	cf 91       	pop	r28
 8e4:	1f 91       	pop	r17
 8e6:	0f 91       	pop	r16
 8e8:	ff 90       	pop	r15
 8ea:	ef 90       	pop	r14
 8ec:	08 95       	ret

000008ee <oled_arrow_at_pos>:

void oled_arrow_at_pos(uint8_t row, uint8_t column) {
	oled_pos(row, column);
 8ee:	0e 94 08 04 	call	0x810	; 0x810 <oled_pos>
	write_oled_data(0b00011000);
 8f2:	88 e1       	ldi	r24, 0x18	; 24
 8f4:	0e 94 91 03 	call	0x722	; 0x722 <write_oled_data>
	write_oled_data(0b01111110);
 8f8:	8e e7       	ldi	r24, 0x7E	; 126
 8fa:	0e 94 91 03 	call	0x722	; 0x722 <write_oled_data>
	write_oled_data(0b00111100);
 8fe:	8c e3       	ldi	r24, 0x3C	; 60
 900:	0e 94 91 03 	call	0x722	; 0x722 <write_oled_data>
	write_oled_data(0b00011000);
 904:	88 e1       	ldi	r24, 0x18	; 24
 906:	0e 94 91 03 	call	0x722	; 0x722 <write_oled_data>
 90a:	08 95       	ret

0000090c <oled_del_arrow_at_pos>:
}

void oled_del_arrow_at_pos(uint8_t row) {
 90c:	cf 93       	push	r28
 90e:	df 93       	push	r29
	oled_goto_line(row);
 910:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <oled_goto_line>
	for (int i=0; i<5; i++) {
 914:	c0 e0       	ldi	r28, 0x00	; 0
 916:	d0 e0       	ldi	r29, 0x00	; 0
 918:	07 c0       	rjmp	.+14     	; 0x928 <oled_del_arrow_at_pos+0x1c>
		oled_goto_column(i);
 91a:	8c 2f       	mov	r24, r28
 91c:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <oled_goto_column>
		write_oled_data(0x00);	
 920:	80 e0       	ldi	r24, 0x00	; 0
 922:	0e 94 91 03 	call	0x722	; 0x722 <write_oled_data>
	write_oled_data(0b00011000);
}

void oled_del_arrow_at_pos(uint8_t row) {
	oled_goto_line(row);
	for (int i=0; i<5; i++) {
 926:	21 96       	adiw	r28, 0x01	; 1
 928:	c5 30       	cpi	r28, 0x05	; 5
 92a:	d1 05       	cpc	r29, r1
 92c:	b4 f3       	brlt	.-20     	; 0x91a <oled_del_arrow_at_pos+0xe>
		oled_goto_column(i);
		write_oled_data(0x00);	
	}	
}
 92e:	df 91       	pop	r29
 930:	cf 91       	pop	r28
 932:	08 95       	ret

00000934 <UART_transmit>:
 934:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <transmissionComplete>
 938:	99 23       	and	r25, r25
 93a:	e1 f3       	breq	.-8      	; 0x934 <UART_transmit>
 93c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <transmissionComplete>
 940:	8c b9       	out	0x0c, r24	; 12
 942:	80 e0       	ldi	r24, 0x00	; 0
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	08 95       	ret

00000948 <UART_recive>:
 948:	5f 9b       	sbis	0x0b, 7	; 11
 94a:	fe cf       	rjmp	.-4      	; 0x948 <UART_recive>
 94c:	8c b1       	in	r24, 0x0c	; 12
 94e:	08 95       	ret

00000950 <UART_init>:
 950:	10 bc       	out	0x20, r1	; 32
 952:	8f e1       	ldi	r24, 0x1F	; 31
 954:	89 b9       	out	0x09, r24	; 9
 956:	8a b1       	in	r24, 0x0a	; 10
 958:	88 65       	ori	r24, 0x58	; 88
 95a:	8a b9       	out	0x0a, r24	; 10
 95c:	80 b5       	in	r24, 0x20	; 32
 95e:	8e 68       	ori	r24, 0x8E	; 142
 960:	80 bd       	out	0x20, r24	; 32
 962:	64 ea       	ldi	r22, 0xA4	; 164
 964:	74 e0       	ldi	r23, 0x04	; 4
 966:	8a e9       	ldi	r24, 0x9A	; 154
 968:	94 e0       	ldi	r25, 0x04	; 4
 96a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <fdevopen>
 96e:	08 95       	ret

00000970 <__vector_23>:
 970:	1f 92       	push	r1
 972:	0f 92       	push	r0
 974:	0f b6       	in	r0, 0x3f	; 63
 976:	0f 92       	push	r0
 978:	11 24       	eor	r1, r1
 97a:	8f 93       	push	r24
 97c:	81 e0       	ldi	r24, 0x01	; 1
 97e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <transmissionComplete>
 982:	8f 91       	pop	r24
 984:	0f 90       	pop	r0
 986:	0f be       	out	0x3f, r0	; 63
 988:	0f 90       	pop	r0
 98a:	1f 90       	pop	r1
 98c:	18 95       	reti

0000098e <XMEM_init>:
 98e:	85 b7       	in	r24, 0x35	; 53
 990:	80 68       	ori	r24, 0x80	; 128
 992:	85 bf       	out	0x35, r24	; 53
 994:	80 b7       	in	r24, 0x30	; 48
 996:	80 62       	ori	r24, 0x20	; 32
 998:	80 bf       	out	0x30, r24	; 48
 99a:	08 95       	ret

0000099c <__divmodhi4>:
 99c:	97 fb       	bst	r25, 7
 99e:	07 2e       	mov	r0, r23
 9a0:	16 f4       	brtc	.+4      	; 0x9a6 <__divmodhi4+0xa>
 9a2:	00 94       	com	r0
 9a4:	07 d0       	rcall	.+14     	; 0x9b4 <__divmodhi4_neg1>
 9a6:	77 fd       	sbrc	r23, 7
 9a8:	09 d0       	rcall	.+18     	; 0x9bc <__divmodhi4_neg2>
 9aa:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <__udivmodhi4>
 9ae:	07 fc       	sbrc	r0, 7
 9b0:	05 d0       	rcall	.+10     	; 0x9bc <__divmodhi4_neg2>
 9b2:	3e f4       	brtc	.+14     	; 0x9c2 <__divmodhi4_exit>

000009b4 <__divmodhi4_neg1>:
 9b4:	90 95       	com	r25
 9b6:	81 95       	neg	r24
 9b8:	9f 4f       	sbci	r25, 0xFF	; 255
 9ba:	08 95       	ret

000009bc <__divmodhi4_neg2>:
 9bc:	70 95       	com	r23
 9be:	61 95       	neg	r22
 9c0:	7f 4f       	sbci	r23, 0xFF	; 255

000009c2 <__divmodhi4_exit>:
 9c2:	08 95       	ret

000009c4 <__udivmodhi4>:
 9c4:	aa 1b       	sub	r26, r26
 9c6:	bb 1b       	sub	r27, r27
 9c8:	51 e1       	ldi	r21, 0x11	; 17
 9ca:	07 c0       	rjmp	.+14     	; 0x9da <__udivmodhi4_ep>

000009cc <__udivmodhi4_loop>:
 9cc:	aa 1f       	adc	r26, r26
 9ce:	bb 1f       	adc	r27, r27
 9d0:	a6 17       	cp	r26, r22
 9d2:	b7 07       	cpc	r27, r23
 9d4:	10 f0       	brcs	.+4      	; 0x9da <__udivmodhi4_ep>
 9d6:	a6 1b       	sub	r26, r22
 9d8:	b7 0b       	sbc	r27, r23

000009da <__udivmodhi4_ep>:
 9da:	88 1f       	adc	r24, r24
 9dc:	99 1f       	adc	r25, r25
 9de:	5a 95       	dec	r21
 9e0:	a9 f7       	brne	.-22     	; 0x9cc <__udivmodhi4_loop>
 9e2:	80 95       	com	r24
 9e4:	90 95       	com	r25
 9e6:	bc 01       	movw	r22, r24
 9e8:	cd 01       	movw	r24, r26
 9ea:	08 95       	ret

000009ec <fdevopen>:
 9ec:	0f 93       	push	r16
 9ee:	1f 93       	push	r17
 9f0:	cf 93       	push	r28
 9f2:	df 93       	push	r29
 9f4:	00 97       	sbiw	r24, 0x00	; 0
 9f6:	31 f4       	brne	.+12     	; 0xa04 <fdevopen+0x18>
 9f8:	61 15       	cp	r22, r1
 9fa:	71 05       	cpc	r23, r1
 9fc:	19 f4       	brne	.+6      	; 0xa04 <fdevopen+0x18>
 9fe:	80 e0       	ldi	r24, 0x00	; 0
 a00:	90 e0       	ldi	r25, 0x00	; 0
 a02:	3a c0       	rjmp	.+116    	; 0xa78 <fdevopen+0x8c>
 a04:	8b 01       	movw	r16, r22
 a06:	ec 01       	movw	r28, r24
 a08:	6e e0       	ldi	r22, 0x0E	; 14
 a0a:	70 e0       	ldi	r23, 0x00	; 0
 a0c:	81 e0       	ldi	r24, 0x01	; 1
 a0e:	90 e0       	ldi	r25, 0x00	; 0
 a10:	0e 94 41 05 	call	0xa82	; 0xa82 <calloc>
 a14:	fc 01       	movw	r30, r24
 a16:	89 2b       	or	r24, r25
 a18:	91 f3       	breq	.-28     	; 0x9fe <fdevopen+0x12>
 a1a:	80 e8       	ldi	r24, 0x80	; 128
 a1c:	83 83       	std	Z+3, r24	; 0x03
 a1e:	01 15       	cp	r16, r1
 a20:	11 05       	cpc	r17, r1
 a22:	71 f0       	breq	.+28     	; 0xa40 <fdevopen+0x54>
 a24:	13 87       	std	Z+11, r17	; 0x0b
 a26:	02 87       	std	Z+10, r16	; 0x0a
 a28:	81 e8       	ldi	r24, 0x81	; 129
 a2a:	83 83       	std	Z+3, r24	; 0x03
 a2c:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <__iob>
 a30:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <__iob+0x1>
 a34:	89 2b       	or	r24, r25
 a36:	21 f4       	brne	.+8      	; 0xa40 <fdevopen+0x54>
 a38:	f0 93 3c 01 	sts	0x013C, r31	; 0x80013c <__iob+0x1>
 a3c:	e0 93 3b 01 	sts	0x013B, r30	; 0x80013b <__iob>
 a40:	20 97       	sbiw	r28, 0x00	; 0
 a42:	c9 f0       	breq	.+50     	; 0xa76 <fdevopen+0x8a>
 a44:	d1 87       	std	Z+9, r29	; 0x09
 a46:	c0 87       	std	Z+8, r28	; 0x08
 a48:	83 81       	ldd	r24, Z+3	; 0x03
 a4a:	82 60       	ori	r24, 0x02	; 2
 a4c:	83 83       	std	Z+3, r24	; 0x03
 a4e:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <__iob+0x2>
 a52:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <__iob+0x3>
 a56:	89 2b       	or	r24, r25
 a58:	71 f4       	brne	.+28     	; 0xa76 <fdevopen+0x8a>
 a5a:	f0 93 3e 01 	sts	0x013E, r31	; 0x80013e <__iob+0x3>
 a5e:	e0 93 3d 01 	sts	0x013D, r30	; 0x80013d <__iob+0x2>
 a62:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <__iob+0x4>
 a66:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <__iob+0x5>
 a6a:	89 2b       	or	r24, r25
 a6c:	21 f4       	brne	.+8      	; 0xa76 <fdevopen+0x8a>
 a6e:	f0 93 40 01 	sts	0x0140, r31	; 0x800140 <__iob+0x5>
 a72:	e0 93 3f 01 	sts	0x013F, r30	; 0x80013f <__iob+0x4>
 a76:	cf 01       	movw	r24, r30
 a78:	df 91       	pop	r29
 a7a:	cf 91       	pop	r28
 a7c:	1f 91       	pop	r17
 a7e:	0f 91       	pop	r16
 a80:	08 95       	ret

00000a82 <calloc>:
 a82:	0f 93       	push	r16
 a84:	1f 93       	push	r17
 a86:	cf 93       	push	r28
 a88:	df 93       	push	r29
 a8a:	86 9f       	mul	r24, r22
 a8c:	80 01       	movw	r16, r0
 a8e:	87 9f       	mul	r24, r23
 a90:	10 0d       	add	r17, r0
 a92:	96 9f       	mul	r25, r22
 a94:	10 0d       	add	r17, r0
 a96:	11 24       	eor	r1, r1
 a98:	c8 01       	movw	r24, r16
 a9a:	0e 94 5d 05 	call	0xaba	; 0xaba <malloc>
 a9e:	ec 01       	movw	r28, r24
 aa0:	00 97       	sbiw	r24, 0x00	; 0
 aa2:	29 f0       	breq	.+10     	; 0xaae <calloc+0x2c>
 aa4:	a8 01       	movw	r20, r16
 aa6:	60 e0       	ldi	r22, 0x00	; 0
 aa8:	70 e0       	ldi	r23, 0x00	; 0
 aaa:	0e 94 7e 06 	call	0xcfc	; 0xcfc <memset>
 aae:	ce 01       	movw	r24, r28
 ab0:	df 91       	pop	r29
 ab2:	cf 91       	pop	r28
 ab4:	1f 91       	pop	r17
 ab6:	0f 91       	pop	r16
 ab8:	08 95       	ret

00000aba <malloc>:
 aba:	0f 93       	push	r16
 abc:	1f 93       	push	r17
 abe:	cf 93       	push	r28
 ac0:	df 93       	push	r29
 ac2:	82 30       	cpi	r24, 0x02	; 2
 ac4:	91 05       	cpc	r25, r1
 ac6:	10 f4       	brcc	.+4      	; 0xacc <malloc+0x12>
 ac8:	82 e0       	ldi	r24, 0x02	; 2
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	e0 91 43 01 	lds	r30, 0x0143	; 0x800143 <__flp>
 ad0:	f0 91 44 01 	lds	r31, 0x0144	; 0x800144 <__flp+0x1>
 ad4:	20 e0       	ldi	r18, 0x00	; 0
 ad6:	30 e0       	ldi	r19, 0x00	; 0
 ad8:	a0 e0       	ldi	r26, 0x00	; 0
 ada:	b0 e0       	ldi	r27, 0x00	; 0
 adc:	30 97       	sbiw	r30, 0x00	; 0
 ade:	19 f1       	breq	.+70     	; 0xb26 <malloc+0x6c>
 ae0:	40 81       	ld	r20, Z
 ae2:	51 81       	ldd	r21, Z+1	; 0x01
 ae4:	02 81       	ldd	r16, Z+2	; 0x02
 ae6:	13 81       	ldd	r17, Z+3	; 0x03
 ae8:	48 17       	cp	r20, r24
 aea:	59 07       	cpc	r21, r25
 aec:	c8 f0       	brcs	.+50     	; 0xb20 <malloc+0x66>
 aee:	84 17       	cp	r24, r20
 af0:	95 07       	cpc	r25, r21
 af2:	69 f4       	brne	.+26     	; 0xb0e <malloc+0x54>
 af4:	10 97       	sbiw	r26, 0x00	; 0
 af6:	31 f0       	breq	.+12     	; 0xb04 <malloc+0x4a>
 af8:	12 96       	adiw	r26, 0x02	; 2
 afa:	0c 93       	st	X, r16
 afc:	12 97       	sbiw	r26, 0x02	; 2
 afe:	13 96       	adiw	r26, 0x03	; 3
 b00:	1c 93       	st	X, r17
 b02:	27 c0       	rjmp	.+78     	; 0xb52 <malloc+0x98>
 b04:	00 93 43 01 	sts	0x0143, r16	; 0x800143 <__flp>
 b08:	10 93 44 01 	sts	0x0144, r17	; 0x800144 <__flp+0x1>
 b0c:	22 c0       	rjmp	.+68     	; 0xb52 <malloc+0x98>
 b0e:	21 15       	cp	r18, r1
 b10:	31 05       	cpc	r19, r1
 b12:	19 f0       	breq	.+6      	; 0xb1a <malloc+0x60>
 b14:	42 17       	cp	r20, r18
 b16:	53 07       	cpc	r21, r19
 b18:	18 f4       	brcc	.+6      	; 0xb20 <malloc+0x66>
 b1a:	9a 01       	movw	r18, r20
 b1c:	bd 01       	movw	r22, r26
 b1e:	ef 01       	movw	r28, r30
 b20:	df 01       	movw	r26, r30
 b22:	f8 01       	movw	r30, r16
 b24:	db cf       	rjmp	.-74     	; 0xadc <malloc+0x22>
 b26:	21 15       	cp	r18, r1
 b28:	31 05       	cpc	r19, r1
 b2a:	f9 f0       	breq	.+62     	; 0xb6a <malloc+0xb0>
 b2c:	28 1b       	sub	r18, r24
 b2e:	39 0b       	sbc	r19, r25
 b30:	24 30       	cpi	r18, 0x04	; 4
 b32:	31 05       	cpc	r19, r1
 b34:	80 f4       	brcc	.+32     	; 0xb56 <malloc+0x9c>
 b36:	8a 81       	ldd	r24, Y+2	; 0x02
 b38:	9b 81       	ldd	r25, Y+3	; 0x03
 b3a:	61 15       	cp	r22, r1
 b3c:	71 05       	cpc	r23, r1
 b3e:	21 f0       	breq	.+8      	; 0xb48 <malloc+0x8e>
 b40:	fb 01       	movw	r30, r22
 b42:	93 83       	std	Z+3, r25	; 0x03
 b44:	82 83       	std	Z+2, r24	; 0x02
 b46:	04 c0       	rjmp	.+8      	; 0xb50 <malloc+0x96>
 b48:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <__flp+0x1>
 b4c:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__flp>
 b50:	fe 01       	movw	r30, r28
 b52:	32 96       	adiw	r30, 0x02	; 2
 b54:	44 c0       	rjmp	.+136    	; 0xbde <malloc+0x124>
 b56:	fe 01       	movw	r30, r28
 b58:	e2 0f       	add	r30, r18
 b5a:	f3 1f       	adc	r31, r19
 b5c:	81 93       	st	Z+, r24
 b5e:	91 93       	st	Z+, r25
 b60:	22 50       	subi	r18, 0x02	; 2
 b62:	31 09       	sbc	r19, r1
 b64:	39 83       	std	Y+1, r19	; 0x01
 b66:	28 83       	st	Y, r18
 b68:	3a c0       	rjmp	.+116    	; 0xbde <malloc+0x124>
 b6a:	20 91 41 01 	lds	r18, 0x0141	; 0x800141 <__brkval>
 b6e:	30 91 42 01 	lds	r19, 0x0142	; 0x800142 <__brkval+0x1>
 b72:	23 2b       	or	r18, r19
 b74:	41 f4       	brne	.+16     	; 0xb86 <malloc+0xcc>
 b76:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 b7a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 b7e:	30 93 42 01 	sts	0x0142, r19	; 0x800142 <__brkval+0x1>
 b82:	20 93 41 01 	sts	0x0141, r18	; 0x800141 <__brkval>
 b86:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b8a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b8e:	21 15       	cp	r18, r1
 b90:	31 05       	cpc	r19, r1
 b92:	41 f4       	brne	.+16     	; 0xba4 <malloc+0xea>
 b94:	2d b7       	in	r18, 0x3d	; 61
 b96:	3e b7       	in	r19, 0x3e	; 62
 b98:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 b9c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 ba0:	24 1b       	sub	r18, r20
 ba2:	35 0b       	sbc	r19, r21
 ba4:	e0 91 41 01 	lds	r30, 0x0141	; 0x800141 <__brkval>
 ba8:	f0 91 42 01 	lds	r31, 0x0142	; 0x800142 <__brkval+0x1>
 bac:	e2 17       	cp	r30, r18
 bae:	f3 07       	cpc	r31, r19
 bb0:	a0 f4       	brcc	.+40     	; 0xbda <malloc+0x120>
 bb2:	2e 1b       	sub	r18, r30
 bb4:	3f 0b       	sbc	r19, r31
 bb6:	28 17       	cp	r18, r24
 bb8:	39 07       	cpc	r19, r25
 bba:	78 f0       	brcs	.+30     	; 0xbda <malloc+0x120>
 bbc:	ac 01       	movw	r20, r24
 bbe:	4e 5f       	subi	r20, 0xFE	; 254
 bc0:	5f 4f       	sbci	r21, 0xFF	; 255
 bc2:	24 17       	cp	r18, r20
 bc4:	35 07       	cpc	r19, r21
 bc6:	48 f0       	brcs	.+18     	; 0xbda <malloc+0x120>
 bc8:	4e 0f       	add	r20, r30
 bca:	5f 1f       	adc	r21, r31
 bcc:	50 93 42 01 	sts	0x0142, r21	; 0x800142 <__brkval+0x1>
 bd0:	40 93 41 01 	sts	0x0141, r20	; 0x800141 <__brkval>
 bd4:	81 93       	st	Z+, r24
 bd6:	91 93       	st	Z+, r25
 bd8:	02 c0       	rjmp	.+4      	; 0xbde <malloc+0x124>
 bda:	e0 e0       	ldi	r30, 0x00	; 0
 bdc:	f0 e0       	ldi	r31, 0x00	; 0
 bde:	cf 01       	movw	r24, r30
 be0:	df 91       	pop	r29
 be2:	cf 91       	pop	r28
 be4:	1f 91       	pop	r17
 be6:	0f 91       	pop	r16
 be8:	08 95       	ret

00000bea <free>:
 bea:	cf 93       	push	r28
 bec:	df 93       	push	r29
 bee:	00 97       	sbiw	r24, 0x00	; 0
 bf0:	09 f4       	brne	.+2      	; 0xbf4 <free+0xa>
 bf2:	81 c0       	rjmp	.+258    	; 0xcf6 <free+0x10c>
 bf4:	fc 01       	movw	r30, r24
 bf6:	32 97       	sbiw	r30, 0x02	; 2
 bf8:	13 82       	std	Z+3, r1	; 0x03
 bfa:	12 82       	std	Z+2, r1	; 0x02
 bfc:	a0 91 43 01 	lds	r26, 0x0143	; 0x800143 <__flp>
 c00:	b0 91 44 01 	lds	r27, 0x0144	; 0x800144 <__flp+0x1>
 c04:	10 97       	sbiw	r26, 0x00	; 0
 c06:	81 f4       	brne	.+32     	; 0xc28 <free+0x3e>
 c08:	20 81       	ld	r18, Z
 c0a:	31 81       	ldd	r19, Z+1	; 0x01
 c0c:	82 0f       	add	r24, r18
 c0e:	93 1f       	adc	r25, r19
 c10:	20 91 41 01 	lds	r18, 0x0141	; 0x800141 <__brkval>
 c14:	30 91 42 01 	lds	r19, 0x0142	; 0x800142 <__brkval+0x1>
 c18:	28 17       	cp	r18, r24
 c1a:	39 07       	cpc	r19, r25
 c1c:	51 f5       	brne	.+84     	; 0xc72 <free+0x88>
 c1e:	f0 93 42 01 	sts	0x0142, r31	; 0x800142 <__brkval+0x1>
 c22:	e0 93 41 01 	sts	0x0141, r30	; 0x800141 <__brkval>
 c26:	67 c0       	rjmp	.+206    	; 0xcf6 <free+0x10c>
 c28:	ed 01       	movw	r28, r26
 c2a:	20 e0       	ldi	r18, 0x00	; 0
 c2c:	30 e0       	ldi	r19, 0x00	; 0
 c2e:	ce 17       	cp	r28, r30
 c30:	df 07       	cpc	r29, r31
 c32:	40 f4       	brcc	.+16     	; 0xc44 <free+0x5a>
 c34:	4a 81       	ldd	r20, Y+2	; 0x02
 c36:	5b 81       	ldd	r21, Y+3	; 0x03
 c38:	9e 01       	movw	r18, r28
 c3a:	41 15       	cp	r20, r1
 c3c:	51 05       	cpc	r21, r1
 c3e:	f1 f0       	breq	.+60     	; 0xc7c <free+0x92>
 c40:	ea 01       	movw	r28, r20
 c42:	f5 cf       	rjmp	.-22     	; 0xc2e <free+0x44>
 c44:	d3 83       	std	Z+3, r29	; 0x03
 c46:	c2 83       	std	Z+2, r28	; 0x02
 c48:	40 81       	ld	r20, Z
 c4a:	51 81       	ldd	r21, Z+1	; 0x01
 c4c:	84 0f       	add	r24, r20
 c4e:	95 1f       	adc	r25, r21
 c50:	c8 17       	cp	r28, r24
 c52:	d9 07       	cpc	r29, r25
 c54:	59 f4       	brne	.+22     	; 0xc6c <free+0x82>
 c56:	88 81       	ld	r24, Y
 c58:	99 81       	ldd	r25, Y+1	; 0x01
 c5a:	84 0f       	add	r24, r20
 c5c:	95 1f       	adc	r25, r21
 c5e:	02 96       	adiw	r24, 0x02	; 2
 c60:	91 83       	std	Z+1, r25	; 0x01
 c62:	80 83       	st	Z, r24
 c64:	8a 81       	ldd	r24, Y+2	; 0x02
 c66:	9b 81       	ldd	r25, Y+3	; 0x03
 c68:	93 83       	std	Z+3, r25	; 0x03
 c6a:	82 83       	std	Z+2, r24	; 0x02
 c6c:	21 15       	cp	r18, r1
 c6e:	31 05       	cpc	r19, r1
 c70:	29 f4       	brne	.+10     	; 0xc7c <free+0x92>
 c72:	f0 93 44 01 	sts	0x0144, r31	; 0x800144 <__flp+0x1>
 c76:	e0 93 43 01 	sts	0x0143, r30	; 0x800143 <__flp>
 c7a:	3d c0       	rjmp	.+122    	; 0xcf6 <free+0x10c>
 c7c:	e9 01       	movw	r28, r18
 c7e:	fb 83       	std	Y+3, r31	; 0x03
 c80:	ea 83       	std	Y+2, r30	; 0x02
 c82:	49 91       	ld	r20, Y+
 c84:	59 91       	ld	r21, Y+
 c86:	c4 0f       	add	r28, r20
 c88:	d5 1f       	adc	r29, r21
 c8a:	ec 17       	cp	r30, r28
 c8c:	fd 07       	cpc	r31, r29
 c8e:	61 f4       	brne	.+24     	; 0xca8 <free+0xbe>
 c90:	80 81       	ld	r24, Z
 c92:	91 81       	ldd	r25, Z+1	; 0x01
 c94:	84 0f       	add	r24, r20
 c96:	95 1f       	adc	r25, r21
 c98:	02 96       	adiw	r24, 0x02	; 2
 c9a:	e9 01       	movw	r28, r18
 c9c:	99 83       	std	Y+1, r25	; 0x01
 c9e:	88 83       	st	Y, r24
 ca0:	82 81       	ldd	r24, Z+2	; 0x02
 ca2:	93 81       	ldd	r25, Z+3	; 0x03
 ca4:	9b 83       	std	Y+3, r25	; 0x03
 ca6:	8a 83       	std	Y+2, r24	; 0x02
 ca8:	e0 e0       	ldi	r30, 0x00	; 0
 caa:	f0 e0       	ldi	r31, 0x00	; 0
 cac:	12 96       	adiw	r26, 0x02	; 2
 cae:	8d 91       	ld	r24, X+
 cb0:	9c 91       	ld	r25, X
 cb2:	13 97       	sbiw	r26, 0x03	; 3
 cb4:	00 97       	sbiw	r24, 0x00	; 0
 cb6:	19 f0       	breq	.+6      	; 0xcbe <free+0xd4>
 cb8:	fd 01       	movw	r30, r26
 cba:	dc 01       	movw	r26, r24
 cbc:	f7 cf       	rjmp	.-18     	; 0xcac <free+0xc2>
 cbe:	8d 91       	ld	r24, X+
 cc0:	9c 91       	ld	r25, X
 cc2:	11 97       	sbiw	r26, 0x01	; 1
 cc4:	9d 01       	movw	r18, r26
 cc6:	2e 5f       	subi	r18, 0xFE	; 254
 cc8:	3f 4f       	sbci	r19, 0xFF	; 255
 cca:	82 0f       	add	r24, r18
 ccc:	93 1f       	adc	r25, r19
 cce:	20 91 41 01 	lds	r18, 0x0141	; 0x800141 <__brkval>
 cd2:	30 91 42 01 	lds	r19, 0x0142	; 0x800142 <__brkval+0x1>
 cd6:	28 17       	cp	r18, r24
 cd8:	39 07       	cpc	r19, r25
 cda:	69 f4       	brne	.+26     	; 0xcf6 <free+0x10c>
 cdc:	30 97       	sbiw	r30, 0x00	; 0
 cde:	29 f4       	brne	.+10     	; 0xcea <free+0x100>
 ce0:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <__flp+0x1>
 ce4:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <__flp>
 ce8:	02 c0       	rjmp	.+4      	; 0xcee <free+0x104>
 cea:	13 82       	std	Z+3, r1	; 0x03
 cec:	12 82       	std	Z+2, r1	; 0x02
 cee:	b0 93 42 01 	sts	0x0142, r27	; 0x800142 <__brkval+0x1>
 cf2:	a0 93 41 01 	sts	0x0141, r26	; 0x800141 <__brkval>
 cf6:	df 91       	pop	r29
 cf8:	cf 91       	pop	r28
 cfa:	08 95       	ret

00000cfc <memset>:
 cfc:	dc 01       	movw	r26, r24
 cfe:	01 c0       	rjmp	.+2      	; 0xd02 <memset+0x6>
 d00:	6d 93       	st	X+, r22
 d02:	41 50       	subi	r20, 0x01	; 1
 d04:	50 40       	sbci	r21, 0x00	; 0
 d06:	e0 f7       	brcc	.-8      	; 0xd00 <memset+0x4>
 d08:	08 95       	ret

00000d0a <_exit>:
 d0a:	f8 94       	cli

00000d0c <__stop_program>:
 d0c:	ff cf       	rjmp	.-2      	; 0xd0c <__stop_program>
