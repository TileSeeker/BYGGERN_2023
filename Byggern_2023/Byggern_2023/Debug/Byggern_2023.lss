
Byggern_2023.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000992  00000a26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000992  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  00800110  00800110  00000a36  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a36  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00000aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001682  00000000  00000000  00000bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c77  00000000  00000000  0000227e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aae  00000000  00000000  00002ef5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000300  00000000  00000000  000039a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000735  00000000  00000000  00003ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000738  00000000  00000000  000043d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00004b11  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__vector_23>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__data_load_end+0x1a0>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	11 e0       	ldi	r17, 0x01	; 1
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	e2 e9       	ldi	r30, 0x92	; 146
 37c:	f9 e0       	ldi	r31, 0x09	; 9
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	a0 31       	cpi	r26, 0x10	; 16
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	a0 e1       	ldi	r26, 0x10	; 16
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	af 31       	cpi	r26, 0x1F	; 31
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <main>
 39e:	0c 94 c7 04 	jmp	0x98e	; 0x98e <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <ADC_read>:
 3a6:	80 68       	ori	r24, 0x80	; 128
 3a8:	e0 e0       	ldi	r30, 0x00	; 0
 3aa:	f4 e1       	ldi	r31, 0x14	; 20
 3ac:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ae:	8b ee       	ldi	r24, 0xEB	; 235
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	01 97       	sbiw	r24, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <ADC_read+0xc>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <ADC_read+0x12>
 3b8:	80 81       	ld	r24, Z
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	08 95       	ret

000003be <joystick_calibrate>:
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 3c6:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <x_middle_position+0x1>
 3ca:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <x_middle_position>
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 3d6:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <y_middle_position+0x1>
 3da:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <y_middle_position>
 3de:	08 95       	ret

000003e0 <main>:
// left slider: PWM PB4 -> AIN2 / channel 2
// right slider: PWM PD1 -> AIN3 / channel 3

int main(void)
{
	sei();  //Enable global interrupts	
 3e0:	78 94       	sei
	
	UART_init();
 3e2:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <UART_init>
	XMEM_init();
 3e6:	0e 94 01 03 	call	0x602	; 0x602 <XMEM_init>
	joystick_calibrate();
 3ea:	0e 94 df 01 	call	0x3be	; 0x3be <joystick_calibrate>
	oled_init();
 3ee:	0e 94 16 02 	call	0x42c	; 0x42c <oled_init>
	//(void)oled_init;
	oled_reset();
 3f2:	0e 94 81 02 	call	0x502	; 0x502 <oled_reset>
	oled_set_brigthness(255);
 3f6:	8f ef       	ldi	r24, 0xFF	; 255
 3f8:	0e 94 cf 02 	call	0x59e	; 0x59e <oled_set_brigthness>
	//oled test
	//oled_arrow_at_pos(1, 30);
	//oled_arrow_at_pos(4, 60);
	//oled_print("a");
	//oled_print("a");
	printf("Hello :D\n");
 3fc:	87 e0       	ldi	r24, 0x07	; 7
 3fe:	91 e0       	ldi	r25, 0x01	; 1
 400:	0e 94 53 03 	call	0x6a6	; 0x6a6 <puts>
	oled_arrow_at_pos(4, 30);
 404:	6e e1       	ldi	r22, 0x1E	; 30
 406:	84 e0       	ldi	r24, 0x04	; 4
 408:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <oled_arrow_at_pos>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 40c:	2f ef       	ldi	r18, 0xFF	; 255
 40e:	8f e7       	ldi	r24, 0x7F	; 127
 410:	91 e0       	ldi	r25, 0x01	; 1
 412:	21 50       	subi	r18, 0x01	; 1
 414:	80 40       	sbci	r24, 0x00	; 0
 416:	90 40       	sbci	r25, 0x00	; 0
 418:	e1 f7       	brne	.-8      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 41a:	00 c0       	rjmp	.+0      	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 41e:	f6 cf       	rjmp	.-20     	; 0x40c <__DATA_REGION_LENGTH__+0xc>

00000420 <write_oled_command>:
#include "oled_lib.h"
#include "fonts.h"

void write_oled_command(uint8_t command) {
	volatile char *oled_command = (char *) 0x1000;
	oled_command[0] = command;
 420:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xee1>
 424:	08 95       	ret

00000426 <write_oled_data>:
}

void write_oled_data(uint8_t data) {
	volatile char *oled_data = (char *) 0x1200;
	oled_data[0] = data;
 426:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x10e1>
 42a:	08 95       	ret

0000042c <oled_init>:
}

//9.4 Recommended Software Initialization
void oled_init(void) {
	write_oled_command(0xAE); //display off
 42c:	8e ea       	ldi	r24, 0xAE	; 174
 42e:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xA1); //segment remap
 432:	81 ea       	ldi	r24, 0xA1	; 161
 434:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x12);
 438:	82 e1       	ldi	r24, 0x12	; 18
 43a:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xC8); //common output direction: com63~com0
 43e:	88 ec       	ldi	r24, 0xC8	; 200
 440:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xA8); //multiplex ration mode:63
 444:	88 ea       	ldi	r24, 0xA8	; 168
 446:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x3F);
 44a:	8f e3       	ldi	r24, 0x3F	; 63
 44c:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xD5); //display divide ratio/osc. freq. mode
 450:	85 ed       	ldi	r24, 0xD5	; 213
 452:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x080);
 456:	80 e8       	ldi	r24, 0x80	; 128
 458:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x81); //contrast control
 45c:	81 e8       	ldi	r24, 0x81	; 129
 45e:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x50);
 462:	80 e5       	ldi	r24, 0x50	; 80
 464:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xD9); //set pre-charge period
 468:	89 ed       	ldi	r24, 0xD9	; 217
 46a:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x21);
 46e:	81 e2       	ldi	r24, 0x21	; 33
 470:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x20); //set memory adressing mode
 474:	80 e2       	ldi	r24, 0x20	; 32
 476:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x02);
 47a:	82 e0       	ldi	r24, 0x02	; 2
 47c:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xDB); //VCOM deselect mode
 480:	8b ed       	ldi	r24, 0xDB	; 219
 482:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x30); 
 486:	80 e3       	ldi	r24, 0x30	; 48
 488:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xAD); //master configuration
 48c:	8d ea       	ldi	r24, 0xAD	; 173
 48e:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x00);
 492:	80 e0       	ldi	r24, 0x00	; 0
 494:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xA4); //out follows RAM content
 498:	84 ea       	ldi	r24, 0xA4	; 164
 49a:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xA6); //set normal display
 49e:	86 ea       	ldi	r24, 0xA6	; 166
 4a0:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0xAF); //display on
 4a4:	8f ea       	ldi	r24, 0xAF	; 175
 4a6:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	
	fdevopen(oled_print, NULL);
 4aa:	60 e0       	ldi	r22, 0x00	; 0
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	89 e9       	ldi	r24, 0x99	; 153
 4b0:	92 e0       	ldi	r25, 0x02	; 2
 4b2:	0e 94 08 03 	call	0x610	; 0x610 <fdevopen>
 4b6:	08 95       	ret

000004b8 <oled_goto_line>:
}

void oled_goto_line(uint8_t line) {
	write_oled_command(0xB0 + line); //Set row
 4b8:	80 55       	subi	r24, 0x50	; 80
 4ba:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
 4be:	08 95       	ret

000004c0 <oled_goto_column>:
}

void oled_goto_column(uint8_t column) {
 4c0:	cf 93       	push	r28
 4c2:	c8 2f       	mov	r28, r24
	write_oled_command(0x00 + (column % 16)); //lower nibble
 4c4:	8f 70       	andi	r24, 0x0F	; 15
 4c6:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(0x10 + (column / 16)); //higher nibble
 4ca:	8c 2f       	mov	r24, r28
 4cc:	82 95       	swap	r24
 4ce:	8f 70       	andi	r24, 0x0F	; 15
 4d0:	80 5f       	subi	r24, 0xF0	; 240
 4d2:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
}
 4d6:	cf 91       	pop	r28
 4d8:	08 95       	ret

000004da <oled_clear_line>:

void oled_clear_line(uint8_t line) {
 4da:	cf 93       	push	r28
 4dc:	df 93       	push	r29
	oled_goto_line(line);
 4de:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <oled_goto_line>
	for (int j=0; j<127; j++) {
 4e2:	c0 e0       	ldi	r28, 0x00	; 0
 4e4:	d0 e0       	ldi	r29, 0x00	; 0
 4e6:	07 c0       	rjmp	.+14     	; 0x4f6 <oled_clear_line+0x1c>
		oled_goto_column(j);
 4e8:	8c 2f       	mov	r24, r28
 4ea:	0e 94 60 02 	call	0x4c0	; 0x4c0 <oled_goto_column>
		write_oled_data(0x00);
 4ee:	80 e0       	ldi	r24, 0x00	; 0
 4f0:	0e 94 13 02 	call	0x426	; 0x426 <write_oled_data>
	write_oled_command(0x10 + (column / 16)); //higher nibble
}

void oled_clear_line(uint8_t line) {
	oled_goto_line(line);
	for (int j=0; j<127; j++) {
 4f4:	21 96       	adiw	r28, 0x01	; 1
 4f6:	cf 37       	cpi	r28, 0x7F	; 127
 4f8:	d1 05       	cpc	r29, r1
 4fa:	b4 f3       	brlt	.-20     	; 0x4e8 <oled_clear_line+0xe>
		oled_goto_column(j);
		write_oled_data(0x00);
	}
}
 4fc:	df 91       	pop	r29
 4fe:	cf 91       	pop	r28
 500:	08 95       	ret

00000502 <oled_reset>:

void oled_reset() {
 502:	cf 93       	push	r28
 504:	df 93       	push	r29
	for (int i=0; i<7; i++) {
 506:	c0 e0       	ldi	r28, 0x00	; 0
 508:	d0 e0       	ldi	r29, 0x00	; 0
 50a:	04 c0       	rjmp	.+8      	; 0x514 <oled_reset+0x12>
		oled_clear_line(i);
 50c:	8c 2f       	mov	r24, r28
 50e:	0e 94 6d 02 	call	0x4da	; 0x4da <oled_clear_line>
		write_oled_data(0x00);
	}
}

void oled_reset() {
	for (int i=0; i<7; i++) {
 512:	21 96       	adiw	r28, 0x01	; 1
 514:	c7 30       	cpi	r28, 0x07	; 7
 516:	d1 05       	cpc	r29, r1
 518:	cc f3       	brlt	.-14     	; 0x50c <oled_reset+0xa>
		oled_clear_line(i);
	}
}
 51a:	df 91       	pop	r29
 51c:	cf 91       	pop	r28
 51e:	08 95       	ret

00000520 <oled_pos>:

	
void oled_pos(uint8_t row, uint8_t column) {
 520:	cf 93       	push	r28
 522:	c6 2f       	mov	r28, r22
	oled_goto_line(row);
 524:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <oled_goto_line>
	oled_goto_column(column);
 528:	8c 2f       	mov	r24, r28
 52a:	0e 94 60 02 	call	0x4c0	; 0x4c0 <oled_goto_column>

}
 52e:	cf 91       	pop	r28
 530:	08 95       	ret

00000532 <oled_print>:
	write_oled_command(lvl);
}

volatile uint8_t column = 0;

void oled_print(char str) {
 532:	0f 93       	push	r16
 534:	1f 93       	push	r17
 536:	cf 93       	push	r28
 538:	df 93       	push	r29
 53a:	d8 2f       	mov	r29, r24
	int font_size = 8;
	unsigned char letter;
	int i = column;
 53c:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <__data_end>
 540:	10 e0       	ldi	r17, 0x00	; 0
	for (i; i < (column + font_size); i++) {
 542:	1c c0       	rjmp	.+56     	; 0x57c <oled_print+0x4a>
		letter = pgm_read_byte(&(font8[str-32][i-column]));
 544:	ed 2f       	mov	r30, r29
 546:	f0 e0       	ldi	r31, 0x00	; 0
 548:	b0 97       	sbiw	r30, 0x20	; 32
 54a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 54e:	98 01       	movw	r18, r16
 550:	28 1b       	sub	r18, r24
 552:	31 09       	sbc	r19, r1
 554:	ee 0f       	add	r30, r30
 556:	ff 1f       	adc	r31, r31
 558:	ee 0f       	add	r30, r30
 55a:	ff 1f       	adc	r31, r31
 55c:	ee 0f       	add	r30, r30
 55e:	ff 1f       	adc	r31, r31
 560:	e2 0f       	add	r30, r18
 562:	f3 1f       	adc	r31, r19
 564:	e0 59       	subi	r30, 0x90	; 144
 566:	ff 4f       	sbci	r31, 0xFF	; 255
 568:	c4 91       	lpm	r28, Z
		oled_pos(1,i);
 56a:	60 2f       	mov	r22, r16
 56c:	81 e0       	ldi	r24, 0x01	; 1
 56e:	0e 94 90 02 	call	0x520	; 0x520 <oled_pos>
		write_oled_data(letter);
 572:	8c 2f       	mov	r24, r28
 574:	0e 94 13 02 	call	0x426	; 0x426 <write_oled_data>

void oled_print(char str) {
	int font_size = 8;
	unsigned char letter;
	int i = column;
	for (i; i < (column + font_size); i++) {
 578:	0f 5f       	subi	r16, 0xFF	; 255
 57a:	1f 4f       	sbci	r17, 0xFF	; 255
 57c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	08 96       	adiw	r24, 0x08	; 8
 584:	08 17       	cp	r16, r24
 586:	19 07       	cpc	r17, r25
 588:	ec f2       	brlt	.-70     	; 0x544 <oled_print+0x12>
		letter = pgm_read_byte(&(font8[str-32][i-column]));
		oled_pos(1,i);
		write_oled_data(letter);
	}
	column = column + font_size;	
 58a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 58e:	88 5f       	subi	r24, 0xF8	; 248
 590:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
}
 594:	df 91       	pop	r29
 596:	cf 91       	pop	r28
 598:	1f 91       	pop	r17
 59a:	0f 91       	pop	r16
 59c:	08 95       	ret

0000059e <oled_set_brigthness>:
	oled_goto_line(row);
	oled_goto_column(column);

}

void oled_set_brigthness(uint8_t lvl) {
 59e:	cf 93       	push	r28
 5a0:	c8 2f       	mov	r28, r24
	write_oled_command(0x81);
 5a2:	81 e8       	ldi	r24, 0x81	; 129
 5a4:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
	write_oled_command(lvl);
 5a8:	8c 2f       	mov	r24, r28
 5aa:	0e 94 10 02 	call	0x420	; 0x420 <write_oled_command>
}
 5ae:	cf 91       	pop	r28
 5b0:	08 95       	ret

000005b2 <oled_arrow_at_pos>:
	}
	column = column + font_size;	
}

void oled_arrow_at_pos(uint8_t row, uint8_t column) {
	oled_pos(row, column);
 5b2:	0e 94 90 02 	call	0x520	; 0x520 <oled_pos>
	write_oled_data(0b00011000);
 5b6:	88 e1       	ldi	r24, 0x18	; 24
 5b8:	0e 94 13 02 	call	0x426	; 0x426 <write_oled_data>
	write_oled_data(0b01111110);
 5bc:	8e e7       	ldi	r24, 0x7E	; 126
 5be:	0e 94 13 02 	call	0x426	; 0x426 <write_oled_data>
	write_oled_data(0b00111100);
 5c2:	8c e3       	ldi	r24, 0x3C	; 60
 5c4:	0e 94 13 02 	call	0x426	; 0x426 <write_oled_data>
	write_oled_data(0b00011000);
 5c8:	88 e1       	ldi	r24, 0x18	; 24
 5ca:	0e 94 13 02 	call	0x426	; 0x426 <write_oled_data>
 5ce:	08 95       	ret

000005d0 <UART_init>:
	return UDR0;
}

void UART_init() {
	//Set baud rate
	UBRR0H = (BAUD_PRESCALE >> 8);
 5d0:	10 bc       	out	0x20, r1	; 32
	UBRR0L = BAUD_PRESCALE;
 5d2:	8f e1       	ldi	r24, 0x1F	; 31
 5d4:	89 b9       	out	0x09, r24	; 9
	
	//Enable receiver and transmitter + TX complete interrupt
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0) | (1 << TXCIE0);
 5d6:	8a b1       	in	r24, 0x0a	; 10
 5d8:	88 65       	ori	r24, 0x58	; 88
 5da:	8a b9       	out	0x0a, r24	; 10
	
	//Set frame format: 8-bit data, stop bit = 2_bit
	UCSR0C |= (1 << URSEL0) | (1 << USBS0) | (1 << UCSZ01) | (1 << UCSZ00); //UCSZ10 -> UCSZ01
 5dc:	80 b5       	in	r24, 0x20	; 32
 5de:	8e 68       	ori	r24, 0x8E	; 142
 5e0:	80 bd       	out	0x20, r24	; 32
 5e2:	08 95       	ret

000005e4 <__vector_23>:
	
	//fdevopen(UART_transmit, UART_recive);
}

//UART transmission complete interrupt handler
ISR(USART0_TXC_vect) {
 5e4:	1f 92       	push	r1
 5e6:	0f 92       	push	r0
 5e8:	0f b6       	in	r0, 0x3f	; 63
 5ea:	0f 92       	push	r0
 5ec:	11 24       	eor	r1, r1
 5ee:	8f 93       	push	r24
	//Set flag to indicate completion
	transmissionComplete = 1;
 5f0:	81 e0       	ldi	r24, 0x01	; 1
 5f2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <transmissionComplete>
 5f6:	8f 91       	pop	r24
 5f8:	0f 90       	pop	r0
 5fa:	0f be       	out	0x3f, r0	; 63
 5fc:	0f 90       	pop	r0
 5fe:	1f 90       	pop	r1
 600:	18 95       	reti

00000602 <XMEM_init>:
 602:	85 b7       	in	r24, 0x35	; 53
 604:	80 68       	ori	r24, 0x80	; 128
 606:	85 bf       	out	0x35, r24	; 53
 608:	80 b7       	in	r24, 0x30	; 48
 60a:	80 62       	ori	r24, 0x20	; 32
 60c:	80 bf       	out	0x30, r24	; 48
 60e:	08 95       	ret

00000610 <fdevopen>:
 610:	0f 93       	push	r16
 612:	1f 93       	push	r17
 614:	cf 93       	push	r28
 616:	df 93       	push	r29
 618:	00 97       	sbiw	r24, 0x00	; 0
 61a:	31 f4       	brne	.+12     	; 0x628 <fdevopen+0x18>
 61c:	61 15       	cp	r22, r1
 61e:	71 05       	cpc	r23, r1
 620:	19 f4       	brne	.+6      	; 0x628 <fdevopen+0x18>
 622:	80 e0       	ldi	r24, 0x00	; 0
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	3a c0       	rjmp	.+116    	; 0x69c <fdevopen+0x8c>
 628:	8b 01       	movw	r16, r22
 62a:	ec 01       	movw	r28, r24
 62c:	6e e0       	ldi	r22, 0x0E	; 14
 62e:	70 e0       	ldi	r23, 0x00	; 0
 630:	81 e0       	ldi	r24, 0x01	; 1
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	0e 94 83 03 	call	0x706	; 0x706 <calloc>
 638:	fc 01       	movw	r30, r24
 63a:	89 2b       	or	r24, r25
 63c:	91 f3       	breq	.-28     	; 0x622 <fdevopen+0x12>
 63e:	80 e8       	ldi	r24, 0x80	; 128
 640:	83 83       	std	Z+3, r24	; 0x03
 642:	01 15       	cp	r16, r1
 644:	11 05       	cpc	r17, r1
 646:	71 f0       	breq	.+28     	; 0x664 <fdevopen+0x54>
 648:	13 87       	std	Z+11, r17	; 0x0b
 64a:	02 87       	std	Z+10, r16	; 0x0a
 64c:	81 e8       	ldi	r24, 0x81	; 129
 64e:	83 83       	std	Z+3, r24	; 0x03
 650:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <__iob>
 654:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <__iob+0x1>
 658:	89 2b       	or	r24, r25
 65a:	21 f4       	brne	.+8      	; 0x664 <fdevopen+0x54>
 65c:	f0 93 16 01 	sts	0x0116, r31	; 0x800116 <__iob+0x1>
 660:	e0 93 15 01 	sts	0x0115, r30	; 0x800115 <__iob>
 664:	20 97       	sbiw	r28, 0x00	; 0
 666:	c9 f0       	breq	.+50     	; 0x69a <fdevopen+0x8a>
 668:	d1 87       	std	Z+9, r29	; 0x09
 66a:	c0 87       	std	Z+8, r28	; 0x08
 66c:	83 81       	ldd	r24, Z+3	; 0x03
 66e:	82 60       	ori	r24, 0x02	; 2
 670:	83 83       	std	Z+3, r24	; 0x03
 672:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <__iob+0x2>
 676:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <__iob+0x3>
 67a:	89 2b       	or	r24, r25
 67c:	71 f4       	brne	.+28     	; 0x69a <fdevopen+0x8a>
 67e:	f0 93 18 01 	sts	0x0118, r31	; 0x800118 <__iob+0x3>
 682:	e0 93 17 01 	sts	0x0117, r30	; 0x800117 <__iob+0x2>
 686:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <__iob+0x4>
 68a:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <__iob+0x5>
 68e:	89 2b       	or	r24, r25
 690:	21 f4       	brne	.+8      	; 0x69a <fdevopen+0x8a>
 692:	f0 93 1a 01 	sts	0x011A, r31	; 0x80011a <__iob+0x5>
 696:	e0 93 19 01 	sts	0x0119, r30	; 0x800119 <__iob+0x4>
 69a:	cf 01       	movw	r24, r30
 69c:	df 91       	pop	r29
 69e:	cf 91       	pop	r28
 6a0:	1f 91       	pop	r17
 6a2:	0f 91       	pop	r16
 6a4:	08 95       	ret

000006a6 <puts>:
 6a6:	0f 93       	push	r16
 6a8:	1f 93       	push	r17
 6aa:	cf 93       	push	r28
 6ac:	df 93       	push	r29
 6ae:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <__iob+0x2>
 6b2:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <__iob+0x3>
 6b6:	23 81       	ldd	r18, Z+3	; 0x03
 6b8:	21 ff       	sbrs	r18, 1
 6ba:	1b c0       	rjmp	.+54     	; 0x6f2 <puts+0x4c>
 6bc:	8c 01       	movw	r16, r24
 6be:	d0 e0       	ldi	r29, 0x00	; 0
 6c0:	c0 e0       	ldi	r28, 0x00	; 0
 6c2:	f8 01       	movw	r30, r16
 6c4:	81 91       	ld	r24, Z+
 6c6:	8f 01       	movw	r16, r30
 6c8:	60 91 17 01 	lds	r22, 0x0117	; 0x800117 <__iob+0x2>
 6cc:	70 91 18 01 	lds	r23, 0x0118	; 0x800118 <__iob+0x3>
 6d0:	db 01       	movw	r26, r22
 6d2:	18 96       	adiw	r26, 0x08	; 8
 6d4:	ed 91       	ld	r30, X+
 6d6:	fc 91       	ld	r31, X
 6d8:	19 97       	sbiw	r26, 0x09	; 9
 6da:	88 23       	and	r24, r24
 6dc:	31 f0       	breq	.+12     	; 0x6ea <puts+0x44>
 6de:	09 95       	icall
 6e0:	89 2b       	or	r24, r25
 6e2:	79 f3       	breq	.-34     	; 0x6c2 <puts+0x1c>
 6e4:	df ef       	ldi	r29, 0xFF	; 255
 6e6:	cf ef       	ldi	r28, 0xFF	; 255
 6e8:	ec cf       	rjmp	.-40     	; 0x6c2 <puts+0x1c>
 6ea:	8a e0       	ldi	r24, 0x0A	; 10
 6ec:	09 95       	icall
 6ee:	89 2b       	or	r24, r25
 6f0:	19 f0       	breq	.+6      	; 0x6f8 <puts+0x52>
 6f2:	8f ef       	ldi	r24, 0xFF	; 255
 6f4:	9f ef       	ldi	r25, 0xFF	; 255
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <puts+0x56>
 6f8:	8d 2f       	mov	r24, r29
 6fa:	9c 2f       	mov	r25, r28
 6fc:	df 91       	pop	r29
 6fe:	cf 91       	pop	r28
 700:	1f 91       	pop	r17
 702:	0f 91       	pop	r16
 704:	08 95       	ret

00000706 <calloc>:
 706:	0f 93       	push	r16
 708:	1f 93       	push	r17
 70a:	cf 93       	push	r28
 70c:	df 93       	push	r29
 70e:	86 9f       	mul	r24, r22
 710:	80 01       	movw	r16, r0
 712:	87 9f       	mul	r24, r23
 714:	10 0d       	add	r17, r0
 716:	96 9f       	mul	r25, r22
 718:	10 0d       	add	r17, r0
 71a:	11 24       	eor	r1, r1
 71c:	c8 01       	movw	r24, r16
 71e:	0e 94 9f 03 	call	0x73e	; 0x73e <malloc>
 722:	ec 01       	movw	r28, r24
 724:	00 97       	sbiw	r24, 0x00	; 0
 726:	29 f0       	breq	.+10     	; 0x732 <calloc+0x2c>
 728:	a8 01       	movw	r20, r16
 72a:	60 e0       	ldi	r22, 0x00	; 0
 72c:	70 e0       	ldi	r23, 0x00	; 0
 72e:	0e 94 c0 04 	call	0x980	; 0x980 <memset>
 732:	ce 01       	movw	r24, r28
 734:	df 91       	pop	r29
 736:	cf 91       	pop	r28
 738:	1f 91       	pop	r17
 73a:	0f 91       	pop	r16
 73c:	08 95       	ret

0000073e <malloc>:
 73e:	0f 93       	push	r16
 740:	1f 93       	push	r17
 742:	cf 93       	push	r28
 744:	df 93       	push	r29
 746:	82 30       	cpi	r24, 0x02	; 2
 748:	91 05       	cpc	r25, r1
 74a:	10 f4       	brcc	.+4      	; 0x750 <malloc+0x12>
 74c:	82 e0       	ldi	r24, 0x02	; 2
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	e0 91 1d 01 	lds	r30, 0x011D	; 0x80011d <__flp>
 754:	f0 91 1e 01 	lds	r31, 0x011E	; 0x80011e <__flp+0x1>
 758:	20 e0       	ldi	r18, 0x00	; 0
 75a:	30 e0       	ldi	r19, 0x00	; 0
 75c:	a0 e0       	ldi	r26, 0x00	; 0
 75e:	b0 e0       	ldi	r27, 0x00	; 0
 760:	30 97       	sbiw	r30, 0x00	; 0
 762:	19 f1       	breq	.+70     	; 0x7aa <malloc+0x6c>
 764:	40 81       	ld	r20, Z
 766:	51 81       	ldd	r21, Z+1	; 0x01
 768:	02 81       	ldd	r16, Z+2	; 0x02
 76a:	13 81       	ldd	r17, Z+3	; 0x03
 76c:	48 17       	cp	r20, r24
 76e:	59 07       	cpc	r21, r25
 770:	c8 f0       	brcs	.+50     	; 0x7a4 <malloc+0x66>
 772:	84 17       	cp	r24, r20
 774:	95 07       	cpc	r25, r21
 776:	69 f4       	brne	.+26     	; 0x792 <malloc+0x54>
 778:	10 97       	sbiw	r26, 0x00	; 0
 77a:	31 f0       	breq	.+12     	; 0x788 <malloc+0x4a>
 77c:	12 96       	adiw	r26, 0x02	; 2
 77e:	0c 93       	st	X, r16
 780:	12 97       	sbiw	r26, 0x02	; 2
 782:	13 96       	adiw	r26, 0x03	; 3
 784:	1c 93       	st	X, r17
 786:	27 c0       	rjmp	.+78     	; 0x7d6 <malloc+0x98>
 788:	00 93 1d 01 	sts	0x011D, r16	; 0x80011d <__flp>
 78c:	10 93 1e 01 	sts	0x011E, r17	; 0x80011e <__flp+0x1>
 790:	22 c0       	rjmp	.+68     	; 0x7d6 <malloc+0x98>
 792:	21 15       	cp	r18, r1
 794:	31 05       	cpc	r19, r1
 796:	19 f0       	breq	.+6      	; 0x79e <malloc+0x60>
 798:	42 17       	cp	r20, r18
 79a:	53 07       	cpc	r21, r19
 79c:	18 f4       	brcc	.+6      	; 0x7a4 <malloc+0x66>
 79e:	9a 01       	movw	r18, r20
 7a0:	bd 01       	movw	r22, r26
 7a2:	ef 01       	movw	r28, r30
 7a4:	df 01       	movw	r26, r30
 7a6:	f8 01       	movw	r30, r16
 7a8:	db cf       	rjmp	.-74     	; 0x760 <malloc+0x22>
 7aa:	21 15       	cp	r18, r1
 7ac:	31 05       	cpc	r19, r1
 7ae:	f9 f0       	breq	.+62     	; 0x7ee <malloc+0xb0>
 7b0:	28 1b       	sub	r18, r24
 7b2:	39 0b       	sbc	r19, r25
 7b4:	24 30       	cpi	r18, 0x04	; 4
 7b6:	31 05       	cpc	r19, r1
 7b8:	80 f4       	brcc	.+32     	; 0x7da <malloc+0x9c>
 7ba:	8a 81       	ldd	r24, Y+2	; 0x02
 7bc:	9b 81       	ldd	r25, Y+3	; 0x03
 7be:	61 15       	cp	r22, r1
 7c0:	71 05       	cpc	r23, r1
 7c2:	21 f0       	breq	.+8      	; 0x7cc <malloc+0x8e>
 7c4:	fb 01       	movw	r30, r22
 7c6:	93 83       	std	Z+3, r25	; 0x03
 7c8:	82 83       	std	Z+2, r24	; 0x02
 7ca:	04 c0       	rjmp	.+8      	; 0x7d4 <malloc+0x96>
 7cc:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <__flp+0x1>
 7d0:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <__flp>
 7d4:	fe 01       	movw	r30, r28
 7d6:	32 96       	adiw	r30, 0x02	; 2
 7d8:	44 c0       	rjmp	.+136    	; 0x862 <malloc+0x124>
 7da:	fe 01       	movw	r30, r28
 7dc:	e2 0f       	add	r30, r18
 7de:	f3 1f       	adc	r31, r19
 7e0:	81 93       	st	Z+, r24
 7e2:	91 93       	st	Z+, r25
 7e4:	22 50       	subi	r18, 0x02	; 2
 7e6:	31 09       	sbc	r19, r1
 7e8:	39 83       	std	Y+1, r19	; 0x01
 7ea:	28 83       	st	Y, r18
 7ec:	3a c0       	rjmp	.+116    	; 0x862 <malloc+0x124>
 7ee:	20 91 1b 01 	lds	r18, 0x011B	; 0x80011b <__brkval>
 7f2:	30 91 1c 01 	lds	r19, 0x011C	; 0x80011c <__brkval+0x1>
 7f6:	23 2b       	or	r18, r19
 7f8:	41 f4       	brne	.+16     	; 0x80a <malloc+0xcc>
 7fa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 7fe:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 802:	30 93 1c 01 	sts	0x011C, r19	; 0x80011c <__brkval+0x1>
 806:	20 93 1b 01 	sts	0x011B, r18	; 0x80011b <__brkval>
 80a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 80e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 812:	21 15       	cp	r18, r1
 814:	31 05       	cpc	r19, r1
 816:	41 f4       	brne	.+16     	; 0x828 <malloc+0xea>
 818:	2d b7       	in	r18, 0x3d	; 61
 81a:	3e b7       	in	r19, 0x3e	; 62
 81c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 820:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 824:	24 1b       	sub	r18, r20
 826:	35 0b       	sbc	r19, r21
 828:	e0 91 1b 01 	lds	r30, 0x011B	; 0x80011b <__brkval>
 82c:	f0 91 1c 01 	lds	r31, 0x011C	; 0x80011c <__brkval+0x1>
 830:	e2 17       	cp	r30, r18
 832:	f3 07       	cpc	r31, r19
 834:	a0 f4       	brcc	.+40     	; 0x85e <malloc+0x120>
 836:	2e 1b       	sub	r18, r30
 838:	3f 0b       	sbc	r19, r31
 83a:	28 17       	cp	r18, r24
 83c:	39 07       	cpc	r19, r25
 83e:	78 f0       	brcs	.+30     	; 0x85e <malloc+0x120>
 840:	ac 01       	movw	r20, r24
 842:	4e 5f       	subi	r20, 0xFE	; 254
 844:	5f 4f       	sbci	r21, 0xFF	; 255
 846:	24 17       	cp	r18, r20
 848:	35 07       	cpc	r19, r21
 84a:	48 f0       	brcs	.+18     	; 0x85e <malloc+0x120>
 84c:	4e 0f       	add	r20, r30
 84e:	5f 1f       	adc	r21, r31
 850:	50 93 1c 01 	sts	0x011C, r21	; 0x80011c <__brkval+0x1>
 854:	40 93 1b 01 	sts	0x011B, r20	; 0x80011b <__brkval>
 858:	81 93       	st	Z+, r24
 85a:	91 93       	st	Z+, r25
 85c:	02 c0       	rjmp	.+4      	; 0x862 <malloc+0x124>
 85e:	e0 e0       	ldi	r30, 0x00	; 0
 860:	f0 e0       	ldi	r31, 0x00	; 0
 862:	cf 01       	movw	r24, r30
 864:	df 91       	pop	r29
 866:	cf 91       	pop	r28
 868:	1f 91       	pop	r17
 86a:	0f 91       	pop	r16
 86c:	08 95       	ret

0000086e <free>:
 86e:	cf 93       	push	r28
 870:	df 93       	push	r29
 872:	00 97       	sbiw	r24, 0x00	; 0
 874:	09 f4       	brne	.+2      	; 0x878 <free+0xa>
 876:	81 c0       	rjmp	.+258    	; 0x97a <free+0x10c>
 878:	fc 01       	movw	r30, r24
 87a:	32 97       	sbiw	r30, 0x02	; 2
 87c:	13 82       	std	Z+3, r1	; 0x03
 87e:	12 82       	std	Z+2, r1	; 0x02
 880:	a0 91 1d 01 	lds	r26, 0x011D	; 0x80011d <__flp>
 884:	b0 91 1e 01 	lds	r27, 0x011E	; 0x80011e <__flp+0x1>
 888:	10 97       	sbiw	r26, 0x00	; 0
 88a:	81 f4       	brne	.+32     	; 0x8ac <free+0x3e>
 88c:	20 81       	ld	r18, Z
 88e:	31 81       	ldd	r19, Z+1	; 0x01
 890:	82 0f       	add	r24, r18
 892:	93 1f       	adc	r25, r19
 894:	20 91 1b 01 	lds	r18, 0x011B	; 0x80011b <__brkval>
 898:	30 91 1c 01 	lds	r19, 0x011C	; 0x80011c <__brkval+0x1>
 89c:	28 17       	cp	r18, r24
 89e:	39 07       	cpc	r19, r25
 8a0:	51 f5       	brne	.+84     	; 0x8f6 <free+0x88>
 8a2:	f0 93 1c 01 	sts	0x011C, r31	; 0x80011c <__brkval+0x1>
 8a6:	e0 93 1b 01 	sts	0x011B, r30	; 0x80011b <__brkval>
 8aa:	67 c0       	rjmp	.+206    	; 0x97a <free+0x10c>
 8ac:	ed 01       	movw	r28, r26
 8ae:	20 e0       	ldi	r18, 0x00	; 0
 8b0:	30 e0       	ldi	r19, 0x00	; 0
 8b2:	ce 17       	cp	r28, r30
 8b4:	df 07       	cpc	r29, r31
 8b6:	40 f4       	brcc	.+16     	; 0x8c8 <free+0x5a>
 8b8:	4a 81       	ldd	r20, Y+2	; 0x02
 8ba:	5b 81       	ldd	r21, Y+3	; 0x03
 8bc:	9e 01       	movw	r18, r28
 8be:	41 15       	cp	r20, r1
 8c0:	51 05       	cpc	r21, r1
 8c2:	f1 f0       	breq	.+60     	; 0x900 <free+0x92>
 8c4:	ea 01       	movw	r28, r20
 8c6:	f5 cf       	rjmp	.-22     	; 0x8b2 <free+0x44>
 8c8:	d3 83       	std	Z+3, r29	; 0x03
 8ca:	c2 83       	std	Z+2, r28	; 0x02
 8cc:	40 81       	ld	r20, Z
 8ce:	51 81       	ldd	r21, Z+1	; 0x01
 8d0:	84 0f       	add	r24, r20
 8d2:	95 1f       	adc	r25, r21
 8d4:	c8 17       	cp	r28, r24
 8d6:	d9 07       	cpc	r29, r25
 8d8:	59 f4       	brne	.+22     	; 0x8f0 <free+0x82>
 8da:	88 81       	ld	r24, Y
 8dc:	99 81       	ldd	r25, Y+1	; 0x01
 8de:	84 0f       	add	r24, r20
 8e0:	95 1f       	adc	r25, r21
 8e2:	02 96       	adiw	r24, 0x02	; 2
 8e4:	91 83       	std	Z+1, r25	; 0x01
 8e6:	80 83       	st	Z, r24
 8e8:	8a 81       	ldd	r24, Y+2	; 0x02
 8ea:	9b 81       	ldd	r25, Y+3	; 0x03
 8ec:	93 83       	std	Z+3, r25	; 0x03
 8ee:	82 83       	std	Z+2, r24	; 0x02
 8f0:	21 15       	cp	r18, r1
 8f2:	31 05       	cpc	r19, r1
 8f4:	29 f4       	brne	.+10     	; 0x900 <free+0x92>
 8f6:	f0 93 1e 01 	sts	0x011E, r31	; 0x80011e <__flp+0x1>
 8fa:	e0 93 1d 01 	sts	0x011D, r30	; 0x80011d <__flp>
 8fe:	3d c0       	rjmp	.+122    	; 0x97a <free+0x10c>
 900:	e9 01       	movw	r28, r18
 902:	fb 83       	std	Y+3, r31	; 0x03
 904:	ea 83       	std	Y+2, r30	; 0x02
 906:	49 91       	ld	r20, Y+
 908:	59 91       	ld	r21, Y+
 90a:	c4 0f       	add	r28, r20
 90c:	d5 1f       	adc	r29, r21
 90e:	ec 17       	cp	r30, r28
 910:	fd 07       	cpc	r31, r29
 912:	61 f4       	brne	.+24     	; 0x92c <free+0xbe>
 914:	80 81       	ld	r24, Z
 916:	91 81       	ldd	r25, Z+1	; 0x01
 918:	84 0f       	add	r24, r20
 91a:	95 1f       	adc	r25, r21
 91c:	02 96       	adiw	r24, 0x02	; 2
 91e:	e9 01       	movw	r28, r18
 920:	99 83       	std	Y+1, r25	; 0x01
 922:	88 83       	st	Y, r24
 924:	82 81       	ldd	r24, Z+2	; 0x02
 926:	93 81       	ldd	r25, Z+3	; 0x03
 928:	9b 83       	std	Y+3, r25	; 0x03
 92a:	8a 83       	std	Y+2, r24	; 0x02
 92c:	e0 e0       	ldi	r30, 0x00	; 0
 92e:	f0 e0       	ldi	r31, 0x00	; 0
 930:	12 96       	adiw	r26, 0x02	; 2
 932:	8d 91       	ld	r24, X+
 934:	9c 91       	ld	r25, X
 936:	13 97       	sbiw	r26, 0x03	; 3
 938:	00 97       	sbiw	r24, 0x00	; 0
 93a:	19 f0       	breq	.+6      	; 0x942 <free+0xd4>
 93c:	fd 01       	movw	r30, r26
 93e:	dc 01       	movw	r26, r24
 940:	f7 cf       	rjmp	.-18     	; 0x930 <free+0xc2>
 942:	8d 91       	ld	r24, X+
 944:	9c 91       	ld	r25, X
 946:	11 97       	sbiw	r26, 0x01	; 1
 948:	9d 01       	movw	r18, r26
 94a:	2e 5f       	subi	r18, 0xFE	; 254
 94c:	3f 4f       	sbci	r19, 0xFF	; 255
 94e:	82 0f       	add	r24, r18
 950:	93 1f       	adc	r25, r19
 952:	20 91 1b 01 	lds	r18, 0x011B	; 0x80011b <__brkval>
 956:	30 91 1c 01 	lds	r19, 0x011C	; 0x80011c <__brkval+0x1>
 95a:	28 17       	cp	r18, r24
 95c:	39 07       	cpc	r19, r25
 95e:	69 f4       	brne	.+26     	; 0x97a <free+0x10c>
 960:	30 97       	sbiw	r30, 0x00	; 0
 962:	29 f4       	brne	.+10     	; 0x96e <free+0x100>
 964:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <__flp+0x1>
 968:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <__flp>
 96c:	02 c0       	rjmp	.+4      	; 0x972 <free+0x104>
 96e:	13 82       	std	Z+3, r1	; 0x03
 970:	12 82       	std	Z+2, r1	; 0x02
 972:	b0 93 1c 01 	sts	0x011C, r27	; 0x80011c <__brkval+0x1>
 976:	a0 93 1b 01 	sts	0x011B, r26	; 0x80011b <__brkval>
 97a:	df 91       	pop	r29
 97c:	cf 91       	pop	r28
 97e:	08 95       	ret

00000980 <memset>:
 980:	dc 01       	movw	r26, r24
 982:	01 c0       	rjmp	.+2      	; 0x986 <memset+0x6>
 984:	6d 93       	st	X+, r22
 986:	41 50       	subi	r20, 0x01	; 1
 988:	50 40       	sbci	r21, 0x00	; 0
 98a:	e0 f7       	brcc	.-8      	; 0x984 <memset+0x4>
 98c:	08 95       	ret

0000098e <_exit>:
 98e:	f8 94       	cli

00000990 <__stop_program>:
 990:	ff cf       	rjmp	.-2      	; 0x990 <__stop_program>
