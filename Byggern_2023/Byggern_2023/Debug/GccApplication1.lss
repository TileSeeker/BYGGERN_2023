
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000a80  00000b14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a80  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800116  00800116  00000b2a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b2a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000114a  00000000  00000000  00000ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c2f  00000000  00000000  00001e16  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000832  00000000  00000000  00002a45  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000022c  00000000  00000000  00003278  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000061e  00000000  00000000  000034a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000050c  00000000  00000000  00003ac2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00003fce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 bb 00 	jmp	0x176	; 0x176 <__vector_23>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 e8       	ldi	r30, 0x80	; 128
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 31       	cpi	r26, 0x16	; 22
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e1       	ldi	r26, 0x16	; 22
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a4 32       	cpi	r26, 0x24	; 36
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 74 00 	call	0xe8	; 0xe8 <main>
  a6:	0c 94 3e 05 	jmp	0xa7c	; 0xa7c <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_read>:
//	return value;
//}

int ADC_read(int channel) {
	volatile char *adc = (char *) 0x1400; //ADC start address
	adc[0] = (1 << 7) | channel; //Only "channel" channel is converted [table.1]
  ae:	80 68       	ori	r24, 0x80	; 128
  b0:	e0 e0       	ldi	r30, 0x00	; 0
  b2:	f4 e1       	ldi	r31, 0x14	; 20
  b4:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b6:	8b ee       	ldi	r24, 0xEB	; 235
  b8:	91 e0       	ldi	r25, 0x01	; 1
  ba:	01 97       	sbiw	r24, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <ADC_read+0xc>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <ADC_read+0x12>
	uint8_t value;
	_delay_us(400);
	value = adc[0];
  c0:	80 81       	ld	r24, Z
	return value;
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	08 95       	ret

000000c6 <joystick_calibrate>:
#include "joystick_lib.h"

void joystick_calibrate(void) {
	x_middle_position = ADC_read(channel_0);
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
  ce:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
  d2:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
	y_middle_position = ADC_read(channel_1);
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
  de:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <y_middle_position+0x1>
  e2:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <y_middle_position>
  e6:	08 95       	ret

000000e8 <main>:
// left slider: PWM PB4 -> AIN2 / channel 2
// right slider: PWM PD1 -> AIN3 / channel 3

int main(void)
{
	sei();  //Enable global interrupts	
  e8:	78 94       	sei
	UART_init();
  ea:	0e 94 ab 00 	call	0x156	; 0x156 <UART_init>
	XMEM_init();
  ee:	0e 94 ca 00 	call	0x194	; 0x194 <XMEM_init>
	joystick_calibrate();
  f2:	0e 94 63 00 	call	0xc6	; 0xc6 <joystick_calibrate>
				
	while(1) {
		//ADC & joystick test
		//printf("ADC: x: %d\t y: %d\t dir-x: %d\t dir-y: %d \n\n", joystick_position_read().x_pos, joystick_position_read().y_pos, joystick_direction_read().x_dir, joystick_direction_read().y_dir);
		printf("Slider: %d \n\n", read_slider_position(channel_2));
  f6:	82 e0       	ldi	r24, 0x02	; 2
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 95 00 	call	0x12a	; 0x12a <read_slider_position>
  fe:	9f 93       	push	r25
 100:	8f 93       	push	r24
 102:	87 e0       	ldi	r24, 0x07	; 7
 104:	91 e0       	ldi	r25, 0x01	; 1
 106:	9f 93       	push	r25
 108:	8f 93       	push	r24
 10a:	0e 94 1c 01 	call	0x238	; 0x238 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10e:	2f ef       	ldi	r18, 0xFF	; 255
 110:	8f e7       	ldi	r24, 0x7F	; 127
 112:	91 e0       	ldi	r25, 0x01	; 1
 114:	21 50       	subi	r18, 0x01	; 1
 116:	80 40       	sbci	r24, 0x00	; 0
 118:	90 40       	sbci	r25, 0x00	; 0
 11a:	e1 f7       	brne	.-8      	; 0x114 <main+0x2c>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0x36>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x38>
 120:	0f 90       	pop	r0
 122:	0f 90       	pop	r0
 124:	0f 90       	pop	r0
 126:	0f 90       	pop	r0
 128:	e6 cf       	rjmp	.-52     	; 0xf6 <main+0xe>

0000012a <read_slider_position>:
#include "slider_lib.h"

int read_slider_position(int channel) {
	return ADC_read(channel);
 12a:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
 12e:	08 95       	ret

00000130 <UART_transmit>:
#define BAUD_PRESCALE ((F_CPU / (BAUD * 16UL)) - 1)
volatile uint8_t transmissionComplete = 1;

static int UART_transmit(char message, FILE *stream) {
	//Wait for prev transmission to complete
	while (!transmissionComplete);
 130:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <transmissionComplete>
 134:	99 23       	and	r25, r25
 136:	e1 f3       	breq	.-8      	; 0x130 <UART_transmit>
	//Set TXC flag to indicate busy
	transmissionComplete = 0;
 138:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <transmissionComplete>
	
	//Put data into UDR buffer, sends the data
	UDR0 = message;
 13c:	8c b9       	out	0x0c, r24	; 12
	if (message == '\n') {
 13e:	8a 30       	cpi	r24, 0x0A	; 10
 140:	19 f4       	brne	.+6      	; 0x148 <UART_transmit+0x18>
		UART_transmit('\r', stream);
 142:	8d e0       	ldi	r24, 0x0D	; 13
 144:	0e 94 98 00 	call	0x130	; 0x130 <UART_transmit>
	}
	return 0;
}
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	08 95       	ret

0000014e <UART_recive>:

char UART_recive() {
	//Wait for unread data in UDR buffer
	while (!(UCSR0A & (1 << RXC0)));
 14e:	5f 9b       	sbis	0x0b, 7	; 11
 150:	fe cf       	rjmp	.-4      	; 0x14e <UART_recive>
	
	//Return received data from buffer
	return UDR0;
 152:	8c b1       	in	r24, 0x0c	; 12
}
 154:	08 95       	ret

00000156 <UART_init>:

void UART_init() {
	//Set baud rate
	UBRR0H = (BAUD_PRESCALE >> 8);
 156:	10 bc       	out	0x20, r1	; 32
	UBRR0L = BAUD_PRESCALE;
 158:	8f e1       	ldi	r24, 0x1F	; 31
 15a:	89 b9       	out	0x09, r24	; 9
	
	//Enable receiver and transmitter + TX complete interrupt
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0) | (1 << TXCIE0);
 15c:	8a b1       	in	r24, 0x0a	; 10
 15e:	88 65       	ori	r24, 0x58	; 88
 160:	8a b9       	out	0x0a, r24	; 10
	
	//Set frame format: 8-bit data, stop bit = 2_bit
	UCSR0C |= (1 << URSEL0) | (1 << USBS0) | (1 << UCSZ01) | (1 << UCSZ00); //UCSZ10 -> UCSZ01
 162:	80 b5       	in	r24, 0x20	; 32
 164:	8e 68       	ori	r24, 0x8E	; 142
 166:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(&UART_transmit, &UART_recive);
 168:	67 ea       	ldi	r22, 0xA7	; 167
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	88 e9       	ldi	r24, 0x98	; 152
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <fdevopen>
 174:	08 95       	ret

00000176 <__vector_23>:
}

//UART transmission complete interrupt handler
ISR(USART0_TXC_vect) {
 176:	1f 92       	push	r1
 178:	0f 92       	push	r0
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	0f 92       	push	r0
 17e:	11 24       	eor	r1, r1
 180:	8f 93       	push	r24
	//Set flag to indicate completion
	transmissionComplete = 1;
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <transmissionComplete>
 188:	8f 91       	pop	r24
 18a:	0f 90       	pop	r0
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	0f 90       	pop	r0
 190:	1f 90       	pop	r1
 192:	18 95       	reti

00000194 <XMEM_init>:
#include "xmem.h"

void XMEM_init(void) {
	MCUCR |= (1 << SRE);	//Enable SRAM
 194:	85 b7       	in	r24, 0x35	; 53
 196:	80 68       	ori	r24, 0x80	; 128
 198:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2);	//Masks PC4 - PC7
 19a:	80 b7       	in	r24, 0x30	; 48
 19c:	80 62       	ori	r24, 0x20	; 32
 19e:	80 bf       	out	0x30, r24	; 48
 1a0:	08 95       	ret

000001a2 <fdevopen>:
 1a2:	0f 93       	push	r16
 1a4:	1f 93       	push	r17
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	00 97       	sbiw	r24, 0x00	; 0
 1ac:	31 f4       	brne	.+12     	; 0x1ba <fdevopen+0x18>
 1ae:	61 15       	cp	r22, r1
 1b0:	71 05       	cpc	r23, r1
 1b2:	19 f4       	brne	.+6      	; 0x1ba <fdevopen+0x18>
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	3a c0       	rjmp	.+116    	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
 1ba:	8b 01       	movw	r16, r22
 1bc:	ec 01       	movw	r28, r24
 1be:	6e e0       	ldi	r22, 0x0E	; 14
 1c0:	70 e0       	ldi	r23, 0x00	; 0
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	0e 94 13 03 	call	0x626	; 0x626 <calloc>
 1ca:	fc 01       	movw	r30, r24
 1cc:	89 2b       	or	r24, r25
 1ce:	91 f3       	breq	.-28     	; 0x1b4 <fdevopen+0x12>
 1d0:	80 e8       	ldi	r24, 0x80	; 128
 1d2:	83 83       	std	Z+3, r24	; 0x03
 1d4:	01 15       	cp	r16, r1
 1d6:	11 05       	cpc	r17, r1
 1d8:	71 f0       	breq	.+28     	; 0x1f6 <fdevopen+0x54>
 1da:	13 87       	std	Z+11, r17	; 0x0b
 1dc:	02 87       	std	Z+10, r16	; 0x0a
 1de:	81 e8       	ldi	r24, 0x81	; 129
 1e0:	83 83       	std	Z+3, r24	; 0x03
 1e2:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__iob>
 1e6:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__iob+0x1>
 1ea:	89 2b       	or	r24, r25
 1ec:	21 f4       	brne	.+8      	; 0x1f6 <fdevopen+0x54>
 1ee:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <__iob+0x1>
 1f2:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <__iob>
 1f6:	20 97       	sbiw	r28, 0x00	; 0
 1f8:	c9 f0       	breq	.+50     	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
 1fa:	d1 87       	std	Z+9, r29	; 0x09
 1fc:	c0 87       	std	Z+8, r28	; 0x08
 1fe:	83 81       	ldd	r24, Z+3	; 0x03
 200:	82 60       	ori	r24, 0x02	; 2
 202:	83 83       	std	Z+3, r24	; 0x03
 204:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__iob+0x2>
 208:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__iob+0x3>
 20c:	89 2b       	or	r24, r25
 20e:	71 f4       	brne	.+28     	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
 210:	f0 93 1d 01 	sts	0x011D, r31	; 0x80011d <__iob+0x3>
 214:	e0 93 1c 01 	sts	0x011C, r30	; 0x80011c <__iob+0x2>
 218:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__iob+0x4>
 21c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__iob+0x5>
 220:	89 2b       	or	r24, r25
 222:	21 f4       	brne	.+8      	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
 224:	f0 93 1f 01 	sts	0x011F, r31	; 0x80011f <__iob+0x5>
 228:	e0 93 1e 01 	sts	0x011E, r30	; 0x80011e <__iob+0x4>
 22c:	cf 01       	movw	r24, r30
 22e:	df 91       	pop	r29
 230:	cf 91       	pop	r28
 232:	1f 91       	pop	r17
 234:	0f 91       	pop	r16
 236:	08 95       	ret

00000238 <printf>:
 238:	a0 e0       	ldi	r26, 0x00	; 0
 23a:	b0 e0       	ldi	r27, 0x00	; 0
 23c:	e2 e2       	ldi	r30, 0x22	; 34
 23e:	f1 e0       	ldi	r31, 0x01	; 1
 240:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__prologue_saves__+0x20>
 244:	ae 01       	movw	r20, r28
 246:	4b 5f       	subi	r20, 0xFB	; 251
 248:	5f 4f       	sbci	r21, 0xFF	; 255
 24a:	fa 01       	movw	r30, r20
 24c:	61 91       	ld	r22, Z+
 24e:	71 91       	ld	r23, Z+
 250:	af 01       	movw	r20, r30
 252:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__iob+0x2>
 256:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__iob+0x3>
 25a:	0e 94 32 01 	call	0x264	; 0x264 <vfprintf>
 25e:	e2 e0       	ldi	r30, 0x02	; 2
 260:	0c 94 33 05 	jmp	0xa66	; 0xa66 <__epilogue_restores__+0x20>

00000264 <vfprintf>:
 264:	ab e0       	ldi	r26, 0x0B	; 11
 266:	b0 e0       	ldi	r27, 0x00	; 0
 268:	e8 e3       	ldi	r30, 0x38	; 56
 26a:	f1 e0       	ldi	r31, 0x01	; 1
 26c:	0c 94 07 05 	jmp	0xa0e	; 0xa0e <__prologue_saves__>
 270:	6c 01       	movw	r12, r24
 272:	7b 01       	movw	r14, r22
 274:	8a 01       	movw	r16, r20
 276:	fc 01       	movw	r30, r24
 278:	17 82       	std	Z+7, r1	; 0x07
 27a:	16 82       	std	Z+6, r1	; 0x06
 27c:	83 81       	ldd	r24, Z+3	; 0x03
 27e:	81 ff       	sbrs	r24, 1
 280:	cc c1       	rjmp	.+920    	; 0x61a <__stack+0x11b>
 282:	ce 01       	movw	r24, r28
 284:	01 96       	adiw	r24, 0x01	; 1
 286:	3c 01       	movw	r6, r24
 288:	f6 01       	movw	r30, r12
 28a:	93 81       	ldd	r25, Z+3	; 0x03
 28c:	f7 01       	movw	r30, r14
 28e:	93 fd       	sbrc	r25, 3
 290:	85 91       	lpm	r24, Z+
 292:	93 ff       	sbrs	r25, 3
 294:	81 91       	ld	r24, Z+
 296:	7f 01       	movw	r14, r30
 298:	88 23       	and	r24, r24
 29a:	09 f4       	brne	.+2      	; 0x29e <vfprintf+0x3a>
 29c:	ba c1       	rjmp	.+884    	; 0x612 <__stack+0x113>
 29e:	85 32       	cpi	r24, 0x25	; 37
 2a0:	39 f4       	brne	.+14     	; 0x2b0 <vfprintf+0x4c>
 2a2:	93 fd       	sbrc	r25, 3
 2a4:	85 91       	lpm	r24, Z+
 2a6:	93 ff       	sbrs	r25, 3
 2a8:	81 91       	ld	r24, Z+
 2aa:	7f 01       	movw	r14, r30
 2ac:	85 32       	cpi	r24, 0x25	; 37
 2ae:	29 f4       	brne	.+10     	; 0x2ba <vfprintf+0x56>
 2b0:	b6 01       	movw	r22, r12
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	0e 94 6d 04 	call	0x8da	; 0x8da <fputc>
 2b8:	e7 cf       	rjmp	.-50     	; 0x288 <vfprintf+0x24>
 2ba:	91 2c       	mov	r9, r1
 2bc:	21 2c       	mov	r2, r1
 2be:	31 2c       	mov	r3, r1
 2c0:	ff e1       	ldi	r31, 0x1F	; 31
 2c2:	f3 15       	cp	r31, r3
 2c4:	d8 f0       	brcs	.+54     	; 0x2fc <vfprintf+0x98>
 2c6:	8b 32       	cpi	r24, 0x2B	; 43
 2c8:	79 f0       	breq	.+30     	; 0x2e8 <vfprintf+0x84>
 2ca:	38 f4       	brcc	.+14     	; 0x2da <vfprintf+0x76>
 2cc:	80 32       	cpi	r24, 0x20	; 32
 2ce:	79 f0       	breq	.+30     	; 0x2ee <vfprintf+0x8a>
 2d0:	83 32       	cpi	r24, 0x23	; 35
 2d2:	a1 f4       	brne	.+40     	; 0x2fc <vfprintf+0x98>
 2d4:	23 2d       	mov	r18, r3
 2d6:	20 61       	ori	r18, 0x10	; 16
 2d8:	1d c0       	rjmp	.+58     	; 0x314 <vfprintf+0xb0>
 2da:	8d 32       	cpi	r24, 0x2D	; 45
 2dc:	61 f0       	breq	.+24     	; 0x2f6 <vfprintf+0x92>
 2de:	80 33       	cpi	r24, 0x30	; 48
 2e0:	69 f4       	brne	.+26     	; 0x2fc <vfprintf+0x98>
 2e2:	23 2d       	mov	r18, r3
 2e4:	21 60       	ori	r18, 0x01	; 1
 2e6:	16 c0       	rjmp	.+44     	; 0x314 <vfprintf+0xb0>
 2e8:	83 2d       	mov	r24, r3
 2ea:	82 60       	ori	r24, 0x02	; 2
 2ec:	38 2e       	mov	r3, r24
 2ee:	e3 2d       	mov	r30, r3
 2f0:	e4 60       	ori	r30, 0x04	; 4
 2f2:	3e 2e       	mov	r3, r30
 2f4:	2a c0       	rjmp	.+84     	; 0x34a <vfprintf+0xe6>
 2f6:	f3 2d       	mov	r31, r3
 2f8:	f8 60       	ori	r31, 0x08	; 8
 2fa:	1d c0       	rjmp	.+58     	; 0x336 <vfprintf+0xd2>
 2fc:	37 fc       	sbrc	r3, 7
 2fe:	2d c0       	rjmp	.+90     	; 0x35a <vfprintf+0xf6>
 300:	20 ed       	ldi	r18, 0xD0	; 208
 302:	28 0f       	add	r18, r24
 304:	2a 30       	cpi	r18, 0x0A	; 10
 306:	40 f0       	brcs	.+16     	; 0x318 <vfprintf+0xb4>
 308:	8e 32       	cpi	r24, 0x2E	; 46
 30a:	b9 f4       	brne	.+46     	; 0x33a <vfprintf+0xd6>
 30c:	36 fc       	sbrc	r3, 6
 30e:	81 c1       	rjmp	.+770    	; 0x612 <__stack+0x113>
 310:	23 2d       	mov	r18, r3
 312:	20 64       	ori	r18, 0x40	; 64
 314:	32 2e       	mov	r3, r18
 316:	19 c0       	rjmp	.+50     	; 0x34a <vfprintf+0xe6>
 318:	36 fe       	sbrs	r3, 6
 31a:	06 c0       	rjmp	.+12     	; 0x328 <vfprintf+0xc4>
 31c:	8a e0       	ldi	r24, 0x0A	; 10
 31e:	98 9e       	mul	r9, r24
 320:	20 0d       	add	r18, r0
 322:	11 24       	eor	r1, r1
 324:	92 2e       	mov	r9, r18
 326:	11 c0       	rjmp	.+34     	; 0x34a <vfprintf+0xe6>
 328:	ea e0       	ldi	r30, 0x0A	; 10
 32a:	2e 9e       	mul	r2, r30
 32c:	20 0d       	add	r18, r0
 32e:	11 24       	eor	r1, r1
 330:	22 2e       	mov	r2, r18
 332:	f3 2d       	mov	r31, r3
 334:	f0 62       	ori	r31, 0x20	; 32
 336:	3f 2e       	mov	r3, r31
 338:	08 c0       	rjmp	.+16     	; 0x34a <vfprintf+0xe6>
 33a:	8c 36       	cpi	r24, 0x6C	; 108
 33c:	21 f4       	brne	.+8      	; 0x346 <vfprintf+0xe2>
 33e:	83 2d       	mov	r24, r3
 340:	80 68       	ori	r24, 0x80	; 128
 342:	38 2e       	mov	r3, r24
 344:	02 c0       	rjmp	.+4      	; 0x34a <vfprintf+0xe6>
 346:	88 36       	cpi	r24, 0x68	; 104
 348:	41 f4       	brne	.+16     	; 0x35a <vfprintf+0xf6>
 34a:	f7 01       	movw	r30, r14
 34c:	93 fd       	sbrc	r25, 3
 34e:	85 91       	lpm	r24, Z+
 350:	93 ff       	sbrs	r25, 3
 352:	81 91       	ld	r24, Z+
 354:	7f 01       	movw	r14, r30
 356:	81 11       	cpse	r24, r1
 358:	b3 cf       	rjmp	.-154    	; 0x2c0 <vfprintf+0x5c>
 35a:	98 2f       	mov	r25, r24
 35c:	9f 7d       	andi	r25, 0xDF	; 223
 35e:	95 54       	subi	r25, 0x45	; 69
 360:	93 30       	cpi	r25, 0x03	; 3
 362:	28 f4       	brcc	.+10     	; 0x36e <vfprintf+0x10a>
 364:	0c 5f       	subi	r16, 0xFC	; 252
 366:	1f 4f       	sbci	r17, 0xFF	; 255
 368:	9f e3       	ldi	r25, 0x3F	; 63
 36a:	99 83       	std	Y+1, r25	; 0x01
 36c:	0d c0       	rjmp	.+26     	; 0x388 <vfprintf+0x124>
 36e:	83 36       	cpi	r24, 0x63	; 99
 370:	31 f0       	breq	.+12     	; 0x37e <vfprintf+0x11a>
 372:	83 37       	cpi	r24, 0x73	; 115
 374:	71 f0       	breq	.+28     	; 0x392 <vfprintf+0x12e>
 376:	83 35       	cpi	r24, 0x53	; 83
 378:	09 f0       	breq	.+2      	; 0x37c <vfprintf+0x118>
 37a:	59 c0       	rjmp	.+178    	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 37c:	21 c0       	rjmp	.+66     	; 0x3c0 <vfprintf+0x15c>
 37e:	f8 01       	movw	r30, r16
 380:	80 81       	ld	r24, Z
 382:	89 83       	std	Y+1, r24	; 0x01
 384:	0e 5f       	subi	r16, 0xFE	; 254
 386:	1f 4f       	sbci	r17, 0xFF	; 255
 388:	88 24       	eor	r8, r8
 38a:	83 94       	inc	r8
 38c:	91 2c       	mov	r9, r1
 38e:	53 01       	movw	r10, r6
 390:	13 c0       	rjmp	.+38     	; 0x3b8 <vfprintf+0x154>
 392:	28 01       	movw	r4, r16
 394:	f2 e0       	ldi	r31, 0x02	; 2
 396:	4f 0e       	add	r4, r31
 398:	51 1c       	adc	r5, r1
 39a:	f8 01       	movw	r30, r16
 39c:	a0 80       	ld	r10, Z
 39e:	b1 80       	ldd	r11, Z+1	; 0x01
 3a0:	36 fe       	sbrs	r3, 6
 3a2:	03 c0       	rjmp	.+6      	; 0x3aa <vfprintf+0x146>
 3a4:	69 2d       	mov	r22, r9
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <vfprintf+0x14a>
 3aa:	6f ef       	ldi	r22, 0xFF	; 255
 3ac:	7f ef       	ldi	r23, 0xFF	; 255
 3ae:	c5 01       	movw	r24, r10
 3b0:	0e 94 62 04 	call	0x8c4	; 0x8c4 <strnlen>
 3b4:	4c 01       	movw	r8, r24
 3b6:	82 01       	movw	r16, r4
 3b8:	f3 2d       	mov	r31, r3
 3ba:	ff 77       	andi	r31, 0x7F	; 127
 3bc:	3f 2e       	mov	r3, r31
 3be:	16 c0       	rjmp	.+44     	; 0x3ec <vfprintf+0x188>
 3c0:	28 01       	movw	r4, r16
 3c2:	22 e0       	ldi	r18, 0x02	; 2
 3c4:	42 0e       	add	r4, r18
 3c6:	51 1c       	adc	r5, r1
 3c8:	f8 01       	movw	r30, r16
 3ca:	a0 80       	ld	r10, Z
 3cc:	b1 80       	ldd	r11, Z+1	; 0x01
 3ce:	36 fe       	sbrs	r3, 6
 3d0:	03 c0       	rjmp	.+6      	; 0x3d8 <vfprintf+0x174>
 3d2:	69 2d       	mov	r22, r9
 3d4:	70 e0       	ldi	r23, 0x00	; 0
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <vfprintf+0x178>
 3d8:	6f ef       	ldi	r22, 0xFF	; 255
 3da:	7f ef       	ldi	r23, 0xFF	; 255
 3dc:	c5 01       	movw	r24, r10
 3de:	0e 94 50 04 	call	0x8a0	; 0x8a0 <strnlen_P>
 3e2:	4c 01       	movw	r8, r24
 3e4:	f3 2d       	mov	r31, r3
 3e6:	f0 68       	ori	r31, 0x80	; 128
 3e8:	3f 2e       	mov	r3, r31
 3ea:	82 01       	movw	r16, r4
 3ec:	33 fc       	sbrc	r3, 3
 3ee:	1b c0       	rjmp	.+54     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 3f0:	82 2d       	mov	r24, r2
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	88 16       	cp	r8, r24
 3f6:	99 06       	cpc	r9, r25
 3f8:	b0 f4       	brcc	.+44     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 3fa:	b6 01       	movw	r22, r12
 3fc:	80 e2       	ldi	r24, 0x20	; 32
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	0e 94 6d 04 	call	0x8da	; 0x8da <fputc>
 404:	2a 94       	dec	r2
 406:	f4 cf       	rjmp	.-24     	; 0x3f0 <vfprintf+0x18c>
 408:	f5 01       	movw	r30, r10
 40a:	37 fc       	sbrc	r3, 7
 40c:	85 91       	lpm	r24, Z+
 40e:	37 fe       	sbrs	r3, 7
 410:	81 91       	ld	r24, Z+
 412:	5f 01       	movw	r10, r30
 414:	b6 01       	movw	r22, r12
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	0e 94 6d 04 	call	0x8da	; 0x8da <fputc>
 41c:	21 10       	cpse	r2, r1
 41e:	2a 94       	dec	r2
 420:	21 e0       	ldi	r18, 0x01	; 1
 422:	82 1a       	sub	r8, r18
 424:	91 08       	sbc	r9, r1
 426:	81 14       	cp	r8, r1
 428:	91 04       	cpc	r9, r1
 42a:	71 f7       	brne	.-36     	; 0x408 <__DATA_REGION_LENGTH__+0x8>
 42c:	e8 c0       	rjmp	.+464    	; 0x5fe <__stack+0xff>
 42e:	84 36       	cpi	r24, 0x64	; 100
 430:	11 f0       	breq	.+4      	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 432:	89 36       	cpi	r24, 0x69	; 105
 434:	41 f5       	brne	.+80     	; 0x486 <__DATA_REGION_LENGTH__+0x86>
 436:	f8 01       	movw	r30, r16
 438:	37 fe       	sbrs	r3, 7
 43a:	07 c0       	rjmp	.+14     	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
 43c:	60 81       	ld	r22, Z
 43e:	71 81       	ldd	r23, Z+1	; 0x01
 440:	82 81       	ldd	r24, Z+2	; 0x02
 442:	93 81       	ldd	r25, Z+3	; 0x03
 444:	0c 5f       	subi	r16, 0xFC	; 252
 446:	1f 4f       	sbci	r17, 0xFF	; 255
 448:	08 c0       	rjmp	.+16     	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 44a:	60 81       	ld	r22, Z
 44c:	71 81       	ldd	r23, Z+1	; 0x01
 44e:	07 2e       	mov	r0, r23
 450:	00 0c       	add	r0, r0
 452:	88 0b       	sbc	r24, r24
 454:	99 0b       	sbc	r25, r25
 456:	0e 5f       	subi	r16, 0xFE	; 254
 458:	1f 4f       	sbci	r17, 0xFF	; 255
 45a:	f3 2d       	mov	r31, r3
 45c:	ff 76       	andi	r31, 0x6F	; 111
 45e:	3f 2e       	mov	r3, r31
 460:	97 ff       	sbrs	r25, 7
 462:	09 c0       	rjmp	.+18     	; 0x476 <__DATA_REGION_LENGTH__+0x76>
 464:	90 95       	com	r25
 466:	80 95       	com	r24
 468:	70 95       	com	r23
 46a:	61 95       	neg	r22
 46c:	7f 4f       	sbci	r23, 0xFF	; 255
 46e:	8f 4f       	sbci	r24, 0xFF	; 255
 470:	9f 4f       	sbci	r25, 0xFF	; 255
 472:	f0 68       	ori	r31, 0x80	; 128
 474:	3f 2e       	mov	r3, r31
 476:	2a e0       	ldi	r18, 0x0A	; 10
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	a3 01       	movw	r20, r6
 47c:	0e 94 a9 04 	call	0x952	; 0x952 <__ultoa_invert>
 480:	88 2e       	mov	r8, r24
 482:	86 18       	sub	r8, r6
 484:	45 c0       	rjmp	.+138    	; 0x510 <__stack+0x11>
 486:	85 37       	cpi	r24, 0x75	; 117
 488:	31 f4       	brne	.+12     	; 0x496 <__DATA_REGION_LENGTH__+0x96>
 48a:	23 2d       	mov	r18, r3
 48c:	2f 7e       	andi	r18, 0xEF	; 239
 48e:	b2 2e       	mov	r11, r18
 490:	2a e0       	ldi	r18, 0x0A	; 10
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	25 c0       	rjmp	.+74     	; 0x4e0 <__DATA_REGION_LENGTH__+0xe0>
 496:	93 2d       	mov	r25, r3
 498:	99 7f       	andi	r25, 0xF9	; 249
 49a:	b9 2e       	mov	r11, r25
 49c:	8f 36       	cpi	r24, 0x6F	; 111
 49e:	c1 f0       	breq	.+48     	; 0x4d0 <__DATA_REGION_LENGTH__+0xd0>
 4a0:	18 f4       	brcc	.+6      	; 0x4a8 <__DATA_REGION_LENGTH__+0xa8>
 4a2:	88 35       	cpi	r24, 0x58	; 88
 4a4:	79 f0       	breq	.+30     	; 0x4c4 <__DATA_REGION_LENGTH__+0xc4>
 4a6:	b5 c0       	rjmp	.+362    	; 0x612 <__stack+0x113>
 4a8:	80 37       	cpi	r24, 0x70	; 112
 4aa:	19 f0       	breq	.+6      	; 0x4b2 <__DATA_REGION_LENGTH__+0xb2>
 4ac:	88 37       	cpi	r24, 0x78	; 120
 4ae:	21 f0       	breq	.+8      	; 0x4b8 <__DATA_REGION_LENGTH__+0xb8>
 4b0:	b0 c0       	rjmp	.+352    	; 0x612 <__stack+0x113>
 4b2:	e9 2f       	mov	r30, r25
 4b4:	e0 61       	ori	r30, 0x10	; 16
 4b6:	be 2e       	mov	r11, r30
 4b8:	b4 fe       	sbrs	r11, 4
 4ba:	0d c0       	rjmp	.+26     	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 4bc:	fb 2d       	mov	r31, r11
 4be:	f4 60       	ori	r31, 0x04	; 4
 4c0:	bf 2e       	mov	r11, r31
 4c2:	09 c0       	rjmp	.+18     	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 4c4:	34 fe       	sbrs	r3, 4
 4c6:	0a c0       	rjmp	.+20     	; 0x4dc <__DATA_REGION_LENGTH__+0xdc>
 4c8:	29 2f       	mov	r18, r25
 4ca:	26 60       	ori	r18, 0x06	; 6
 4cc:	b2 2e       	mov	r11, r18
 4ce:	06 c0       	rjmp	.+12     	; 0x4dc <__DATA_REGION_LENGTH__+0xdc>
 4d0:	28 e0       	ldi	r18, 0x08	; 8
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	05 c0       	rjmp	.+10     	; 0x4e0 <__DATA_REGION_LENGTH__+0xe0>
 4d6:	20 e1       	ldi	r18, 0x10	; 16
 4d8:	30 e0       	ldi	r19, 0x00	; 0
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <__DATA_REGION_LENGTH__+0xe0>
 4dc:	20 e1       	ldi	r18, 0x10	; 16
 4de:	32 e0       	ldi	r19, 0x02	; 2
 4e0:	f8 01       	movw	r30, r16
 4e2:	b7 fe       	sbrs	r11, 7
 4e4:	07 c0       	rjmp	.+14     	; 0x4f4 <__DATA_REGION_LENGTH__+0xf4>
 4e6:	60 81       	ld	r22, Z
 4e8:	71 81       	ldd	r23, Z+1	; 0x01
 4ea:	82 81       	ldd	r24, Z+2	; 0x02
 4ec:	93 81       	ldd	r25, Z+3	; 0x03
 4ee:	0c 5f       	subi	r16, 0xFC	; 252
 4f0:	1f 4f       	sbci	r17, 0xFF	; 255
 4f2:	06 c0       	rjmp	.+12     	; 0x500 <__stack+0x1>
 4f4:	60 81       	ld	r22, Z
 4f6:	71 81       	ldd	r23, Z+1	; 0x01
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	0e 5f       	subi	r16, 0xFE	; 254
 4fe:	1f 4f       	sbci	r17, 0xFF	; 255
 500:	a3 01       	movw	r20, r6
 502:	0e 94 a9 04 	call	0x952	; 0x952 <__ultoa_invert>
 506:	88 2e       	mov	r8, r24
 508:	86 18       	sub	r8, r6
 50a:	fb 2d       	mov	r31, r11
 50c:	ff 77       	andi	r31, 0x7F	; 127
 50e:	3f 2e       	mov	r3, r31
 510:	36 fe       	sbrs	r3, 6
 512:	0d c0       	rjmp	.+26     	; 0x52e <__stack+0x2f>
 514:	23 2d       	mov	r18, r3
 516:	2e 7f       	andi	r18, 0xFE	; 254
 518:	a2 2e       	mov	r10, r18
 51a:	89 14       	cp	r8, r9
 51c:	58 f4       	brcc	.+22     	; 0x534 <__stack+0x35>
 51e:	34 fe       	sbrs	r3, 4
 520:	0b c0       	rjmp	.+22     	; 0x538 <__stack+0x39>
 522:	32 fc       	sbrc	r3, 2
 524:	09 c0       	rjmp	.+18     	; 0x538 <__stack+0x39>
 526:	83 2d       	mov	r24, r3
 528:	8e 7e       	andi	r24, 0xEE	; 238
 52a:	a8 2e       	mov	r10, r24
 52c:	05 c0       	rjmp	.+10     	; 0x538 <__stack+0x39>
 52e:	b8 2c       	mov	r11, r8
 530:	a3 2c       	mov	r10, r3
 532:	03 c0       	rjmp	.+6      	; 0x53a <__stack+0x3b>
 534:	b8 2c       	mov	r11, r8
 536:	01 c0       	rjmp	.+2      	; 0x53a <__stack+0x3b>
 538:	b9 2c       	mov	r11, r9
 53a:	a4 fe       	sbrs	r10, 4
 53c:	0f c0       	rjmp	.+30     	; 0x55c <__stack+0x5d>
 53e:	fe 01       	movw	r30, r28
 540:	e8 0d       	add	r30, r8
 542:	f1 1d       	adc	r31, r1
 544:	80 81       	ld	r24, Z
 546:	80 33       	cpi	r24, 0x30	; 48
 548:	21 f4       	brne	.+8      	; 0x552 <__stack+0x53>
 54a:	9a 2d       	mov	r25, r10
 54c:	99 7e       	andi	r25, 0xE9	; 233
 54e:	a9 2e       	mov	r10, r25
 550:	09 c0       	rjmp	.+18     	; 0x564 <__stack+0x65>
 552:	a2 fe       	sbrs	r10, 2
 554:	06 c0       	rjmp	.+12     	; 0x562 <__stack+0x63>
 556:	b3 94       	inc	r11
 558:	b3 94       	inc	r11
 55a:	04 c0       	rjmp	.+8      	; 0x564 <__stack+0x65>
 55c:	8a 2d       	mov	r24, r10
 55e:	86 78       	andi	r24, 0x86	; 134
 560:	09 f0       	breq	.+2      	; 0x564 <__stack+0x65>
 562:	b3 94       	inc	r11
 564:	a3 fc       	sbrc	r10, 3
 566:	11 c0       	rjmp	.+34     	; 0x58a <__stack+0x8b>
 568:	a0 fe       	sbrs	r10, 0
 56a:	06 c0       	rjmp	.+12     	; 0x578 <__stack+0x79>
 56c:	b2 14       	cp	r11, r2
 56e:	88 f4       	brcc	.+34     	; 0x592 <__stack+0x93>
 570:	28 0c       	add	r2, r8
 572:	92 2c       	mov	r9, r2
 574:	9b 18       	sub	r9, r11
 576:	0e c0       	rjmp	.+28     	; 0x594 <__stack+0x95>
 578:	b2 14       	cp	r11, r2
 57a:	60 f4       	brcc	.+24     	; 0x594 <__stack+0x95>
 57c:	b6 01       	movw	r22, r12
 57e:	80 e2       	ldi	r24, 0x20	; 32
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	0e 94 6d 04 	call	0x8da	; 0x8da <fputc>
 586:	b3 94       	inc	r11
 588:	f7 cf       	rjmp	.-18     	; 0x578 <__stack+0x79>
 58a:	b2 14       	cp	r11, r2
 58c:	18 f4       	brcc	.+6      	; 0x594 <__stack+0x95>
 58e:	2b 18       	sub	r2, r11
 590:	02 c0       	rjmp	.+4      	; 0x596 <__stack+0x97>
 592:	98 2c       	mov	r9, r8
 594:	21 2c       	mov	r2, r1
 596:	a4 fe       	sbrs	r10, 4
 598:	10 c0       	rjmp	.+32     	; 0x5ba <__stack+0xbb>
 59a:	b6 01       	movw	r22, r12
 59c:	80 e3       	ldi	r24, 0x30	; 48
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	0e 94 6d 04 	call	0x8da	; 0x8da <fputc>
 5a4:	a2 fe       	sbrs	r10, 2
 5a6:	17 c0       	rjmp	.+46     	; 0x5d6 <__stack+0xd7>
 5a8:	a1 fc       	sbrc	r10, 1
 5aa:	03 c0       	rjmp	.+6      	; 0x5b2 <__stack+0xb3>
 5ac:	88 e7       	ldi	r24, 0x78	; 120
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <__stack+0xb7>
 5b2:	88 e5       	ldi	r24, 0x58	; 88
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	b6 01       	movw	r22, r12
 5b8:	0c c0       	rjmp	.+24     	; 0x5d2 <__stack+0xd3>
 5ba:	8a 2d       	mov	r24, r10
 5bc:	86 78       	andi	r24, 0x86	; 134
 5be:	59 f0       	breq	.+22     	; 0x5d6 <__stack+0xd7>
 5c0:	a1 fe       	sbrs	r10, 1
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <__stack+0xc9>
 5c4:	8b e2       	ldi	r24, 0x2B	; 43
 5c6:	01 c0       	rjmp	.+2      	; 0x5ca <__stack+0xcb>
 5c8:	80 e2       	ldi	r24, 0x20	; 32
 5ca:	a7 fc       	sbrc	r10, 7
 5cc:	8d e2       	ldi	r24, 0x2D	; 45
 5ce:	b6 01       	movw	r22, r12
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	0e 94 6d 04 	call	0x8da	; 0x8da <fputc>
 5d6:	89 14       	cp	r8, r9
 5d8:	38 f4       	brcc	.+14     	; 0x5e8 <__stack+0xe9>
 5da:	b6 01       	movw	r22, r12
 5dc:	80 e3       	ldi	r24, 0x30	; 48
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 6d 04 	call	0x8da	; 0x8da <fputc>
 5e4:	9a 94       	dec	r9
 5e6:	f7 cf       	rjmp	.-18     	; 0x5d6 <__stack+0xd7>
 5e8:	8a 94       	dec	r8
 5ea:	f3 01       	movw	r30, r6
 5ec:	e8 0d       	add	r30, r8
 5ee:	f1 1d       	adc	r31, r1
 5f0:	80 81       	ld	r24, Z
 5f2:	b6 01       	movw	r22, r12
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	0e 94 6d 04 	call	0x8da	; 0x8da <fputc>
 5fa:	81 10       	cpse	r8, r1
 5fc:	f5 cf       	rjmp	.-22     	; 0x5e8 <__stack+0xe9>
 5fe:	22 20       	and	r2, r2
 600:	09 f4       	brne	.+2      	; 0x604 <__stack+0x105>
 602:	42 ce       	rjmp	.-892    	; 0x288 <vfprintf+0x24>
 604:	b6 01       	movw	r22, r12
 606:	80 e2       	ldi	r24, 0x20	; 32
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	0e 94 6d 04 	call	0x8da	; 0x8da <fputc>
 60e:	2a 94       	dec	r2
 610:	f6 cf       	rjmp	.-20     	; 0x5fe <__stack+0xff>
 612:	f6 01       	movw	r30, r12
 614:	86 81       	ldd	r24, Z+6	; 0x06
 616:	97 81       	ldd	r25, Z+7	; 0x07
 618:	02 c0       	rjmp	.+4      	; 0x61e <__stack+0x11f>
 61a:	8f ef       	ldi	r24, 0xFF	; 255
 61c:	9f ef       	ldi	r25, 0xFF	; 255
 61e:	2b 96       	adiw	r28, 0x0b	; 11
 620:	e2 e1       	ldi	r30, 0x12	; 18
 622:	0c 94 23 05 	jmp	0xa46	; 0xa46 <__epilogue_restores__>

00000626 <calloc>:
 626:	0f 93       	push	r16
 628:	1f 93       	push	r17
 62a:	cf 93       	push	r28
 62c:	df 93       	push	r29
 62e:	86 9f       	mul	r24, r22
 630:	80 01       	movw	r16, r0
 632:	87 9f       	mul	r24, r23
 634:	10 0d       	add	r17, r0
 636:	96 9f       	mul	r25, r22
 638:	10 0d       	add	r17, r0
 63a:	11 24       	eor	r1, r1
 63c:	c8 01       	movw	r24, r16
 63e:	0e 94 2f 03 	call	0x65e	; 0x65e <malloc>
 642:	ec 01       	movw	r28, r24
 644:	00 97       	sbiw	r24, 0x00	; 0
 646:	29 f0       	breq	.+10     	; 0x652 <calloc+0x2c>
 648:	a8 01       	movw	r20, r16
 64a:	60 e0       	ldi	r22, 0x00	; 0
 64c:	70 e0       	ldi	r23, 0x00	; 0
 64e:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <memset>
 652:	ce 01       	movw	r24, r28
 654:	df 91       	pop	r29
 656:	cf 91       	pop	r28
 658:	1f 91       	pop	r17
 65a:	0f 91       	pop	r16
 65c:	08 95       	ret

0000065e <malloc>:
 65e:	0f 93       	push	r16
 660:	1f 93       	push	r17
 662:	cf 93       	push	r28
 664:	df 93       	push	r29
 666:	82 30       	cpi	r24, 0x02	; 2
 668:	91 05       	cpc	r25, r1
 66a:	10 f4       	brcc	.+4      	; 0x670 <malloc+0x12>
 66c:	82 e0       	ldi	r24, 0x02	; 2
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <__flp>
 674:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <__flp+0x1>
 678:	20 e0       	ldi	r18, 0x00	; 0
 67a:	30 e0       	ldi	r19, 0x00	; 0
 67c:	a0 e0       	ldi	r26, 0x00	; 0
 67e:	b0 e0       	ldi	r27, 0x00	; 0
 680:	30 97       	sbiw	r30, 0x00	; 0
 682:	19 f1       	breq	.+70     	; 0x6ca <malloc+0x6c>
 684:	40 81       	ld	r20, Z
 686:	51 81       	ldd	r21, Z+1	; 0x01
 688:	02 81       	ldd	r16, Z+2	; 0x02
 68a:	13 81       	ldd	r17, Z+3	; 0x03
 68c:	48 17       	cp	r20, r24
 68e:	59 07       	cpc	r21, r25
 690:	c8 f0       	brcs	.+50     	; 0x6c4 <malloc+0x66>
 692:	84 17       	cp	r24, r20
 694:	95 07       	cpc	r25, r21
 696:	69 f4       	brne	.+26     	; 0x6b2 <malloc+0x54>
 698:	10 97       	sbiw	r26, 0x00	; 0
 69a:	31 f0       	breq	.+12     	; 0x6a8 <malloc+0x4a>
 69c:	12 96       	adiw	r26, 0x02	; 2
 69e:	0c 93       	st	X, r16
 6a0:	12 97       	sbiw	r26, 0x02	; 2
 6a2:	13 96       	adiw	r26, 0x03	; 3
 6a4:	1c 93       	st	X, r17
 6a6:	27 c0       	rjmp	.+78     	; 0x6f6 <malloc+0x98>
 6a8:	00 93 22 01 	sts	0x0122, r16	; 0x800122 <__flp>
 6ac:	10 93 23 01 	sts	0x0123, r17	; 0x800123 <__flp+0x1>
 6b0:	22 c0       	rjmp	.+68     	; 0x6f6 <malloc+0x98>
 6b2:	21 15       	cp	r18, r1
 6b4:	31 05       	cpc	r19, r1
 6b6:	19 f0       	breq	.+6      	; 0x6be <malloc+0x60>
 6b8:	42 17       	cp	r20, r18
 6ba:	53 07       	cpc	r21, r19
 6bc:	18 f4       	brcc	.+6      	; 0x6c4 <malloc+0x66>
 6be:	9a 01       	movw	r18, r20
 6c0:	bd 01       	movw	r22, r26
 6c2:	ef 01       	movw	r28, r30
 6c4:	df 01       	movw	r26, r30
 6c6:	f8 01       	movw	r30, r16
 6c8:	db cf       	rjmp	.-74     	; 0x680 <malloc+0x22>
 6ca:	21 15       	cp	r18, r1
 6cc:	31 05       	cpc	r19, r1
 6ce:	f9 f0       	breq	.+62     	; 0x70e <malloc+0xb0>
 6d0:	28 1b       	sub	r18, r24
 6d2:	39 0b       	sbc	r19, r25
 6d4:	24 30       	cpi	r18, 0x04	; 4
 6d6:	31 05       	cpc	r19, r1
 6d8:	80 f4       	brcc	.+32     	; 0x6fa <malloc+0x9c>
 6da:	8a 81       	ldd	r24, Y+2	; 0x02
 6dc:	9b 81       	ldd	r25, Y+3	; 0x03
 6de:	61 15       	cp	r22, r1
 6e0:	71 05       	cpc	r23, r1
 6e2:	21 f0       	breq	.+8      	; 0x6ec <malloc+0x8e>
 6e4:	fb 01       	movw	r30, r22
 6e6:	93 83       	std	Z+3, r25	; 0x03
 6e8:	82 83       	std	Z+2, r24	; 0x02
 6ea:	04 c0       	rjmp	.+8      	; 0x6f4 <malloc+0x96>
 6ec:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__flp+0x1>
 6f0:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__flp>
 6f4:	fe 01       	movw	r30, r28
 6f6:	32 96       	adiw	r30, 0x02	; 2
 6f8:	44 c0       	rjmp	.+136    	; 0x782 <malloc+0x124>
 6fa:	fe 01       	movw	r30, r28
 6fc:	e2 0f       	add	r30, r18
 6fe:	f3 1f       	adc	r31, r19
 700:	81 93       	st	Z+, r24
 702:	91 93       	st	Z+, r25
 704:	22 50       	subi	r18, 0x02	; 2
 706:	31 09       	sbc	r19, r1
 708:	39 83       	std	Y+1, r19	; 0x01
 70a:	28 83       	st	Y, r18
 70c:	3a c0       	rjmp	.+116    	; 0x782 <malloc+0x124>
 70e:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <__brkval>
 712:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <__brkval+0x1>
 716:	23 2b       	or	r18, r19
 718:	41 f4       	brne	.+16     	; 0x72a <malloc+0xcc>
 71a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 71e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 722:	30 93 21 01 	sts	0x0121, r19	; 0x800121 <__brkval+0x1>
 726:	20 93 20 01 	sts	0x0120, r18	; 0x800120 <__brkval>
 72a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 72e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 732:	21 15       	cp	r18, r1
 734:	31 05       	cpc	r19, r1
 736:	41 f4       	brne	.+16     	; 0x748 <malloc+0xea>
 738:	2d b7       	in	r18, 0x3d	; 61
 73a:	3e b7       	in	r19, 0x3e	; 62
 73c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 740:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 744:	24 1b       	sub	r18, r20
 746:	35 0b       	sbc	r19, r21
 748:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <__brkval>
 74c:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <__brkval+0x1>
 750:	e2 17       	cp	r30, r18
 752:	f3 07       	cpc	r31, r19
 754:	a0 f4       	brcc	.+40     	; 0x77e <malloc+0x120>
 756:	2e 1b       	sub	r18, r30
 758:	3f 0b       	sbc	r19, r31
 75a:	28 17       	cp	r18, r24
 75c:	39 07       	cpc	r19, r25
 75e:	78 f0       	brcs	.+30     	; 0x77e <malloc+0x120>
 760:	ac 01       	movw	r20, r24
 762:	4e 5f       	subi	r20, 0xFE	; 254
 764:	5f 4f       	sbci	r21, 0xFF	; 255
 766:	24 17       	cp	r18, r20
 768:	35 07       	cpc	r19, r21
 76a:	48 f0       	brcs	.+18     	; 0x77e <malloc+0x120>
 76c:	4e 0f       	add	r20, r30
 76e:	5f 1f       	adc	r21, r31
 770:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <__brkval+0x1>
 774:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <__brkval>
 778:	81 93       	st	Z+, r24
 77a:	91 93       	st	Z+, r25
 77c:	02 c0       	rjmp	.+4      	; 0x782 <malloc+0x124>
 77e:	e0 e0       	ldi	r30, 0x00	; 0
 780:	f0 e0       	ldi	r31, 0x00	; 0
 782:	cf 01       	movw	r24, r30
 784:	df 91       	pop	r29
 786:	cf 91       	pop	r28
 788:	1f 91       	pop	r17
 78a:	0f 91       	pop	r16
 78c:	08 95       	ret

0000078e <free>:
 78e:	cf 93       	push	r28
 790:	df 93       	push	r29
 792:	00 97       	sbiw	r24, 0x00	; 0
 794:	09 f4       	brne	.+2      	; 0x798 <free+0xa>
 796:	81 c0       	rjmp	.+258    	; 0x89a <free+0x10c>
 798:	fc 01       	movw	r30, r24
 79a:	32 97       	sbiw	r30, 0x02	; 2
 79c:	13 82       	std	Z+3, r1	; 0x03
 79e:	12 82       	std	Z+2, r1	; 0x02
 7a0:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <__flp>
 7a4:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <__flp+0x1>
 7a8:	10 97       	sbiw	r26, 0x00	; 0
 7aa:	81 f4       	brne	.+32     	; 0x7cc <free+0x3e>
 7ac:	20 81       	ld	r18, Z
 7ae:	31 81       	ldd	r19, Z+1	; 0x01
 7b0:	82 0f       	add	r24, r18
 7b2:	93 1f       	adc	r25, r19
 7b4:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <__brkval>
 7b8:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <__brkval+0x1>
 7bc:	28 17       	cp	r18, r24
 7be:	39 07       	cpc	r19, r25
 7c0:	51 f5       	brne	.+84     	; 0x816 <free+0x88>
 7c2:	f0 93 21 01 	sts	0x0121, r31	; 0x800121 <__brkval+0x1>
 7c6:	e0 93 20 01 	sts	0x0120, r30	; 0x800120 <__brkval>
 7ca:	67 c0       	rjmp	.+206    	; 0x89a <free+0x10c>
 7cc:	ed 01       	movw	r28, r26
 7ce:	20 e0       	ldi	r18, 0x00	; 0
 7d0:	30 e0       	ldi	r19, 0x00	; 0
 7d2:	ce 17       	cp	r28, r30
 7d4:	df 07       	cpc	r29, r31
 7d6:	40 f4       	brcc	.+16     	; 0x7e8 <free+0x5a>
 7d8:	4a 81       	ldd	r20, Y+2	; 0x02
 7da:	5b 81       	ldd	r21, Y+3	; 0x03
 7dc:	9e 01       	movw	r18, r28
 7de:	41 15       	cp	r20, r1
 7e0:	51 05       	cpc	r21, r1
 7e2:	f1 f0       	breq	.+60     	; 0x820 <free+0x92>
 7e4:	ea 01       	movw	r28, r20
 7e6:	f5 cf       	rjmp	.-22     	; 0x7d2 <free+0x44>
 7e8:	d3 83       	std	Z+3, r29	; 0x03
 7ea:	c2 83       	std	Z+2, r28	; 0x02
 7ec:	40 81       	ld	r20, Z
 7ee:	51 81       	ldd	r21, Z+1	; 0x01
 7f0:	84 0f       	add	r24, r20
 7f2:	95 1f       	adc	r25, r21
 7f4:	c8 17       	cp	r28, r24
 7f6:	d9 07       	cpc	r29, r25
 7f8:	59 f4       	brne	.+22     	; 0x810 <free+0x82>
 7fa:	88 81       	ld	r24, Y
 7fc:	99 81       	ldd	r25, Y+1	; 0x01
 7fe:	84 0f       	add	r24, r20
 800:	95 1f       	adc	r25, r21
 802:	02 96       	adiw	r24, 0x02	; 2
 804:	91 83       	std	Z+1, r25	; 0x01
 806:	80 83       	st	Z, r24
 808:	8a 81       	ldd	r24, Y+2	; 0x02
 80a:	9b 81       	ldd	r25, Y+3	; 0x03
 80c:	93 83       	std	Z+3, r25	; 0x03
 80e:	82 83       	std	Z+2, r24	; 0x02
 810:	21 15       	cp	r18, r1
 812:	31 05       	cpc	r19, r1
 814:	29 f4       	brne	.+10     	; 0x820 <free+0x92>
 816:	f0 93 23 01 	sts	0x0123, r31	; 0x800123 <__flp+0x1>
 81a:	e0 93 22 01 	sts	0x0122, r30	; 0x800122 <__flp>
 81e:	3d c0       	rjmp	.+122    	; 0x89a <free+0x10c>
 820:	e9 01       	movw	r28, r18
 822:	fb 83       	std	Y+3, r31	; 0x03
 824:	ea 83       	std	Y+2, r30	; 0x02
 826:	49 91       	ld	r20, Y+
 828:	59 91       	ld	r21, Y+
 82a:	c4 0f       	add	r28, r20
 82c:	d5 1f       	adc	r29, r21
 82e:	ec 17       	cp	r30, r28
 830:	fd 07       	cpc	r31, r29
 832:	61 f4       	brne	.+24     	; 0x84c <free+0xbe>
 834:	80 81       	ld	r24, Z
 836:	91 81       	ldd	r25, Z+1	; 0x01
 838:	84 0f       	add	r24, r20
 83a:	95 1f       	adc	r25, r21
 83c:	02 96       	adiw	r24, 0x02	; 2
 83e:	e9 01       	movw	r28, r18
 840:	99 83       	std	Y+1, r25	; 0x01
 842:	88 83       	st	Y, r24
 844:	82 81       	ldd	r24, Z+2	; 0x02
 846:	93 81       	ldd	r25, Z+3	; 0x03
 848:	9b 83       	std	Y+3, r25	; 0x03
 84a:	8a 83       	std	Y+2, r24	; 0x02
 84c:	e0 e0       	ldi	r30, 0x00	; 0
 84e:	f0 e0       	ldi	r31, 0x00	; 0
 850:	12 96       	adiw	r26, 0x02	; 2
 852:	8d 91       	ld	r24, X+
 854:	9c 91       	ld	r25, X
 856:	13 97       	sbiw	r26, 0x03	; 3
 858:	00 97       	sbiw	r24, 0x00	; 0
 85a:	19 f0       	breq	.+6      	; 0x862 <free+0xd4>
 85c:	fd 01       	movw	r30, r26
 85e:	dc 01       	movw	r26, r24
 860:	f7 cf       	rjmp	.-18     	; 0x850 <free+0xc2>
 862:	8d 91       	ld	r24, X+
 864:	9c 91       	ld	r25, X
 866:	11 97       	sbiw	r26, 0x01	; 1
 868:	9d 01       	movw	r18, r26
 86a:	2e 5f       	subi	r18, 0xFE	; 254
 86c:	3f 4f       	sbci	r19, 0xFF	; 255
 86e:	82 0f       	add	r24, r18
 870:	93 1f       	adc	r25, r19
 872:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <__brkval>
 876:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <__brkval+0x1>
 87a:	28 17       	cp	r18, r24
 87c:	39 07       	cpc	r19, r25
 87e:	69 f4       	brne	.+26     	; 0x89a <free+0x10c>
 880:	30 97       	sbiw	r30, 0x00	; 0
 882:	29 f4       	brne	.+10     	; 0x88e <free+0x100>
 884:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <__flp+0x1>
 888:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <__flp>
 88c:	02 c0       	rjmp	.+4      	; 0x892 <free+0x104>
 88e:	13 82       	std	Z+3, r1	; 0x03
 890:	12 82       	std	Z+2, r1	; 0x02
 892:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <__brkval+0x1>
 896:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <__brkval>
 89a:	df 91       	pop	r29
 89c:	cf 91       	pop	r28
 89e:	08 95       	ret

000008a0 <strnlen_P>:
 8a0:	fc 01       	movw	r30, r24
 8a2:	05 90       	lpm	r0, Z+
 8a4:	61 50       	subi	r22, 0x01	; 1
 8a6:	70 40       	sbci	r23, 0x00	; 0
 8a8:	01 10       	cpse	r0, r1
 8aa:	d8 f7       	brcc	.-10     	; 0x8a2 <strnlen_P+0x2>
 8ac:	80 95       	com	r24
 8ae:	90 95       	com	r25
 8b0:	8e 0f       	add	r24, r30
 8b2:	9f 1f       	adc	r25, r31
 8b4:	08 95       	ret

000008b6 <memset>:
 8b6:	dc 01       	movw	r26, r24
 8b8:	01 c0       	rjmp	.+2      	; 0x8bc <memset+0x6>
 8ba:	6d 93       	st	X+, r22
 8bc:	41 50       	subi	r20, 0x01	; 1
 8be:	50 40       	sbci	r21, 0x00	; 0
 8c0:	e0 f7       	brcc	.-8      	; 0x8ba <memset+0x4>
 8c2:	08 95       	ret

000008c4 <strnlen>:
 8c4:	fc 01       	movw	r30, r24
 8c6:	61 50       	subi	r22, 0x01	; 1
 8c8:	70 40       	sbci	r23, 0x00	; 0
 8ca:	01 90       	ld	r0, Z+
 8cc:	01 10       	cpse	r0, r1
 8ce:	d8 f7       	brcc	.-10     	; 0x8c6 <strnlen+0x2>
 8d0:	80 95       	com	r24
 8d2:	90 95       	com	r25
 8d4:	8e 0f       	add	r24, r30
 8d6:	9f 1f       	adc	r25, r31
 8d8:	08 95       	ret

000008da <fputc>:
 8da:	0f 93       	push	r16
 8dc:	1f 93       	push	r17
 8de:	cf 93       	push	r28
 8e0:	df 93       	push	r29
 8e2:	fb 01       	movw	r30, r22
 8e4:	23 81       	ldd	r18, Z+3	; 0x03
 8e6:	21 fd       	sbrc	r18, 1
 8e8:	03 c0       	rjmp	.+6      	; 0x8f0 <fputc+0x16>
 8ea:	8f ef       	ldi	r24, 0xFF	; 255
 8ec:	9f ef       	ldi	r25, 0xFF	; 255
 8ee:	2c c0       	rjmp	.+88     	; 0x948 <fputc+0x6e>
 8f0:	22 ff       	sbrs	r18, 2
 8f2:	16 c0       	rjmp	.+44     	; 0x920 <fputc+0x46>
 8f4:	46 81       	ldd	r20, Z+6	; 0x06
 8f6:	57 81       	ldd	r21, Z+7	; 0x07
 8f8:	24 81       	ldd	r18, Z+4	; 0x04
 8fa:	35 81       	ldd	r19, Z+5	; 0x05
 8fc:	42 17       	cp	r20, r18
 8fe:	53 07       	cpc	r21, r19
 900:	44 f4       	brge	.+16     	; 0x912 <fputc+0x38>
 902:	a0 81       	ld	r26, Z
 904:	b1 81       	ldd	r27, Z+1	; 0x01
 906:	9d 01       	movw	r18, r26
 908:	2f 5f       	subi	r18, 0xFF	; 255
 90a:	3f 4f       	sbci	r19, 0xFF	; 255
 90c:	31 83       	std	Z+1, r19	; 0x01
 90e:	20 83       	st	Z, r18
 910:	8c 93       	st	X, r24
 912:	26 81       	ldd	r18, Z+6	; 0x06
 914:	37 81       	ldd	r19, Z+7	; 0x07
 916:	2f 5f       	subi	r18, 0xFF	; 255
 918:	3f 4f       	sbci	r19, 0xFF	; 255
 91a:	37 83       	std	Z+7, r19	; 0x07
 91c:	26 83       	std	Z+6, r18	; 0x06
 91e:	14 c0       	rjmp	.+40     	; 0x948 <fputc+0x6e>
 920:	8b 01       	movw	r16, r22
 922:	ec 01       	movw	r28, r24
 924:	fb 01       	movw	r30, r22
 926:	00 84       	ldd	r0, Z+8	; 0x08
 928:	f1 85       	ldd	r31, Z+9	; 0x09
 92a:	e0 2d       	mov	r30, r0
 92c:	09 95       	icall
 92e:	89 2b       	or	r24, r25
 930:	e1 f6       	brne	.-72     	; 0x8ea <fputc+0x10>
 932:	d8 01       	movw	r26, r16
 934:	16 96       	adiw	r26, 0x06	; 6
 936:	8d 91       	ld	r24, X+
 938:	9c 91       	ld	r25, X
 93a:	17 97       	sbiw	r26, 0x07	; 7
 93c:	01 96       	adiw	r24, 0x01	; 1
 93e:	17 96       	adiw	r26, 0x07	; 7
 940:	9c 93       	st	X, r25
 942:	8e 93       	st	-X, r24
 944:	16 97       	sbiw	r26, 0x06	; 6
 946:	ce 01       	movw	r24, r28
 948:	df 91       	pop	r29
 94a:	cf 91       	pop	r28
 94c:	1f 91       	pop	r17
 94e:	0f 91       	pop	r16
 950:	08 95       	ret

00000952 <__ultoa_invert>:
 952:	fa 01       	movw	r30, r20
 954:	aa 27       	eor	r26, r26
 956:	28 30       	cpi	r18, 0x08	; 8
 958:	51 f1       	breq	.+84     	; 0x9ae <__ultoa_invert+0x5c>
 95a:	20 31       	cpi	r18, 0x10	; 16
 95c:	81 f1       	breq	.+96     	; 0x9be <__ultoa_invert+0x6c>
 95e:	e8 94       	clt
 960:	6f 93       	push	r22
 962:	6e 7f       	andi	r22, 0xFE	; 254
 964:	6e 5f       	subi	r22, 0xFE	; 254
 966:	7f 4f       	sbci	r23, 0xFF	; 255
 968:	8f 4f       	sbci	r24, 0xFF	; 255
 96a:	9f 4f       	sbci	r25, 0xFF	; 255
 96c:	af 4f       	sbci	r26, 0xFF	; 255
 96e:	b1 e0       	ldi	r27, 0x01	; 1
 970:	3e d0       	rcall	.+124    	; 0x9ee <__ultoa_invert+0x9c>
 972:	b4 e0       	ldi	r27, 0x04	; 4
 974:	3c d0       	rcall	.+120    	; 0x9ee <__ultoa_invert+0x9c>
 976:	67 0f       	add	r22, r23
 978:	78 1f       	adc	r23, r24
 97a:	89 1f       	adc	r24, r25
 97c:	9a 1f       	adc	r25, r26
 97e:	a1 1d       	adc	r26, r1
 980:	68 0f       	add	r22, r24
 982:	79 1f       	adc	r23, r25
 984:	8a 1f       	adc	r24, r26
 986:	91 1d       	adc	r25, r1
 988:	a1 1d       	adc	r26, r1
 98a:	6a 0f       	add	r22, r26
 98c:	71 1d       	adc	r23, r1
 98e:	81 1d       	adc	r24, r1
 990:	91 1d       	adc	r25, r1
 992:	a1 1d       	adc	r26, r1
 994:	20 d0       	rcall	.+64     	; 0x9d6 <__ultoa_invert+0x84>
 996:	09 f4       	brne	.+2      	; 0x99a <__ultoa_invert+0x48>
 998:	68 94       	set
 99a:	3f 91       	pop	r19
 99c:	2a e0       	ldi	r18, 0x0A	; 10
 99e:	26 9f       	mul	r18, r22
 9a0:	11 24       	eor	r1, r1
 9a2:	30 19       	sub	r19, r0
 9a4:	30 5d       	subi	r19, 0xD0	; 208
 9a6:	31 93       	st	Z+, r19
 9a8:	de f6       	brtc	.-74     	; 0x960 <__ultoa_invert+0xe>
 9aa:	cf 01       	movw	r24, r30
 9ac:	08 95       	ret
 9ae:	46 2f       	mov	r20, r22
 9b0:	47 70       	andi	r20, 0x07	; 7
 9b2:	40 5d       	subi	r20, 0xD0	; 208
 9b4:	41 93       	st	Z+, r20
 9b6:	b3 e0       	ldi	r27, 0x03	; 3
 9b8:	0f d0       	rcall	.+30     	; 0x9d8 <__ultoa_invert+0x86>
 9ba:	c9 f7       	brne	.-14     	; 0x9ae <__ultoa_invert+0x5c>
 9bc:	f6 cf       	rjmp	.-20     	; 0x9aa <__ultoa_invert+0x58>
 9be:	46 2f       	mov	r20, r22
 9c0:	4f 70       	andi	r20, 0x0F	; 15
 9c2:	40 5d       	subi	r20, 0xD0	; 208
 9c4:	4a 33       	cpi	r20, 0x3A	; 58
 9c6:	18 f0       	brcs	.+6      	; 0x9ce <__ultoa_invert+0x7c>
 9c8:	49 5d       	subi	r20, 0xD9	; 217
 9ca:	31 fd       	sbrc	r19, 1
 9cc:	40 52       	subi	r20, 0x20	; 32
 9ce:	41 93       	st	Z+, r20
 9d0:	02 d0       	rcall	.+4      	; 0x9d6 <__ultoa_invert+0x84>
 9d2:	a9 f7       	brne	.-22     	; 0x9be <__ultoa_invert+0x6c>
 9d4:	ea cf       	rjmp	.-44     	; 0x9aa <__ultoa_invert+0x58>
 9d6:	b4 e0       	ldi	r27, 0x04	; 4
 9d8:	a6 95       	lsr	r26
 9da:	97 95       	ror	r25
 9dc:	87 95       	ror	r24
 9de:	77 95       	ror	r23
 9e0:	67 95       	ror	r22
 9e2:	ba 95       	dec	r27
 9e4:	c9 f7       	brne	.-14     	; 0x9d8 <__ultoa_invert+0x86>
 9e6:	00 97       	sbiw	r24, 0x00	; 0
 9e8:	61 05       	cpc	r22, r1
 9ea:	71 05       	cpc	r23, r1
 9ec:	08 95       	ret
 9ee:	9b 01       	movw	r18, r22
 9f0:	ac 01       	movw	r20, r24
 9f2:	0a 2e       	mov	r0, r26
 9f4:	06 94       	lsr	r0
 9f6:	57 95       	ror	r21
 9f8:	47 95       	ror	r20
 9fa:	37 95       	ror	r19
 9fc:	27 95       	ror	r18
 9fe:	ba 95       	dec	r27
 a00:	c9 f7       	brne	.-14     	; 0x9f4 <__ultoa_invert+0xa2>
 a02:	62 0f       	add	r22, r18
 a04:	73 1f       	adc	r23, r19
 a06:	84 1f       	adc	r24, r20
 a08:	95 1f       	adc	r25, r21
 a0a:	a0 1d       	adc	r26, r0
 a0c:	08 95       	ret

00000a0e <__prologue_saves__>:
 a0e:	2f 92       	push	r2
 a10:	3f 92       	push	r3
 a12:	4f 92       	push	r4
 a14:	5f 92       	push	r5
 a16:	6f 92       	push	r6
 a18:	7f 92       	push	r7
 a1a:	8f 92       	push	r8
 a1c:	9f 92       	push	r9
 a1e:	af 92       	push	r10
 a20:	bf 92       	push	r11
 a22:	cf 92       	push	r12
 a24:	df 92       	push	r13
 a26:	ef 92       	push	r14
 a28:	ff 92       	push	r15
 a2a:	0f 93       	push	r16
 a2c:	1f 93       	push	r17
 a2e:	cf 93       	push	r28
 a30:	df 93       	push	r29
 a32:	cd b7       	in	r28, 0x3d	; 61
 a34:	de b7       	in	r29, 0x3e	; 62
 a36:	ca 1b       	sub	r28, r26
 a38:	db 0b       	sbc	r29, r27
 a3a:	0f b6       	in	r0, 0x3f	; 63
 a3c:	f8 94       	cli
 a3e:	de bf       	out	0x3e, r29	; 62
 a40:	0f be       	out	0x3f, r0	; 63
 a42:	cd bf       	out	0x3d, r28	; 61
 a44:	09 94       	ijmp

00000a46 <__epilogue_restores__>:
 a46:	2a 88       	ldd	r2, Y+18	; 0x12
 a48:	39 88       	ldd	r3, Y+17	; 0x11
 a4a:	48 88       	ldd	r4, Y+16	; 0x10
 a4c:	5f 84       	ldd	r5, Y+15	; 0x0f
 a4e:	6e 84       	ldd	r6, Y+14	; 0x0e
 a50:	7d 84       	ldd	r7, Y+13	; 0x0d
 a52:	8c 84       	ldd	r8, Y+12	; 0x0c
 a54:	9b 84       	ldd	r9, Y+11	; 0x0b
 a56:	aa 84       	ldd	r10, Y+10	; 0x0a
 a58:	b9 84       	ldd	r11, Y+9	; 0x09
 a5a:	c8 84       	ldd	r12, Y+8	; 0x08
 a5c:	df 80       	ldd	r13, Y+7	; 0x07
 a5e:	ee 80       	ldd	r14, Y+6	; 0x06
 a60:	fd 80       	ldd	r15, Y+5	; 0x05
 a62:	0c 81       	ldd	r16, Y+4	; 0x04
 a64:	1b 81       	ldd	r17, Y+3	; 0x03
 a66:	aa 81       	ldd	r26, Y+2	; 0x02
 a68:	b9 81       	ldd	r27, Y+1	; 0x01
 a6a:	ce 0f       	add	r28, r30
 a6c:	d1 1d       	adc	r29, r1
 a6e:	0f b6       	in	r0, 0x3f	; 63
 a70:	f8 94       	cli
 a72:	de bf       	out	0x3e, r29	; 62
 a74:	0f be       	out	0x3f, r0	; 63
 a76:	cd bf       	out	0x3d, r28	; 61
 a78:	ed 01       	movw	r28, r26
 a7a:	08 95       	ret

00000a7c <_exit>:
 a7c:	f8 94       	cli

00000a7e <__stop_program>:
 a7e:	ff cf       	rjmp	.-2      	; 0xa7e <__stop_program>
