
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00000b64  00000bf8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b64  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080011a  0080011a  00000c12  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c12  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000cac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000eb7  00000000  00000000  00000d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000afe  00000000  00000000  00001c43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000076e  00000000  00000000  00002741  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  00002eb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000550  00000000  00000000  00003090  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003f9  00000000  00000000  000035e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  000039d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__vector_23>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 e6       	ldi	r30, 0x64	; 100
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 31       	cpi	r26, 0x1A	; 26
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa e1       	ldi	r26, 0x1A	; 26
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a8 32       	cpi	r26, 0x28	; 40
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 bb 00 	call	0x176	; 0x176 <main>
  a6:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_read>:
#include <util/delay.h>


int ADC_read(int channel) {
	volatile char *adc = (char *) 0x1400; //ADC start address
	adc[0] = 0; //Channel enable
  ae:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <__bss_end+0x12d8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b2:	e5 ef       	ldi	r30, 0xF5	; 245
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	31 97       	sbiw	r30, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <ADC_read+0x8>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <ADC_read+0xe>
  bc:	00 00       	nop
	_delay_us(200);
	
	uint8_t value;
	for (int i=0 ; i<=channel; i++) {
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	04 c0       	rjmp	.+8      	; 0xcc <ADC_read+0x1e>
		 value = adc[0]; //8 bit value from channel
  c4:	40 91 00 14 	lds	r20, 0x1400	; 0x801400 <__bss_end+0x12d8>
	volatile char *adc = (char *) 0x1400; //ADC start address
	adc[0] = 0; //Channel enable
	_delay_us(200);
	
	uint8_t value;
	for (int i=0 ; i<=channel; i++) {
  c8:	2f 5f       	subi	r18, 0xFF	; 255
  ca:	3f 4f       	sbci	r19, 0xFF	; 255
  cc:	82 17       	cp	r24, r18
  ce:	93 07       	cpc	r25, r19
  d0:	cc f7       	brge	.-14     	; 0xc4 <ADC_read+0x16>
		 value = adc[0]; //8 bit value from channel
	}
	return value;
  d2:	84 2f       	mov	r24, r20
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	08 95       	ret

000000d8 <joystick_calibrate>:

volatile int x_offset = 0;
volatile int y_offset = 0;

void joystick_calibrate(void) {
	x_offset = ADC_read(channel_0);
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
  e0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <x_offset+0x1>
  e4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <x_offset>
	y_offset = ADC_read(channel_1);
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
  f0:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
  f4:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
  f8:	08 95       	ret

000000fa <joystick_position_x>:
}
//      173 = 0
// 01 <- x -> 255
// 01 <- y -> 255

int joystick_position_x(void) {
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
	int offset = x_offset - 127;
  fe:	c0 91 1c 01 	lds	r28, 0x011C	; 0x80011c <x_offset>
 102:	d0 91 1d 01 	lds	r29, 0x011D	; 0x80011d <x_offset+0x1>
 106:	cf 57       	subi	r28, 0x7F	; 127
 108:	d1 09       	sbc	r29, r1
	
	int position_x = ((ADC_read(channel_0) - offset - 127) * 100) / 127;
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
 112:	8c 1b       	sub	r24, r28
 114:	9d 0b       	sbc	r25, r29
 116:	9c 01       	movw	r18, r24
 118:	2f 57       	subi	r18, 0x7F	; 127
 11a:	31 09       	sbc	r19, r1
 11c:	44 e6       	ldi	r20, 0x64	; 100
 11e:	42 9f       	mul	r20, r18
 120:	c0 01       	movw	r24, r0
 122:	43 9f       	mul	r20, r19
 124:	90 0d       	add	r25, r0
 126:	11 24       	eor	r1, r1
 128:	6f e7       	ldi	r22, 0x7F	; 127
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	0e 94 1b 01 	call	0x236	; 0x236 <__divmodhi4>
 130:	cb 01       	movw	r24, r22
	return position_x;
}
 132:	df 91       	pop	r29
 134:	cf 91       	pop	r28
 136:	08 95       	ret

00000138 <joystick_position_y>:

int joystick_position_y(void) {
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
	int offset = y_offset - 127;
 13c:	c0 91 1a 01 	lds	r28, 0x011A	; 0x80011a <__data_end>
 140:	d0 91 1b 01 	lds	r29, 0x011B	; 0x80011b <__data_end+0x1>
 144:	cf 57       	subi	r28, 0x7F	; 127
 146:	d1 09       	sbc	r29, r1
	int position_y = ((ADC_read(channel_1) - offset - 127) * 100) / 127;
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
 150:	8c 1b       	sub	r24, r28
 152:	9d 0b       	sbc	r25, r29
 154:	9c 01       	movw	r18, r24
 156:	2f 57       	subi	r18, 0x7F	; 127
 158:	31 09       	sbc	r19, r1
 15a:	44 e6       	ldi	r20, 0x64	; 100
 15c:	42 9f       	mul	r20, r18
 15e:	c0 01       	movw	r24, r0
 160:	43 9f       	mul	r20, r19
 162:	90 0d       	add	r25, r0
 164:	11 24       	eor	r1, r1
 166:	6f e7       	ldi	r22, 0x7F	; 127
 168:	70 e0       	ldi	r23, 0x00	; 0
 16a:	0e 94 1b 01 	call	0x236	; 0x236 <__divmodhi4>
 16e:	cb 01       	movw	r24, r22
	
	return position_y;
}
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	08 95       	ret

00000176 <main>:
#define BAUD 9600
#define BAUD_PRESCALE ((F_CPU / (BAUD * 16UL)) - 1)

int main(void)
{
	sei();  //Enable global interrupts	
 176:	78 94       	sei
	UART_init();
 178:	0e 94 f5 00 	call	0x1ea	; 0x1ea <UART_init>
	XMEM_init();
 17c:	0e 94 14 01 	call	0x228	; 0x228 <XMEM_init>
	joystick_calibrate();
 180:	0e 94 6c 00 	call	0xd8	; 0xd8 <joystick_calibrate>
				
	while(1) {
		//ADC test
		printf("ADC x:%d\t y:%d \n\n", joystick_position_x(),  joystick_position_y());
 184:	0e 94 9c 00 	call	0x138	; 0x138 <joystick_position_y>
 188:	c8 2f       	mov	r28, r24
 18a:	d9 2f       	mov	r29, r25
 18c:	0e 94 7d 00 	call	0xfa	; 0xfa <joystick_position_x>
 190:	df 93       	push	r29
 192:	cf 93       	push	r28
 194:	9f 93       	push	r25
 196:	8f 93       	push	r24
 198:	87 e0       	ldi	r24, 0x07	; 7
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	9f 93       	push	r25
 19e:	8f 93       	push	r24
 1a0:	0e 94 8e 01 	call	0x31c	; 0x31c <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	8f e7       	ldi	r24, 0x7F	; 127
 1a8:	97 e0       	ldi	r25, 0x07	; 7
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	80 40       	sbci	r24, 0x00	; 0
 1ae:	90 40       	sbci	r25, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <main+0x34>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <main+0x3e>
 1b4:	00 00       	nop
 1b6:	0f 90       	pop	r0
 1b8:	0f 90       	pop	r0
 1ba:	0f 90       	pop	r0
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
 1c2:	e0 cf       	rjmp	.-64     	; 0x184 <main+0xe>

000001c4 <UART_transmit>:
#define BAUD_PRESCALE ((F_CPU / (BAUD * 16UL)) - 1)
volatile uint8_t transmissionComplete = 1;

static int UART_transmit(char message, FILE *stream) {
	//Wait for prev transmission to complete
	while (!transmissionComplete);
 1c4:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <transmissionComplete>
 1c8:	99 23       	and	r25, r25
 1ca:	e1 f3       	breq	.-8      	; 0x1c4 <UART_transmit>
	//Set TXC flag to indicate busy
	transmissionComplete = 0;
 1cc:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <transmissionComplete>
	
	//Put data into UDR buffer, sends the data
	UDR0 = message;
 1d0:	8c b9       	out	0x0c, r24	; 12
	if (message == '\n') {
 1d2:	8a 30       	cpi	r24, 0x0A	; 10
 1d4:	19 f4       	brne	.+6      	; 0x1dc <UART_transmit+0x18>
		UART_transmit('\r', stream);
 1d6:	8d e0       	ldi	r24, 0x0D	; 13
 1d8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <UART_transmit>
	}
	return 0;
}
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	08 95       	ret

000001e2 <UART_recive>:

char UART_recive() {
	//Wait for unread data in UDR buffer
	while (!(UCSR0A & (1 << RXC0)));
 1e2:	5f 9b       	sbis	0x0b, 7	; 11
 1e4:	fe cf       	rjmp	.-4      	; 0x1e2 <UART_recive>
	
	//Return received data from buffer
	return UDR0;
 1e6:	8c b1       	in	r24, 0x0c	; 12
}
 1e8:	08 95       	ret

000001ea <UART_init>:

void UART_init() {
	//Set baud rate
	UBRR0H = (BAUD_PRESCALE >> 8);
 1ea:	10 bc       	out	0x20, r1	; 32
	UBRR0L = BAUD_PRESCALE;
 1ec:	8f e1       	ldi	r24, 0x1F	; 31
 1ee:	89 b9       	out	0x09, r24	; 9
	
	//Enable receiver and transmitter + TX complete interrupt
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0) | (1 << TXCIE0);
 1f0:	8a b1       	in	r24, 0x0a	; 10
 1f2:	88 65       	ori	r24, 0x58	; 88
 1f4:	8a b9       	out	0x0a, r24	; 10
	
	//Set frame format: 8-bit data, stop bit = 2_bit
	UCSR0C |= (1 << URSEL0) | (1 << USBS0) | (1 << UCSZ01) | (1 << UCSZ00); //UCSZ10 -> UCSZ01
 1f6:	80 b5       	in	r24, 0x20	; 32
 1f8:	8e 68       	ori	r24, 0x8E	; 142
 1fa:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(&UART_transmit, &UART_recive);
 1fc:	61 ef       	ldi	r22, 0xF1	; 241
 1fe:	70 e0       	ldi	r23, 0x00	; 0
 200:	82 ee       	ldi	r24, 0xE2	; 226
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	0e 94 43 01 	call	0x286	; 0x286 <fdevopen>
 208:	08 95       	ret

0000020a <__vector_23>:
}

//UART transmission complete interrupt handler
ISR(USART0_TXC_vect) {
 20a:	1f 92       	push	r1
 20c:	0f 92       	push	r0
 20e:	0f b6       	in	r0, 0x3f	; 63
 210:	0f 92       	push	r0
 212:	11 24       	eor	r1, r1
 214:	8f 93       	push	r24
	//Set flag to indicate completion
	transmissionComplete = 1;
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <transmissionComplete>
 21c:	8f 91       	pop	r24
 21e:	0f 90       	pop	r0
 220:	0f be       	out	0x3f, r0	; 63
 222:	0f 90       	pop	r0
 224:	1f 90       	pop	r1
 226:	18 95       	reti

00000228 <XMEM_init>:
#include <stdlib.h>

#define  BASE_ADDRESS 0x1000

void XMEM_init(void) {
	MCUCR |= (1 << SRE);	//Enable SRAM
 228:	85 b7       	in	r24, 0x35	; 53
 22a:	80 68       	ori	r24, 0x80	; 128
 22c:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2);	//Masks PC4 - PC7
 22e:	80 b7       	in	r24, 0x30	; 48
 230:	80 62       	ori	r24, 0x20	; 32
 232:	80 bf       	out	0x30, r24	; 48
 234:	08 95       	ret

00000236 <__divmodhi4>:
 236:	97 fb       	bst	r25, 7
 238:	07 2e       	mov	r0, r23
 23a:	16 f4       	brtc	.+4      	; 0x240 <__divmodhi4+0xa>
 23c:	00 94       	com	r0
 23e:	07 d0       	rcall	.+14     	; 0x24e <__divmodhi4_neg1>
 240:	77 fd       	sbrc	r23, 7
 242:	09 d0       	rcall	.+18     	; 0x256 <__divmodhi4_neg2>
 244:	0e 94 2f 01 	call	0x25e	; 0x25e <__udivmodhi4>
 248:	07 fc       	sbrc	r0, 7
 24a:	05 d0       	rcall	.+10     	; 0x256 <__divmodhi4_neg2>
 24c:	3e f4       	brtc	.+14     	; 0x25c <__divmodhi4_exit>

0000024e <__divmodhi4_neg1>:
 24e:	90 95       	com	r25
 250:	81 95       	neg	r24
 252:	9f 4f       	sbci	r25, 0xFF	; 255
 254:	08 95       	ret

00000256 <__divmodhi4_neg2>:
 256:	70 95       	com	r23
 258:	61 95       	neg	r22
 25a:	7f 4f       	sbci	r23, 0xFF	; 255

0000025c <__divmodhi4_exit>:
 25c:	08 95       	ret

0000025e <__udivmodhi4>:
 25e:	aa 1b       	sub	r26, r26
 260:	bb 1b       	sub	r27, r27
 262:	51 e1       	ldi	r21, 0x11	; 17
 264:	07 c0       	rjmp	.+14     	; 0x274 <__udivmodhi4_ep>

00000266 <__udivmodhi4_loop>:
 266:	aa 1f       	adc	r26, r26
 268:	bb 1f       	adc	r27, r27
 26a:	a6 17       	cp	r26, r22
 26c:	b7 07       	cpc	r27, r23
 26e:	10 f0       	brcs	.+4      	; 0x274 <__udivmodhi4_ep>
 270:	a6 1b       	sub	r26, r22
 272:	b7 0b       	sbc	r27, r23

00000274 <__udivmodhi4_ep>:
 274:	88 1f       	adc	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	5a 95       	dec	r21
 27a:	a9 f7       	brne	.-22     	; 0x266 <__udivmodhi4_loop>
 27c:	80 95       	com	r24
 27e:	90 95       	com	r25
 280:	bc 01       	movw	r22, r24
 282:	cd 01       	movw	r24, r26
 284:	08 95       	ret

00000286 <fdevopen>:
 286:	0f 93       	push	r16
 288:	1f 93       	push	r17
 28a:	cf 93       	push	r28
 28c:	df 93       	push	r29
 28e:	00 97       	sbiw	r24, 0x00	; 0
 290:	31 f4       	brne	.+12     	; 0x29e <fdevopen+0x18>
 292:	61 15       	cp	r22, r1
 294:	71 05       	cpc	r23, r1
 296:	19 f4       	brne	.+6      	; 0x29e <fdevopen+0x18>
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	3a c0       	rjmp	.+116    	; 0x312 <fdevopen+0x8c>
 29e:	8b 01       	movw	r16, r22
 2a0:	ec 01       	movw	r28, r24
 2a2:	6e e0       	ldi	r22, 0x0E	; 14
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	0e 94 85 03 	call	0x70a	; 0x70a <calloc>
 2ae:	fc 01       	movw	r30, r24
 2b0:	89 2b       	or	r24, r25
 2b2:	91 f3       	breq	.-28     	; 0x298 <fdevopen+0x12>
 2b4:	80 e8       	ldi	r24, 0x80	; 128
 2b6:	83 83       	std	Z+3, r24	; 0x03
 2b8:	01 15       	cp	r16, r1
 2ba:	11 05       	cpc	r17, r1
 2bc:	71 f0       	breq	.+28     	; 0x2da <fdevopen+0x54>
 2be:	13 87       	std	Z+11, r17	; 0x0b
 2c0:	02 87       	std	Z+10, r16	; 0x0a
 2c2:	81 e8       	ldi	r24, 0x81	; 129
 2c4:	83 83       	std	Z+3, r24	; 0x03
 2c6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__iob>
 2ca:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__iob+0x1>
 2ce:	89 2b       	or	r24, r25
 2d0:	21 f4       	brne	.+8      	; 0x2da <fdevopen+0x54>
 2d2:	f0 93 1f 01 	sts	0x011F, r31	; 0x80011f <__iob+0x1>
 2d6:	e0 93 1e 01 	sts	0x011E, r30	; 0x80011e <__iob>
 2da:	20 97       	sbiw	r28, 0x00	; 0
 2dc:	c9 f0       	breq	.+50     	; 0x310 <fdevopen+0x8a>
 2de:	d1 87       	std	Z+9, r29	; 0x09
 2e0:	c0 87       	std	Z+8, r28	; 0x08
 2e2:	83 81       	ldd	r24, Z+3	; 0x03
 2e4:	82 60       	ori	r24, 0x02	; 2
 2e6:	83 83       	std	Z+3, r24	; 0x03
 2e8:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__iob+0x2>
 2ec:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__iob+0x3>
 2f0:	89 2b       	or	r24, r25
 2f2:	71 f4       	brne	.+28     	; 0x310 <fdevopen+0x8a>
 2f4:	f0 93 21 01 	sts	0x0121, r31	; 0x800121 <__iob+0x3>
 2f8:	e0 93 20 01 	sts	0x0120, r30	; 0x800120 <__iob+0x2>
 2fc:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__iob+0x4>
 300:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__iob+0x5>
 304:	89 2b       	or	r24, r25
 306:	21 f4       	brne	.+8      	; 0x310 <fdevopen+0x8a>
 308:	f0 93 23 01 	sts	0x0123, r31	; 0x800123 <__iob+0x5>
 30c:	e0 93 22 01 	sts	0x0122, r30	; 0x800122 <__iob+0x4>
 310:	cf 01       	movw	r24, r30
 312:	df 91       	pop	r29
 314:	cf 91       	pop	r28
 316:	1f 91       	pop	r17
 318:	0f 91       	pop	r16
 31a:	08 95       	ret

0000031c <printf>:
 31c:	a0 e0       	ldi	r26, 0x00	; 0
 31e:	b0 e0       	ldi	r27, 0x00	; 0
 320:	e4 e9       	ldi	r30, 0x94	; 148
 322:	f1 e0       	ldi	r31, 0x01	; 1
 324:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__prologue_saves__+0x20>
 328:	ae 01       	movw	r20, r28
 32a:	4b 5f       	subi	r20, 0xFB	; 251
 32c:	5f 4f       	sbci	r21, 0xFF	; 255
 32e:	fa 01       	movw	r30, r20
 330:	61 91       	ld	r22, Z+
 332:	71 91       	ld	r23, Z+
 334:	af 01       	movw	r20, r30
 336:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__iob+0x2>
 33a:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__iob+0x3>
 33e:	0e 94 a4 01 	call	0x348	; 0x348 <vfprintf>
 342:	e2 e0       	ldi	r30, 0x02	; 2
 344:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__epilogue_restores__+0x20>

00000348 <vfprintf>:
 348:	ab e0       	ldi	r26, 0x0B	; 11
 34a:	b0 e0       	ldi	r27, 0x00	; 0
 34c:	ea ea       	ldi	r30, 0xAA	; 170
 34e:	f1 e0       	ldi	r31, 0x01	; 1
 350:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__prologue_saves__>
 354:	6c 01       	movw	r12, r24
 356:	7b 01       	movw	r14, r22
 358:	8a 01       	movw	r16, r20
 35a:	fc 01       	movw	r30, r24
 35c:	17 82       	std	Z+7, r1	; 0x07
 35e:	16 82       	std	Z+6, r1	; 0x06
 360:	83 81       	ldd	r24, Z+3	; 0x03
 362:	81 ff       	sbrs	r24, 1
 364:	cc c1       	rjmp	.+920    	; 0x6fe <__stack+0x1ff>
 366:	ce 01       	movw	r24, r28
 368:	01 96       	adiw	r24, 0x01	; 1
 36a:	3c 01       	movw	r6, r24
 36c:	f6 01       	movw	r30, r12
 36e:	93 81       	ldd	r25, Z+3	; 0x03
 370:	f7 01       	movw	r30, r14
 372:	93 fd       	sbrc	r25, 3
 374:	85 91       	lpm	r24, Z+
 376:	93 ff       	sbrs	r25, 3
 378:	81 91       	ld	r24, Z+
 37a:	7f 01       	movw	r14, r30
 37c:	88 23       	and	r24, r24
 37e:	09 f4       	brne	.+2      	; 0x382 <vfprintf+0x3a>
 380:	ba c1       	rjmp	.+884    	; 0x6f6 <__stack+0x1f7>
 382:	85 32       	cpi	r24, 0x25	; 37
 384:	39 f4       	brne	.+14     	; 0x394 <vfprintf+0x4c>
 386:	93 fd       	sbrc	r25, 3
 388:	85 91       	lpm	r24, Z+
 38a:	93 ff       	sbrs	r25, 3
 38c:	81 91       	ld	r24, Z+
 38e:	7f 01       	movw	r14, r30
 390:	85 32       	cpi	r24, 0x25	; 37
 392:	29 f4       	brne	.+10     	; 0x39e <vfprintf+0x56>
 394:	b6 01       	movw	r22, r12
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 39c:	e7 cf       	rjmp	.-50     	; 0x36c <vfprintf+0x24>
 39e:	91 2c       	mov	r9, r1
 3a0:	21 2c       	mov	r2, r1
 3a2:	31 2c       	mov	r3, r1
 3a4:	ff e1       	ldi	r31, 0x1F	; 31
 3a6:	f3 15       	cp	r31, r3
 3a8:	d8 f0       	brcs	.+54     	; 0x3e0 <vfprintf+0x98>
 3aa:	8b 32       	cpi	r24, 0x2B	; 43
 3ac:	79 f0       	breq	.+30     	; 0x3cc <vfprintf+0x84>
 3ae:	38 f4       	brcc	.+14     	; 0x3be <vfprintf+0x76>
 3b0:	80 32       	cpi	r24, 0x20	; 32
 3b2:	79 f0       	breq	.+30     	; 0x3d2 <vfprintf+0x8a>
 3b4:	83 32       	cpi	r24, 0x23	; 35
 3b6:	a1 f4       	brne	.+40     	; 0x3e0 <vfprintf+0x98>
 3b8:	23 2d       	mov	r18, r3
 3ba:	20 61       	ori	r18, 0x10	; 16
 3bc:	1d c0       	rjmp	.+58     	; 0x3f8 <vfprintf+0xb0>
 3be:	8d 32       	cpi	r24, 0x2D	; 45
 3c0:	61 f0       	breq	.+24     	; 0x3da <vfprintf+0x92>
 3c2:	80 33       	cpi	r24, 0x30	; 48
 3c4:	69 f4       	brne	.+26     	; 0x3e0 <vfprintf+0x98>
 3c6:	23 2d       	mov	r18, r3
 3c8:	21 60       	ori	r18, 0x01	; 1
 3ca:	16 c0       	rjmp	.+44     	; 0x3f8 <vfprintf+0xb0>
 3cc:	83 2d       	mov	r24, r3
 3ce:	82 60       	ori	r24, 0x02	; 2
 3d0:	38 2e       	mov	r3, r24
 3d2:	e3 2d       	mov	r30, r3
 3d4:	e4 60       	ori	r30, 0x04	; 4
 3d6:	3e 2e       	mov	r3, r30
 3d8:	2a c0       	rjmp	.+84     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 3da:	f3 2d       	mov	r31, r3
 3dc:	f8 60       	ori	r31, 0x08	; 8
 3de:	1d c0       	rjmp	.+58     	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
 3e0:	37 fc       	sbrc	r3, 7
 3e2:	2d c0       	rjmp	.+90     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
 3e4:	20 ed       	ldi	r18, 0xD0	; 208
 3e6:	28 0f       	add	r18, r24
 3e8:	2a 30       	cpi	r18, 0x0A	; 10
 3ea:	40 f0       	brcs	.+16     	; 0x3fc <vfprintf+0xb4>
 3ec:	8e 32       	cpi	r24, 0x2E	; 46
 3ee:	b9 f4       	brne	.+46     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 3f0:	36 fc       	sbrc	r3, 6
 3f2:	81 c1       	rjmp	.+770    	; 0x6f6 <__stack+0x1f7>
 3f4:	23 2d       	mov	r18, r3
 3f6:	20 64       	ori	r18, 0x40	; 64
 3f8:	32 2e       	mov	r3, r18
 3fa:	19 c0       	rjmp	.+50     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 3fc:	36 fe       	sbrs	r3, 6
 3fe:	06 c0       	rjmp	.+12     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
 400:	8a e0       	ldi	r24, 0x0A	; 10
 402:	98 9e       	mul	r9, r24
 404:	20 0d       	add	r18, r0
 406:	11 24       	eor	r1, r1
 408:	92 2e       	mov	r9, r18
 40a:	11 c0       	rjmp	.+34     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 40c:	ea e0       	ldi	r30, 0x0A	; 10
 40e:	2e 9e       	mul	r2, r30
 410:	20 0d       	add	r18, r0
 412:	11 24       	eor	r1, r1
 414:	22 2e       	mov	r2, r18
 416:	f3 2d       	mov	r31, r3
 418:	f0 62       	ori	r31, 0x20	; 32
 41a:	3f 2e       	mov	r3, r31
 41c:	08 c0       	rjmp	.+16     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 41e:	8c 36       	cpi	r24, 0x6C	; 108
 420:	21 f4       	brne	.+8      	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 422:	83 2d       	mov	r24, r3
 424:	80 68       	ori	r24, 0x80	; 128
 426:	38 2e       	mov	r3, r24
 428:	02 c0       	rjmp	.+4      	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 42a:	88 36       	cpi	r24, 0x68	; 104
 42c:	41 f4       	brne	.+16     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
 42e:	f7 01       	movw	r30, r14
 430:	93 fd       	sbrc	r25, 3
 432:	85 91       	lpm	r24, Z+
 434:	93 ff       	sbrs	r25, 3
 436:	81 91       	ld	r24, Z+
 438:	7f 01       	movw	r14, r30
 43a:	81 11       	cpse	r24, r1
 43c:	b3 cf       	rjmp	.-154    	; 0x3a4 <vfprintf+0x5c>
 43e:	98 2f       	mov	r25, r24
 440:	9f 7d       	andi	r25, 0xDF	; 223
 442:	95 54       	subi	r25, 0x45	; 69
 444:	93 30       	cpi	r25, 0x03	; 3
 446:	28 f4       	brcc	.+10     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 448:	0c 5f       	subi	r16, 0xFC	; 252
 44a:	1f 4f       	sbci	r17, 0xFF	; 255
 44c:	9f e3       	ldi	r25, 0x3F	; 63
 44e:	99 83       	std	Y+1, r25	; 0x01
 450:	0d c0       	rjmp	.+26     	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
 452:	83 36       	cpi	r24, 0x63	; 99
 454:	31 f0       	breq	.+12     	; 0x462 <__DATA_REGION_LENGTH__+0x62>
 456:	83 37       	cpi	r24, 0x73	; 115
 458:	71 f0       	breq	.+28     	; 0x476 <__DATA_REGION_LENGTH__+0x76>
 45a:	83 35       	cpi	r24, 0x53	; 83
 45c:	09 f0       	breq	.+2      	; 0x460 <__DATA_REGION_LENGTH__+0x60>
 45e:	59 c0       	rjmp	.+178    	; 0x512 <__stack+0x13>
 460:	21 c0       	rjmp	.+66     	; 0x4a4 <__DATA_REGION_LENGTH__+0xa4>
 462:	f8 01       	movw	r30, r16
 464:	80 81       	ld	r24, Z
 466:	89 83       	std	Y+1, r24	; 0x01
 468:	0e 5f       	subi	r16, 0xFE	; 254
 46a:	1f 4f       	sbci	r17, 0xFF	; 255
 46c:	88 24       	eor	r8, r8
 46e:	83 94       	inc	r8
 470:	91 2c       	mov	r9, r1
 472:	53 01       	movw	r10, r6
 474:	13 c0       	rjmp	.+38     	; 0x49c <__DATA_REGION_LENGTH__+0x9c>
 476:	28 01       	movw	r4, r16
 478:	f2 e0       	ldi	r31, 0x02	; 2
 47a:	4f 0e       	add	r4, r31
 47c:	51 1c       	adc	r5, r1
 47e:	f8 01       	movw	r30, r16
 480:	a0 80       	ld	r10, Z
 482:	b1 80       	ldd	r11, Z+1	; 0x01
 484:	36 fe       	sbrs	r3, 6
 486:	03 c0       	rjmp	.+6      	; 0x48e <__DATA_REGION_LENGTH__+0x8e>
 488:	69 2d       	mov	r22, r9
 48a:	70 e0       	ldi	r23, 0x00	; 0
 48c:	02 c0       	rjmp	.+4      	; 0x492 <__DATA_REGION_LENGTH__+0x92>
 48e:	6f ef       	ldi	r22, 0xFF	; 255
 490:	7f ef       	ldi	r23, 0xFF	; 255
 492:	c5 01       	movw	r24, r10
 494:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <strnlen>
 498:	4c 01       	movw	r8, r24
 49a:	82 01       	movw	r16, r4
 49c:	f3 2d       	mov	r31, r3
 49e:	ff 77       	andi	r31, 0x7F	; 127
 4a0:	3f 2e       	mov	r3, r31
 4a2:	16 c0       	rjmp	.+44     	; 0x4d0 <__DATA_REGION_LENGTH__+0xd0>
 4a4:	28 01       	movw	r4, r16
 4a6:	22 e0       	ldi	r18, 0x02	; 2
 4a8:	42 0e       	add	r4, r18
 4aa:	51 1c       	adc	r5, r1
 4ac:	f8 01       	movw	r30, r16
 4ae:	a0 80       	ld	r10, Z
 4b0:	b1 80       	ldd	r11, Z+1	; 0x01
 4b2:	36 fe       	sbrs	r3, 6
 4b4:	03 c0       	rjmp	.+6      	; 0x4bc <__DATA_REGION_LENGTH__+0xbc>
 4b6:	69 2d       	mov	r22, r9
 4b8:	70 e0       	ldi	r23, 0x00	; 0
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <__DATA_REGION_LENGTH__+0xc0>
 4bc:	6f ef       	ldi	r22, 0xFF	; 255
 4be:	7f ef       	ldi	r23, 0xFF	; 255
 4c0:	c5 01       	movw	r24, r10
 4c2:	0e 94 c2 04 	call	0x984	; 0x984 <strnlen_P>
 4c6:	4c 01       	movw	r8, r24
 4c8:	f3 2d       	mov	r31, r3
 4ca:	f0 68       	ori	r31, 0x80	; 128
 4cc:	3f 2e       	mov	r3, r31
 4ce:	82 01       	movw	r16, r4
 4d0:	33 fc       	sbrc	r3, 3
 4d2:	1b c0       	rjmp	.+54     	; 0x50a <__stack+0xb>
 4d4:	82 2d       	mov	r24, r2
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	88 16       	cp	r8, r24
 4da:	99 06       	cpc	r9, r25
 4dc:	b0 f4       	brcc	.+44     	; 0x50a <__stack+0xb>
 4de:	b6 01       	movw	r22, r12
 4e0:	80 e2       	ldi	r24, 0x20	; 32
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 4e8:	2a 94       	dec	r2
 4ea:	f4 cf       	rjmp	.-24     	; 0x4d4 <__DATA_REGION_LENGTH__+0xd4>
 4ec:	f5 01       	movw	r30, r10
 4ee:	37 fc       	sbrc	r3, 7
 4f0:	85 91       	lpm	r24, Z+
 4f2:	37 fe       	sbrs	r3, 7
 4f4:	81 91       	ld	r24, Z+
 4f6:	5f 01       	movw	r10, r30
 4f8:	b6 01       	movw	r22, r12
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 500:	21 10       	cpse	r2, r1
 502:	2a 94       	dec	r2
 504:	21 e0       	ldi	r18, 0x01	; 1
 506:	82 1a       	sub	r8, r18
 508:	91 08       	sbc	r9, r1
 50a:	81 14       	cp	r8, r1
 50c:	91 04       	cpc	r9, r1
 50e:	71 f7       	brne	.-36     	; 0x4ec <__DATA_REGION_LENGTH__+0xec>
 510:	e8 c0       	rjmp	.+464    	; 0x6e2 <__stack+0x1e3>
 512:	84 36       	cpi	r24, 0x64	; 100
 514:	11 f0       	breq	.+4      	; 0x51a <__stack+0x1b>
 516:	89 36       	cpi	r24, 0x69	; 105
 518:	41 f5       	brne	.+80     	; 0x56a <__stack+0x6b>
 51a:	f8 01       	movw	r30, r16
 51c:	37 fe       	sbrs	r3, 7
 51e:	07 c0       	rjmp	.+14     	; 0x52e <__stack+0x2f>
 520:	60 81       	ld	r22, Z
 522:	71 81       	ldd	r23, Z+1	; 0x01
 524:	82 81       	ldd	r24, Z+2	; 0x02
 526:	93 81       	ldd	r25, Z+3	; 0x03
 528:	0c 5f       	subi	r16, 0xFC	; 252
 52a:	1f 4f       	sbci	r17, 0xFF	; 255
 52c:	08 c0       	rjmp	.+16     	; 0x53e <__stack+0x3f>
 52e:	60 81       	ld	r22, Z
 530:	71 81       	ldd	r23, Z+1	; 0x01
 532:	07 2e       	mov	r0, r23
 534:	00 0c       	add	r0, r0
 536:	88 0b       	sbc	r24, r24
 538:	99 0b       	sbc	r25, r25
 53a:	0e 5f       	subi	r16, 0xFE	; 254
 53c:	1f 4f       	sbci	r17, 0xFF	; 255
 53e:	f3 2d       	mov	r31, r3
 540:	ff 76       	andi	r31, 0x6F	; 111
 542:	3f 2e       	mov	r3, r31
 544:	97 ff       	sbrs	r25, 7
 546:	09 c0       	rjmp	.+18     	; 0x55a <__stack+0x5b>
 548:	90 95       	com	r25
 54a:	80 95       	com	r24
 54c:	70 95       	com	r23
 54e:	61 95       	neg	r22
 550:	7f 4f       	sbci	r23, 0xFF	; 255
 552:	8f 4f       	sbci	r24, 0xFF	; 255
 554:	9f 4f       	sbci	r25, 0xFF	; 255
 556:	f0 68       	ori	r31, 0x80	; 128
 558:	3f 2e       	mov	r3, r31
 55a:	2a e0       	ldi	r18, 0x0A	; 10
 55c:	30 e0       	ldi	r19, 0x00	; 0
 55e:	a3 01       	movw	r20, r6
 560:	0e 94 1b 05 	call	0xa36	; 0xa36 <__ultoa_invert>
 564:	88 2e       	mov	r8, r24
 566:	86 18       	sub	r8, r6
 568:	45 c0       	rjmp	.+138    	; 0x5f4 <__stack+0xf5>
 56a:	85 37       	cpi	r24, 0x75	; 117
 56c:	31 f4       	brne	.+12     	; 0x57a <__stack+0x7b>
 56e:	23 2d       	mov	r18, r3
 570:	2f 7e       	andi	r18, 0xEF	; 239
 572:	b2 2e       	mov	r11, r18
 574:	2a e0       	ldi	r18, 0x0A	; 10
 576:	30 e0       	ldi	r19, 0x00	; 0
 578:	25 c0       	rjmp	.+74     	; 0x5c4 <__stack+0xc5>
 57a:	93 2d       	mov	r25, r3
 57c:	99 7f       	andi	r25, 0xF9	; 249
 57e:	b9 2e       	mov	r11, r25
 580:	8f 36       	cpi	r24, 0x6F	; 111
 582:	c1 f0       	breq	.+48     	; 0x5b4 <__stack+0xb5>
 584:	18 f4       	brcc	.+6      	; 0x58c <__stack+0x8d>
 586:	88 35       	cpi	r24, 0x58	; 88
 588:	79 f0       	breq	.+30     	; 0x5a8 <__stack+0xa9>
 58a:	b5 c0       	rjmp	.+362    	; 0x6f6 <__stack+0x1f7>
 58c:	80 37       	cpi	r24, 0x70	; 112
 58e:	19 f0       	breq	.+6      	; 0x596 <__stack+0x97>
 590:	88 37       	cpi	r24, 0x78	; 120
 592:	21 f0       	breq	.+8      	; 0x59c <__stack+0x9d>
 594:	b0 c0       	rjmp	.+352    	; 0x6f6 <__stack+0x1f7>
 596:	e9 2f       	mov	r30, r25
 598:	e0 61       	ori	r30, 0x10	; 16
 59a:	be 2e       	mov	r11, r30
 59c:	b4 fe       	sbrs	r11, 4
 59e:	0d c0       	rjmp	.+26     	; 0x5ba <__stack+0xbb>
 5a0:	fb 2d       	mov	r31, r11
 5a2:	f4 60       	ori	r31, 0x04	; 4
 5a4:	bf 2e       	mov	r11, r31
 5a6:	09 c0       	rjmp	.+18     	; 0x5ba <__stack+0xbb>
 5a8:	34 fe       	sbrs	r3, 4
 5aa:	0a c0       	rjmp	.+20     	; 0x5c0 <__stack+0xc1>
 5ac:	29 2f       	mov	r18, r25
 5ae:	26 60       	ori	r18, 0x06	; 6
 5b0:	b2 2e       	mov	r11, r18
 5b2:	06 c0       	rjmp	.+12     	; 0x5c0 <__stack+0xc1>
 5b4:	28 e0       	ldi	r18, 0x08	; 8
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <__stack+0xc5>
 5ba:	20 e1       	ldi	r18, 0x10	; 16
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <__stack+0xc5>
 5c0:	20 e1       	ldi	r18, 0x10	; 16
 5c2:	32 e0       	ldi	r19, 0x02	; 2
 5c4:	f8 01       	movw	r30, r16
 5c6:	b7 fe       	sbrs	r11, 7
 5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <__stack+0xd9>
 5ca:	60 81       	ld	r22, Z
 5cc:	71 81       	ldd	r23, Z+1	; 0x01
 5ce:	82 81       	ldd	r24, Z+2	; 0x02
 5d0:	93 81       	ldd	r25, Z+3	; 0x03
 5d2:	0c 5f       	subi	r16, 0xFC	; 252
 5d4:	1f 4f       	sbci	r17, 0xFF	; 255
 5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <__stack+0xe5>
 5d8:	60 81       	ld	r22, Z
 5da:	71 81       	ldd	r23, Z+1	; 0x01
 5dc:	80 e0       	ldi	r24, 0x00	; 0
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 5f       	subi	r16, 0xFE	; 254
 5e2:	1f 4f       	sbci	r17, 0xFF	; 255
 5e4:	a3 01       	movw	r20, r6
 5e6:	0e 94 1b 05 	call	0xa36	; 0xa36 <__ultoa_invert>
 5ea:	88 2e       	mov	r8, r24
 5ec:	86 18       	sub	r8, r6
 5ee:	fb 2d       	mov	r31, r11
 5f0:	ff 77       	andi	r31, 0x7F	; 127
 5f2:	3f 2e       	mov	r3, r31
 5f4:	36 fe       	sbrs	r3, 6
 5f6:	0d c0       	rjmp	.+26     	; 0x612 <__stack+0x113>
 5f8:	23 2d       	mov	r18, r3
 5fa:	2e 7f       	andi	r18, 0xFE	; 254
 5fc:	a2 2e       	mov	r10, r18
 5fe:	89 14       	cp	r8, r9
 600:	58 f4       	brcc	.+22     	; 0x618 <__stack+0x119>
 602:	34 fe       	sbrs	r3, 4
 604:	0b c0       	rjmp	.+22     	; 0x61c <__stack+0x11d>
 606:	32 fc       	sbrc	r3, 2
 608:	09 c0       	rjmp	.+18     	; 0x61c <__stack+0x11d>
 60a:	83 2d       	mov	r24, r3
 60c:	8e 7e       	andi	r24, 0xEE	; 238
 60e:	a8 2e       	mov	r10, r24
 610:	05 c0       	rjmp	.+10     	; 0x61c <__stack+0x11d>
 612:	b8 2c       	mov	r11, r8
 614:	a3 2c       	mov	r10, r3
 616:	03 c0       	rjmp	.+6      	; 0x61e <__stack+0x11f>
 618:	b8 2c       	mov	r11, r8
 61a:	01 c0       	rjmp	.+2      	; 0x61e <__stack+0x11f>
 61c:	b9 2c       	mov	r11, r9
 61e:	a4 fe       	sbrs	r10, 4
 620:	0f c0       	rjmp	.+30     	; 0x640 <__stack+0x141>
 622:	fe 01       	movw	r30, r28
 624:	e8 0d       	add	r30, r8
 626:	f1 1d       	adc	r31, r1
 628:	80 81       	ld	r24, Z
 62a:	80 33       	cpi	r24, 0x30	; 48
 62c:	21 f4       	brne	.+8      	; 0x636 <__stack+0x137>
 62e:	9a 2d       	mov	r25, r10
 630:	99 7e       	andi	r25, 0xE9	; 233
 632:	a9 2e       	mov	r10, r25
 634:	09 c0       	rjmp	.+18     	; 0x648 <__stack+0x149>
 636:	a2 fe       	sbrs	r10, 2
 638:	06 c0       	rjmp	.+12     	; 0x646 <__stack+0x147>
 63a:	b3 94       	inc	r11
 63c:	b3 94       	inc	r11
 63e:	04 c0       	rjmp	.+8      	; 0x648 <__stack+0x149>
 640:	8a 2d       	mov	r24, r10
 642:	86 78       	andi	r24, 0x86	; 134
 644:	09 f0       	breq	.+2      	; 0x648 <__stack+0x149>
 646:	b3 94       	inc	r11
 648:	a3 fc       	sbrc	r10, 3
 64a:	11 c0       	rjmp	.+34     	; 0x66e <__stack+0x16f>
 64c:	a0 fe       	sbrs	r10, 0
 64e:	06 c0       	rjmp	.+12     	; 0x65c <__stack+0x15d>
 650:	b2 14       	cp	r11, r2
 652:	88 f4       	brcc	.+34     	; 0x676 <__stack+0x177>
 654:	28 0c       	add	r2, r8
 656:	92 2c       	mov	r9, r2
 658:	9b 18       	sub	r9, r11
 65a:	0e c0       	rjmp	.+28     	; 0x678 <__stack+0x179>
 65c:	b2 14       	cp	r11, r2
 65e:	60 f4       	brcc	.+24     	; 0x678 <__stack+0x179>
 660:	b6 01       	movw	r22, r12
 662:	80 e2       	ldi	r24, 0x20	; 32
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 66a:	b3 94       	inc	r11
 66c:	f7 cf       	rjmp	.-18     	; 0x65c <__stack+0x15d>
 66e:	b2 14       	cp	r11, r2
 670:	18 f4       	brcc	.+6      	; 0x678 <__stack+0x179>
 672:	2b 18       	sub	r2, r11
 674:	02 c0       	rjmp	.+4      	; 0x67a <__stack+0x17b>
 676:	98 2c       	mov	r9, r8
 678:	21 2c       	mov	r2, r1
 67a:	a4 fe       	sbrs	r10, 4
 67c:	10 c0       	rjmp	.+32     	; 0x69e <__stack+0x19f>
 67e:	b6 01       	movw	r22, r12
 680:	80 e3       	ldi	r24, 0x30	; 48
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 688:	a2 fe       	sbrs	r10, 2
 68a:	17 c0       	rjmp	.+46     	; 0x6ba <__stack+0x1bb>
 68c:	a1 fc       	sbrc	r10, 1
 68e:	03 c0       	rjmp	.+6      	; 0x696 <__stack+0x197>
 690:	88 e7       	ldi	r24, 0x78	; 120
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	02 c0       	rjmp	.+4      	; 0x69a <__stack+0x19b>
 696:	88 e5       	ldi	r24, 0x58	; 88
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	b6 01       	movw	r22, r12
 69c:	0c c0       	rjmp	.+24     	; 0x6b6 <__stack+0x1b7>
 69e:	8a 2d       	mov	r24, r10
 6a0:	86 78       	andi	r24, 0x86	; 134
 6a2:	59 f0       	breq	.+22     	; 0x6ba <__stack+0x1bb>
 6a4:	a1 fe       	sbrs	r10, 1
 6a6:	02 c0       	rjmp	.+4      	; 0x6ac <__stack+0x1ad>
 6a8:	8b e2       	ldi	r24, 0x2B	; 43
 6aa:	01 c0       	rjmp	.+2      	; 0x6ae <__stack+0x1af>
 6ac:	80 e2       	ldi	r24, 0x20	; 32
 6ae:	a7 fc       	sbrc	r10, 7
 6b0:	8d e2       	ldi	r24, 0x2D	; 45
 6b2:	b6 01       	movw	r22, r12
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 6ba:	89 14       	cp	r8, r9
 6bc:	38 f4       	brcc	.+14     	; 0x6cc <__stack+0x1cd>
 6be:	b6 01       	movw	r22, r12
 6c0:	80 e3       	ldi	r24, 0x30	; 48
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 6c8:	9a 94       	dec	r9
 6ca:	f7 cf       	rjmp	.-18     	; 0x6ba <__stack+0x1bb>
 6cc:	8a 94       	dec	r8
 6ce:	f3 01       	movw	r30, r6
 6d0:	e8 0d       	add	r30, r8
 6d2:	f1 1d       	adc	r31, r1
 6d4:	80 81       	ld	r24, Z
 6d6:	b6 01       	movw	r22, r12
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 6de:	81 10       	cpse	r8, r1
 6e0:	f5 cf       	rjmp	.-22     	; 0x6cc <__stack+0x1cd>
 6e2:	22 20       	and	r2, r2
 6e4:	09 f4       	brne	.+2      	; 0x6e8 <__stack+0x1e9>
 6e6:	42 ce       	rjmp	.-892    	; 0x36c <vfprintf+0x24>
 6e8:	b6 01       	movw	r22, r12
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 6f2:	2a 94       	dec	r2
 6f4:	f6 cf       	rjmp	.-20     	; 0x6e2 <__stack+0x1e3>
 6f6:	f6 01       	movw	r30, r12
 6f8:	86 81       	ldd	r24, Z+6	; 0x06
 6fa:	97 81       	ldd	r25, Z+7	; 0x07
 6fc:	02 c0       	rjmp	.+4      	; 0x702 <__stack+0x203>
 6fe:	8f ef       	ldi	r24, 0xFF	; 255
 700:	9f ef       	ldi	r25, 0xFF	; 255
 702:	2b 96       	adiw	r28, 0x0b	; 11
 704:	e2 e1       	ldi	r30, 0x12	; 18
 706:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__epilogue_restores__>

0000070a <calloc>:
 70a:	0f 93       	push	r16
 70c:	1f 93       	push	r17
 70e:	cf 93       	push	r28
 710:	df 93       	push	r29
 712:	86 9f       	mul	r24, r22
 714:	80 01       	movw	r16, r0
 716:	87 9f       	mul	r24, r23
 718:	10 0d       	add	r17, r0
 71a:	96 9f       	mul	r25, r22
 71c:	10 0d       	add	r17, r0
 71e:	11 24       	eor	r1, r1
 720:	c8 01       	movw	r24, r16
 722:	0e 94 a1 03 	call	0x742	; 0x742 <malloc>
 726:	ec 01       	movw	r28, r24
 728:	00 97       	sbiw	r24, 0x00	; 0
 72a:	29 f0       	breq	.+10     	; 0x736 <calloc+0x2c>
 72c:	a8 01       	movw	r20, r16
 72e:	60 e0       	ldi	r22, 0x00	; 0
 730:	70 e0       	ldi	r23, 0x00	; 0
 732:	0e 94 cd 04 	call	0x99a	; 0x99a <memset>
 736:	ce 01       	movw	r24, r28
 738:	df 91       	pop	r29
 73a:	cf 91       	pop	r28
 73c:	1f 91       	pop	r17
 73e:	0f 91       	pop	r16
 740:	08 95       	ret

00000742 <malloc>:
 742:	0f 93       	push	r16
 744:	1f 93       	push	r17
 746:	cf 93       	push	r28
 748:	df 93       	push	r29
 74a:	82 30       	cpi	r24, 0x02	; 2
 74c:	91 05       	cpc	r25, r1
 74e:	10 f4       	brcc	.+4      	; 0x754 <malloc+0x12>
 750:	82 e0       	ldi	r24, 0x02	; 2
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <__flp>
 758:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <__flp+0x1>
 75c:	20 e0       	ldi	r18, 0x00	; 0
 75e:	30 e0       	ldi	r19, 0x00	; 0
 760:	a0 e0       	ldi	r26, 0x00	; 0
 762:	b0 e0       	ldi	r27, 0x00	; 0
 764:	30 97       	sbiw	r30, 0x00	; 0
 766:	19 f1       	breq	.+70     	; 0x7ae <malloc+0x6c>
 768:	40 81       	ld	r20, Z
 76a:	51 81       	ldd	r21, Z+1	; 0x01
 76c:	02 81       	ldd	r16, Z+2	; 0x02
 76e:	13 81       	ldd	r17, Z+3	; 0x03
 770:	48 17       	cp	r20, r24
 772:	59 07       	cpc	r21, r25
 774:	c8 f0       	brcs	.+50     	; 0x7a8 <malloc+0x66>
 776:	84 17       	cp	r24, r20
 778:	95 07       	cpc	r25, r21
 77a:	69 f4       	brne	.+26     	; 0x796 <malloc+0x54>
 77c:	10 97       	sbiw	r26, 0x00	; 0
 77e:	31 f0       	breq	.+12     	; 0x78c <malloc+0x4a>
 780:	12 96       	adiw	r26, 0x02	; 2
 782:	0c 93       	st	X, r16
 784:	12 97       	sbiw	r26, 0x02	; 2
 786:	13 96       	adiw	r26, 0x03	; 3
 788:	1c 93       	st	X, r17
 78a:	27 c0       	rjmp	.+78     	; 0x7da <malloc+0x98>
 78c:	00 93 26 01 	sts	0x0126, r16	; 0x800126 <__flp>
 790:	10 93 27 01 	sts	0x0127, r17	; 0x800127 <__flp+0x1>
 794:	22 c0       	rjmp	.+68     	; 0x7da <malloc+0x98>
 796:	21 15       	cp	r18, r1
 798:	31 05       	cpc	r19, r1
 79a:	19 f0       	breq	.+6      	; 0x7a2 <malloc+0x60>
 79c:	42 17       	cp	r20, r18
 79e:	53 07       	cpc	r21, r19
 7a0:	18 f4       	brcc	.+6      	; 0x7a8 <malloc+0x66>
 7a2:	9a 01       	movw	r18, r20
 7a4:	bd 01       	movw	r22, r26
 7a6:	ef 01       	movw	r28, r30
 7a8:	df 01       	movw	r26, r30
 7aa:	f8 01       	movw	r30, r16
 7ac:	db cf       	rjmp	.-74     	; 0x764 <malloc+0x22>
 7ae:	21 15       	cp	r18, r1
 7b0:	31 05       	cpc	r19, r1
 7b2:	f9 f0       	breq	.+62     	; 0x7f2 <malloc+0xb0>
 7b4:	28 1b       	sub	r18, r24
 7b6:	39 0b       	sbc	r19, r25
 7b8:	24 30       	cpi	r18, 0x04	; 4
 7ba:	31 05       	cpc	r19, r1
 7bc:	80 f4       	brcc	.+32     	; 0x7de <malloc+0x9c>
 7be:	8a 81       	ldd	r24, Y+2	; 0x02
 7c0:	9b 81       	ldd	r25, Y+3	; 0x03
 7c2:	61 15       	cp	r22, r1
 7c4:	71 05       	cpc	r23, r1
 7c6:	21 f0       	breq	.+8      	; 0x7d0 <malloc+0x8e>
 7c8:	fb 01       	movw	r30, r22
 7ca:	93 83       	std	Z+3, r25	; 0x03
 7cc:	82 83       	std	Z+2, r24	; 0x02
 7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <malloc+0x96>
 7d0:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__flp+0x1>
 7d4:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__flp>
 7d8:	fe 01       	movw	r30, r28
 7da:	32 96       	adiw	r30, 0x02	; 2
 7dc:	44 c0       	rjmp	.+136    	; 0x866 <malloc+0x124>
 7de:	fe 01       	movw	r30, r28
 7e0:	e2 0f       	add	r30, r18
 7e2:	f3 1f       	adc	r31, r19
 7e4:	81 93       	st	Z+, r24
 7e6:	91 93       	st	Z+, r25
 7e8:	22 50       	subi	r18, 0x02	; 2
 7ea:	31 09       	sbc	r19, r1
 7ec:	39 83       	std	Y+1, r19	; 0x01
 7ee:	28 83       	st	Y, r18
 7f0:	3a c0       	rjmp	.+116    	; 0x866 <malloc+0x124>
 7f2:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__brkval>
 7f6:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__brkval+0x1>
 7fa:	23 2b       	or	r18, r19
 7fc:	41 f4       	brne	.+16     	; 0x80e <malloc+0xcc>
 7fe:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 802:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 806:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <__brkval+0x1>
 80a:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <__brkval>
 80e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 812:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 816:	21 15       	cp	r18, r1
 818:	31 05       	cpc	r19, r1
 81a:	41 f4       	brne	.+16     	; 0x82c <malloc+0xea>
 81c:	2d b7       	in	r18, 0x3d	; 61
 81e:	3e b7       	in	r19, 0x3e	; 62
 820:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 824:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 828:	24 1b       	sub	r18, r20
 82a:	35 0b       	sbc	r19, r21
 82c:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <__brkval>
 830:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <__brkval+0x1>
 834:	e2 17       	cp	r30, r18
 836:	f3 07       	cpc	r31, r19
 838:	a0 f4       	brcc	.+40     	; 0x862 <malloc+0x120>
 83a:	2e 1b       	sub	r18, r30
 83c:	3f 0b       	sbc	r19, r31
 83e:	28 17       	cp	r18, r24
 840:	39 07       	cpc	r19, r25
 842:	78 f0       	brcs	.+30     	; 0x862 <malloc+0x120>
 844:	ac 01       	movw	r20, r24
 846:	4e 5f       	subi	r20, 0xFE	; 254
 848:	5f 4f       	sbci	r21, 0xFF	; 255
 84a:	24 17       	cp	r18, r20
 84c:	35 07       	cpc	r19, r21
 84e:	48 f0       	brcs	.+18     	; 0x862 <malloc+0x120>
 850:	4e 0f       	add	r20, r30
 852:	5f 1f       	adc	r21, r31
 854:	50 93 25 01 	sts	0x0125, r21	; 0x800125 <__brkval+0x1>
 858:	40 93 24 01 	sts	0x0124, r20	; 0x800124 <__brkval>
 85c:	81 93       	st	Z+, r24
 85e:	91 93       	st	Z+, r25
 860:	02 c0       	rjmp	.+4      	; 0x866 <malloc+0x124>
 862:	e0 e0       	ldi	r30, 0x00	; 0
 864:	f0 e0       	ldi	r31, 0x00	; 0
 866:	cf 01       	movw	r24, r30
 868:	df 91       	pop	r29
 86a:	cf 91       	pop	r28
 86c:	1f 91       	pop	r17
 86e:	0f 91       	pop	r16
 870:	08 95       	ret

00000872 <free>:
 872:	cf 93       	push	r28
 874:	df 93       	push	r29
 876:	00 97       	sbiw	r24, 0x00	; 0
 878:	09 f4       	brne	.+2      	; 0x87c <free+0xa>
 87a:	81 c0       	rjmp	.+258    	; 0x97e <free+0x10c>
 87c:	fc 01       	movw	r30, r24
 87e:	32 97       	sbiw	r30, 0x02	; 2
 880:	13 82       	std	Z+3, r1	; 0x03
 882:	12 82       	std	Z+2, r1	; 0x02
 884:	a0 91 26 01 	lds	r26, 0x0126	; 0x800126 <__flp>
 888:	b0 91 27 01 	lds	r27, 0x0127	; 0x800127 <__flp+0x1>
 88c:	10 97       	sbiw	r26, 0x00	; 0
 88e:	81 f4       	brne	.+32     	; 0x8b0 <free+0x3e>
 890:	20 81       	ld	r18, Z
 892:	31 81       	ldd	r19, Z+1	; 0x01
 894:	82 0f       	add	r24, r18
 896:	93 1f       	adc	r25, r19
 898:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__brkval>
 89c:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__brkval+0x1>
 8a0:	28 17       	cp	r18, r24
 8a2:	39 07       	cpc	r19, r25
 8a4:	51 f5       	brne	.+84     	; 0x8fa <free+0x88>
 8a6:	f0 93 25 01 	sts	0x0125, r31	; 0x800125 <__brkval+0x1>
 8aa:	e0 93 24 01 	sts	0x0124, r30	; 0x800124 <__brkval>
 8ae:	67 c0       	rjmp	.+206    	; 0x97e <free+0x10c>
 8b0:	ed 01       	movw	r28, r26
 8b2:	20 e0       	ldi	r18, 0x00	; 0
 8b4:	30 e0       	ldi	r19, 0x00	; 0
 8b6:	ce 17       	cp	r28, r30
 8b8:	df 07       	cpc	r29, r31
 8ba:	40 f4       	brcc	.+16     	; 0x8cc <free+0x5a>
 8bc:	4a 81       	ldd	r20, Y+2	; 0x02
 8be:	5b 81       	ldd	r21, Y+3	; 0x03
 8c0:	9e 01       	movw	r18, r28
 8c2:	41 15       	cp	r20, r1
 8c4:	51 05       	cpc	r21, r1
 8c6:	f1 f0       	breq	.+60     	; 0x904 <free+0x92>
 8c8:	ea 01       	movw	r28, r20
 8ca:	f5 cf       	rjmp	.-22     	; 0x8b6 <free+0x44>
 8cc:	d3 83       	std	Z+3, r29	; 0x03
 8ce:	c2 83       	std	Z+2, r28	; 0x02
 8d0:	40 81       	ld	r20, Z
 8d2:	51 81       	ldd	r21, Z+1	; 0x01
 8d4:	84 0f       	add	r24, r20
 8d6:	95 1f       	adc	r25, r21
 8d8:	c8 17       	cp	r28, r24
 8da:	d9 07       	cpc	r29, r25
 8dc:	59 f4       	brne	.+22     	; 0x8f4 <free+0x82>
 8de:	88 81       	ld	r24, Y
 8e0:	99 81       	ldd	r25, Y+1	; 0x01
 8e2:	84 0f       	add	r24, r20
 8e4:	95 1f       	adc	r25, r21
 8e6:	02 96       	adiw	r24, 0x02	; 2
 8e8:	91 83       	std	Z+1, r25	; 0x01
 8ea:	80 83       	st	Z, r24
 8ec:	8a 81       	ldd	r24, Y+2	; 0x02
 8ee:	9b 81       	ldd	r25, Y+3	; 0x03
 8f0:	93 83       	std	Z+3, r25	; 0x03
 8f2:	82 83       	std	Z+2, r24	; 0x02
 8f4:	21 15       	cp	r18, r1
 8f6:	31 05       	cpc	r19, r1
 8f8:	29 f4       	brne	.+10     	; 0x904 <free+0x92>
 8fa:	f0 93 27 01 	sts	0x0127, r31	; 0x800127 <__flp+0x1>
 8fe:	e0 93 26 01 	sts	0x0126, r30	; 0x800126 <__flp>
 902:	3d c0       	rjmp	.+122    	; 0x97e <free+0x10c>
 904:	e9 01       	movw	r28, r18
 906:	fb 83       	std	Y+3, r31	; 0x03
 908:	ea 83       	std	Y+2, r30	; 0x02
 90a:	49 91       	ld	r20, Y+
 90c:	59 91       	ld	r21, Y+
 90e:	c4 0f       	add	r28, r20
 910:	d5 1f       	adc	r29, r21
 912:	ec 17       	cp	r30, r28
 914:	fd 07       	cpc	r31, r29
 916:	61 f4       	brne	.+24     	; 0x930 <free+0xbe>
 918:	80 81       	ld	r24, Z
 91a:	91 81       	ldd	r25, Z+1	; 0x01
 91c:	84 0f       	add	r24, r20
 91e:	95 1f       	adc	r25, r21
 920:	02 96       	adiw	r24, 0x02	; 2
 922:	e9 01       	movw	r28, r18
 924:	99 83       	std	Y+1, r25	; 0x01
 926:	88 83       	st	Y, r24
 928:	82 81       	ldd	r24, Z+2	; 0x02
 92a:	93 81       	ldd	r25, Z+3	; 0x03
 92c:	9b 83       	std	Y+3, r25	; 0x03
 92e:	8a 83       	std	Y+2, r24	; 0x02
 930:	e0 e0       	ldi	r30, 0x00	; 0
 932:	f0 e0       	ldi	r31, 0x00	; 0
 934:	12 96       	adiw	r26, 0x02	; 2
 936:	8d 91       	ld	r24, X+
 938:	9c 91       	ld	r25, X
 93a:	13 97       	sbiw	r26, 0x03	; 3
 93c:	00 97       	sbiw	r24, 0x00	; 0
 93e:	19 f0       	breq	.+6      	; 0x946 <free+0xd4>
 940:	fd 01       	movw	r30, r26
 942:	dc 01       	movw	r26, r24
 944:	f7 cf       	rjmp	.-18     	; 0x934 <free+0xc2>
 946:	8d 91       	ld	r24, X+
 948:	9c 91       	ld	r25, X
 94a:	11 97       	sbiw	r26, 0x01	; 1
 94c:	9d 01       	movw	r18, r26
 94e:	2e 5f       	subi	r18, 0xFE	; 254
 950:	3f 4f       	sbci	r19, 0xFF	; 255
 952:	82 0f       	add	r24, r18
 954:	93 1f       	adc	r25, r19
 956:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__brkval>
 95a:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__brkval+0x1>
 95e:	28 17       	cp	r18, r24
 960:	39 07       	cpc	r19, r25
 962:	69 f4       	brne	.+26     	; 0x97e <free+0x10c>
 964:	30 97       	sbiw	r30, 0x00	; 0
 966:	29 f4       	brne	.+10     	; 0x972 <free+0x100>
 968:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <__flp+0x1>
 96c:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__flp>
 970:	02 c0       	rjmp	.+4      	; 0x976 <free+0x104>
 972:	13 82       	std	Z+3, r1	; 0x03
 974:	12 82       	std	Z+2, r1	; 0x02
 976:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <__brkval+0x1>
 97a:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <__brkval>
 97e:	df 91       	pop	r29
 980:	cf 91       	pop	r28
 982:	08 95       	ret

00000984 <strnlen_P>:
 984:	fc 01       	movw	r30, r24
 986:	05 90       	lpm	r0, Z+
 988:	61 50       	subi	r22, 0x01	; 1
 98a:	70 40       	sbci	r23, 0x00	; 0
 98c:	01 10       	cpse	r0, r1
 98e:	d8 f7       	brcc	.-10     	; 0x986 <strnlen_P+0x2>
 990:	80 95       	com	r24
 992:	90 95       	com	r25
 994:	8e 0f       	add	r24, r30
 996:	9f 1f       	adc	r25, r31
 998:	08 95       	ret

0000099a <memset>:
 99a:	dc 01       	movw	r26, r24
 99c:	01 c0       	rjmp	.+2      	; 0x9a0 <memset+0x6>
 99e:	6d 93       	st	X+, r22
 9a0:	41 50       	subi	r20, 0x01	; 1
 9a2:	50 40       	sbci	r21, 0x00	; 0
 9a4:	e0 f7       	brcc	.-8      	; 0x99e <memset+0x4>
 9a6:	08 95       	ret

000009a8 <strnlen>:
 9a8:	fc 01       	movw	r30, r24
 9aa:	61 50       	subi	r22, 0x01	; 1
 9ac:	70 40       	sbci	r23, 0x00	; 0
 9ae:	01 90       	ld	r0, Z+
 9b0:	01 10       	cpse	r0, r1
 9b2:	d8 f7       	brcc	.-10     	; 0x9aa <strnlen+0x2>
 9b4:	80 95       	com	r24
 9b6:	90 95       	com	r25
 9b8:	8e 0f       	add	r24, r30
 9ba:	9f 1f       	adc	r25, r31
 9bc:	08 95       	ret

000009be <fputc>:
 9be:	0f 93       	push	r16
 9c0:	1f 93       	push	r17
 9c2:	cf 93       	push	r28
 9c4:	df 93       	push	r29
 9c6:	fb 01       	movw	r30, r22
 9c8:	23 81       	ldd	r18, Z+3	; 0x03
 9ca:	21 fd       	sbrc	r18, 1
 9cc:	03 c0       	rjmp	.+6      	; 0x9d4 <fputc+0x16>
 9ce:	8f ef       	ldi	r24, 0xFF	; 255
 9d0:	9f ef       	ldi	r25, 0xFF	; 255
 9d2:	2c c0       	rjmp	.+88     	; 0xa2c <fputc+0x6e>
 9d4:	22 ff       	sbrs	r18, 2
 9d6:	16 c0       	rjmp	.+44     	; 0xa04 <fputc+0x46>
 9d8:	46 81       	ldd	r20, Z+6	; 0x06
 9da:	57 81       	ldd	r21, Z+7	; 0x07
 9dc:	24 81       	ldd	r18, Z+4	; 0x04
 9de:	35 81       	ldd	r19, Z+5	; 0x05
 9e0:	42 17       	cp	r20, r18
 9e2:	53 07       	cpc	r21, r19
 9e4:	44 f4       	brge	.+16     	; 0x9f6 <fputc+0x38>
 9e6:	a0 81       	ld	r26, Z
 9e8:	b1 81       	ldd	r27, Z+1	; 0x01
 9ea:	9d 01       	movw	r18, r26
 9ec:	2f 5f       	subi	r18, 0xFF	; 255
 9ee:	3f 4f       	sbci	r19, 0xFF	; 255
 9f0:	31 83       	std	Z+1, r19	; 0x01
 9f2:	20 83       	st	Z, r18
 9f4:	8c 93       	st	X, r24
 9f6:	26 81       	ldd	r18, Z+6	; 0x06
 9f8:	37 81       	ldd	r19, Z+7	; 0x07
 9fa:	2f 5f       	subi	r18, 0xFF	; 255
 9fc:	3f 4f       	sbci	r19, 0xFF	; 255
 9fe:	37 83       	std	Z+7, r19	; 0x07
 a00:	26 83       	std	Z+6, r18	; 0x06
 a02:	14 c0       	rjmp	.+40     	; 0xa2c <fputc+0x6e>
 a04:	8b 01       	movw	r16, r22
 a06:	ec 01       	movw	r28, r24
 a08:	fb 01       	movw	r30, r22
 a0a:	00 84       	ldd	r0, Z+8	; 0x08
 a0c:	f1 85       	ldd	r31, Z+9	; 0x09
 a0e:	e0 2d       	mov	r30, r0
 a10:	09 95       	icall
 a12:	89 2b       	or	r24, r25
 a14:	e1 f6       	brne	.-72     	; 0x9ce <fputc+0x10>
 a16:	d8 01       	movw	r26, r16
 a18:	16 96       	adiw	r26, 0x06	; 6
 a1a:	8d 91       	ld	r24, X+
 a1c:	9c 91       	ld	r25, X
 a1e:	17 97       	sbiw	r26, 0x07	; 7
 a20:	01 96       	adiw	r24, 0x01	; 1
 a22:	17 96       	adiw	r26, 0x07	; 7
 a24:	9c 93       	st	X, r25
 a26:	8e 93       	st	-X, r24
 a28:	16 97       	sbiw	r26, 0x06	; 6
 a2a:	ce 01       	movw	r24, r28
 a2c:	df 91       	pop	r29
 a2e:	cf 91       	pop	r28
 a30:	1f 91       	pop	r17
 a32:	0f 91       	pop	r16
 a34:	08 95       	ret

00000a36 <__ultoa_invert>:
 a36:	fa 01       	movw	r30, r20
 a38:	aa 27       	eor	r26, r26
 a3a:	28 30       	cpi	r18, 0x08	; 8
 a3c:	51 f1       	breq	.+84     	; 0xa92 <__ultoa_invert+0x5c>
 a3e:	20 31       	cpi	r18, 0x10	; 16
 a40:	81 f1       	breq	.+96     	; 0xaa2 <__ultoa_invert+0x6c>
 a42:	e8 94       	clt
 a44:	6f 93       	push	r22
 a46:	6e 7f       	andi	r22, 0xFE	; 254
 a48:	6e 5f       	subi	r22, 0xFE	; 254
 a4a:	7f 4f       	sbci	r23, 0xFF	; 255
 a4c:	8f 4f       	sbci	r24, 0xFF	; 255
 a4e:	9f 4f       	sbci	r25, 0xFF	; 255
 a50:	af 4f       	sbci	r26, 0xFF	; 255
 a52:	b1 e0       	ldi	r27, 0x01	; 1
 a54:	3e d0       	rcall	.+124    	; 0xad2 <__ultoa_invert+0x9c>
 a56:	b4 e0       	ldi	r27, 0x04	; 4
 a58:	3c d0       	rcall	.+120    	; 0xad2 <__ultoa_invert+0x9c>
 a5a:	67 0f       	add	r22, r23
 a5c:	78 1f       	adc	r23, r24
 a5e:	89 1f       	adc	r24, r25
 a60:	9a 1f       	adc	r25, r26
 a62:	a1 1d       	adc	r26, r1
 a64:	68 0f       	add	r22, r24
 a66:	79 1f       	adc	r23, r25
 a68:	8a 1f       	adc	r24, r26
 a6a:	91 1d       	adc	r25, r1
 a6c:	a1 1d       	adc	r26, r1
 a6e:	6a 0f       	add	r22, r26
 a70:	71 1d       	adc	r23, r1
 a72:	81 1d       	adc	r24, r1
 a74:	91 1d       	adc	r25, r1
 a76:	a1 1d       	adc	r26, r1
 a78:	20 d0       	rcall	.+64     	; 0xaba <__ultoa_invert+0x84>
 a7a:	09 f4       	brne	.+2      	; 0xa7e <__ultoa_invert+0x48>
 a7c:	68 94       	set
 a7e:	3f 91       	pop	r19
 a80:	2a e0       	ldi	r18, 0x0A	; 10
 a82:	26 9f       	mul	r18, r22
 a84:	11 24       	eor	r1, r1
 a86:	30 19       	sub	r19, r0
 a88:	30 5d       	subi	r19, 0xD0	; 208
 a8a:	31 93       	st	Z+, r19
 a8c:	de f6       	brtc	.-74     	; 0xa44 <__ultoa_invert+0xe>
 a8e:	cf 01       	movw	r24, r30
 a90:	08 95       	ret
 a92:	46 2f       	mov	r20, r22
 a94:	47 70       	andi	r20, 0x07	; 7
 a96:	40 5d       	subi	r20, 0xD0	; 208
 a98:	41 93       	st	Z+, r20
 a9a:	b3 e0       	ldi	r27, 0x03	; 3
 a9c:	0f d0       	rcall	.+30     	; 0xabc <__ultoa_invert+0x86>
 a9e:	c9 f7       	brne	.-14     	; 0xa92 <__ultoa_invert+0x5c>
 aa0:	f6 cf       	rjmp	.-20     	; 0xa8e <__ultoa_invert+0x58>
 aa2:	46 2f       	mov	r20, r22
 aa4:	4f 70       	andi	r20, 0x0F	; 15
 aa6:	40 5d       	subi	r20, 0xD0	; 208
 aa8:	4a 33       	cpi	r20, 0x3A	; 58
 aaa:	18 f0       	brcs	.+6      	; 0xab2 <__ultoa_invert+0x7c>
 aac:	49 5d       	subi	r20, 0xD9	; 217
 aae:	31 fd       	sbrc	r19, 1
 ab0:	40 52       	subi	r20, 0x20	; 32
 ab2:	41 93       	st	Z+, r20
 ab4:	02 d0       	rcall	.+4      	; 0xaba <__ultoa_invert+0x84>
 ab6:	a9 f7       	brne	.-22     	; 0xaa2 <__ultoa_invert+0x6c>
 ab8:	ea cf       	rjmp	.-44     	; 0xa8e <__ultoa_invert+0x58>
 aba:	b4 e0       	ldi	r27, 0x04	; 4
 abc:	a6 95       	lsr	r26
 abe:	97 95       	ror	r25
 ac0:	87 95       	ror	r24
 ac2:	77 95       	ror	r23
 ac4:	67 95       	ror	r22
 ac6:	ba 95       	dec	r27
 ac8:	c9 f7       	brne	.-14     	; 0xabc <__ultoa_invert+0x86>
 aca:	00 97       	sbiw	r24, 0x00	; 0
 acc:	61 05       	cpc	r22, r1
 ace:	71 05       	cpc	r23, r1
 ad0:	08 95       	ret
 ad2:	9b 01       	movw	r18, r22
 ad4:	ac 01       	movw	r20, r24
 ad6:	0a 2e       	mov	r0, r26
 ad8:	06 94       	lsr	r0
 ada:	57 95       	ror	r21
 adc:	47 95       	ror	r20
 ade:	37 95       	ror	r19
 ae0:	27 95       	ror	r18
 ae2:	ba 95       	dec	r27
 ae4:	c9 f7       	brne	.-14     	; 0xad8 <__ultoa_invert+0xa2>
 ae6:	62 0f       	add	r22, r18
 ae8:	73 1f       	adc	r23, r19
 aea:	84 1f       	adc	r24, r20
 aec:	95 1f       	adc	r25, r21
 aee:	a0 1d       	adc	r26, r0
 af0:	08 95       	ret

00000af2 <__prologue_saves__>:
 af2:	2f 92       	push	r2
 af4:	3f 92       	push	r3
 af6:	4f 92       	push	r4
 af8:	5f 92       	push	r5
 afa:	6f 92       	push	r6
 afc:	7f 92       	push	r7
 afe:	8f 92       	push	r8
 b00:	9f 92       	push	r9
 b02:	af 92       	push	r10
 b04:	bf 92       	push	r11
 b06:	cf 92       	push	r12
 b08:	df 92       	push	r13
 b0a:	ef 92       	push	r14
 b0c:	ff 92       	push	r15
 b0e:	0f 93       	push	r16
 b10:	1f 93       	push	r17
 b12:	cf 93       	push	r28
 b14:	df 93       	push	r29
 b16:	cd b7       	in	r28, 0x3d	; 61
 b18:	de b7       	in	r29, 0x3e	; 62
 b1a:	ca 1b       	sub	r28, r26
 b1c:	db 0b       	sbc	r29, r27
 b1e:	0f b6       	in	r0, 0x3f	; 63
 b20:	f8 94       	cli
 b22:	de bf       	out	0x3e, r29	; 62
 b24:	0f be       	out	0x3f, r0	; 63
 b26:	cd bf       	out	0x3d, r28	; 61
 b28:	09 94       	ijmp

00000b2a <__epilogue_restores__>:
 b2a:	2a 88       	ldd	r2, Y+18	; 0x12
 b2c:	39 88       	ldd	r3, Y+17	; 0x11
 b2e:	48 88       	ldd	r4, Y+16	; 0x10
 b30:	5f 84       	ldd	r5, Y+15	; 0x0f
 b32:	6e 84       	ldd	r6, Y+14	; 0x0e
 b34:	7d 84       	ldd	r7, Y+13	; 0x0d
 b36:	8c 84       	ldd	r8, Y+12	; 0x0c
 b38:	9b 84       	ldd	r9, Y+11	; 0x0b
 b3a:	aa 84       	ldd	r10, Y+10	; 0x0a
 b3c:	b9 84       	ldd	r11, Y+9	; 0x09
 b3e:	c8 84       	ldd	r12, Y+8	; 0x08
 b40:	df 80       	ldd	r13, Y+7	; 0x07
 b42:	ee 80       	ldd	r14, Y+6	; 0x06
 b44:	fd 80       	ldd	r15, Y+5	; 0x05
 b46:	0c 81       	ldd	r16, Y+4	; 0x04
 b48:	1b 81       	ldd	r17, Y+3	; 0x03
 b4a:	aa 81       	ldd	r26, Y+2	; 0x02
 b4c:	b9 81       	ldd	r27, Y+1	; 0x01
 b4e:	ce 0f       	add	r28, r30
 b50:	d1 1d       	adc	r29, r1
 b52:	0f b6       	in	r0, 0x3f	; 63
 b54:	f8 94       	cli
 b56:	de bf       	out	0x3e, r29	; 62
 b58:	0f be       	out	0x3f, r0	; 63
 b5a:	cd bf       	out	0x3d, r28	; 61
 b5c:	ed 01       	movw	r28, r26
 b5e:	08 95       	ret

00000b60 <_exit>:
 b60:	f8 94       	cli

00000b62 <__stop_program>:
 b62:	ff cf       	rjmp	.-2      	; 0xb62 <__stop_program>
